OpenShadingLanguage 1.00
# Compiled by oslc 1.3.2
shader node_noise_texture
param	int	use_mapping	0 		 %read{2,2} %write{2147483647,-1}
param	matrix	mapping	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0		 %read{3,3} %write{2147483647,-1}
param	float	Distortion	0 		 %read{8,3352} %write{2147483647,-1}
param	float	Scale	5 		 %read{5,5} %write{2147483647,-1}
param	float	Detail	2 		 %read{3360,7946} %write{2147483647,-1}
param	point	Vector	0 0 0 		 %read{1,1} %write{0,0}
oparam	float	Fac	0 		 %read{10230,10231} %write{5632,10231}
oparam	color	Color	0 0 0 		 %read{2147483647,-1} %write{10230,10230}
global	point	P	 %read{0,0} %write{2147483647,-1}
local	float	___607_r	 %read{46,10174} %write{46,10174}
local	float	___607_g	 %read{46,10174} %write{46,10174}
local	float	___607_b	 %read{46,10174} %write{46,10174}
local	int	___608_xx	 %read{46,10174} %write{46,10174}
local	int	___608_yy	 %read{46,10174} %write{46,10174}
local	int	___608_zz	 %read{46,10174} %write{46,10174}
local	int	___608_xi	 %read{46,10020} %write{35,10007}
local	int	___608_yi	 %read{46,10024} %write{38,10010}
local	int	___608_zi	 %read{46,10028} %write{41,10013}
local	point	___614_ip	 %read{46,10174} %write{46,10174}
local	point	___614_vp	 %read{46,10174} %write{46,10174}
local	point	___614_pd	 %read{46,10174} %write{46,10174}
local	float	___614_d	 %read{46,10174} %write{46,10174}
local	float[4]	___619_da	 %read{46,9812} %write{42,9811}
local	point[4]	___619_pa	 %read{46,9811} %write{46,9811}
local	float[4]	___620_da	 %read{766,10176} %write{762,10174}
local	point[4]	___620_pa	 %read{766,10174} %write{766,10174}
local	float	___626_t	 %read{1110,10182} %write{1109,10178}
local	float	___633_f	 %read{20,9094} %write{15,9088}
local	float	___640_fscale	 %read{3363,9079} %write{3356,9074}
local	float	___640_amp	 %read{3363,10196} %write{3357,9074}
local	float	___640_sum	 %read{3363,10228} %write{3358,10227}
local	int	___640_i	 %read{3363,9074} %write{3363,9074}
local	int	___640_n	 %read{3363,10222} %write{3362,7948}
local	float	___640_octaves	 %read{3362,9076} %write{3361,7947}
local	float	___642_t	 %read{3363,9074} %write{3363,9074}
local	float	___640_rmd	 %read{4491,10217} %write{4490,9076}
local	float	___643_t	 %read{4529,10196} %write{4506,10195}
local	float	___643_sum2	 %read{5628,10217} %write{5611,10214}
local	point	___646_r	 %read{1160,3354} %write{1124,3353}
local	int	___646_hard	 %read{4479,10192} %write{7,7}
local	point	p	 %read{3,5} %write{1,3}
local	string	Basis	 %read{12,10187} %write{4,4}
const	string	$const1	"Perlin"		 %read{4,9081} %write{2147483647,-1}
temp	point	$tmp1	 %read{10,7939} %write{5,7881}
const	string	$const2	"noise"		 %read{6,6} %write{2147483647,-1}
const	int	$const3	0		 %read{7,10176} %write{2147483647,-1}
const	float	$const4	0		 %read{8,10191} %write{2147483647,-1}
temp	int	$tmp2	 %read{9,9} %write{8,8}
temp	float	$tmp3	 %read{46,1123} %write{23,1122}
const	point	$const5	13.5 13.5 13.5		 %read{10,2239} %write{2147483647,-1}
temp	point	$tmp5	 %read{18,1120} %write{10,1105}
const	string	$const6	"noise_basis"		 %read{11,9080} %write{2147483647,-1}
temp	int	$tmp6	 %read{13,13} %write{12,12}
const	int	$const7	1		 %read{16,10224} %write{2147483647,-1}
const	string	$const8	"safe_noise"		 %read{14,9083} %write{2147483647,-1}
temp	int	$tmp7	 %read{17,17} %write{16,16}
const	string	$const9	"perlin"		 %read{18,9087} %write{2147483647,-1}
temp	int	$tmp8	 %read{21,21} %write{20,20}
temp	int	$tmp9	 %read{22,22} %write{21,21}
const	float	$const10	0.5		 %read{23,9092} %write{2147483647,-1}
const	string	$const11	"Voronoi F1"		 %read{27,9096} %write{2147483647,-1}
temp	int	$tmp10	 %read{28,28} %write{27,27}
const	string	$const12	"voronoi_F1S"		 %read{29,9098} %write{2147483647,-1}
const	float	$const13	2		 %read{204,10193} %write{2147483647,-1}
temp	float	$tmp11	 %read{204,204} %write{203,203}
const	string	$const14	"voronoi_F1"		 %read{30,9099} %write{2147483647,-1}
const	string	$const15	"voronoi_Fn"		 %read{31,9640} %write{2147483647,-1}
const	string	$const16	"Distance Squared"		 %read{79,10103} %write{2147483647,-1}
const	string	$const17	"voronoi"		 %read{32,10004} %write{2147483647,-1}
temp	float	$tmp12	 %read{35,35} %write{34,34}
temp	float	$tmp13	 %read{34,34} %write{33,33}
temp	float	$tmp14	 %read{38,38} %write{37,37}
temp	float	$tmp15	 %read{37,37} %write{36,36}
temp	float	$tmp16	 %read{41,41} %write{40,40}
const	int	$const18	2		 %read{39,10209} %write{2147483647,-1}
temp	float	$tmp17	 %read{40,40} %write{39,39}
const	float	$const19	1e+10		 %read{42,10017} %write{2147483647,-1}
const	int	$const20	3		 %read{45,10168} %write{2147483647,-1}
temp	int	$tmp18	 %read{49,49} %write{48,48}
temp	int	$tmp19	 %read{46,202} %write{46,202}
temp	int	$tmp20	 %read{53,53} %write{52,52}
temp	int	$tmp21	 %read{50,200} %write{50,200}
temp	int	$tmp22	 %read{57,57} %write{56,56}
temp	int	$tmp23	 %read{54,198} %write{54,198}
temp	float	$tmp24	 %read{61,61} %write{58,58}
temp	float	$tmp25	 %read{61,61} %write{59,59}
temp	float	$tmp26	 %read{61,61} %write{60,60}
temp	color	$tmp27	 %read{75,75} %write{74,74}
const	string	$const21	"cellnoise_color"		 %read{62,10034} %write{2147483647,-1}
temp	point	$tmp28	 %read{68,68} %write{67,67}
temp	float	$tmp29	 %read{67,67} %write{64,64}
temp	float	$tmp30	 %read{67,67} %write{65,65}
temp	float	$tmp31	 %read{67,67} %write{66,66}
temp	point	$tmp32	 %read{73,73} %write{72,72}
temp	float	$tmp33	 %read{72,72} %write{69,69}
temp	float	$tmp34	 %read{72,72} %write{70,70}
temp	float	$tmp35	 %read{72,72} %write{71,71}
temp	point	$tmp36	 %read{77,77} %write{76,76}
const	string	$const22	"voronoi_distance"		 %read{78,10050} %write{2147483647,-1}
temp	int	$tmp37	 %read{80,80} %write{79,79}
const	string	$const23	"Actual Distance"		 %read{83,10055} %write{2147483647,-1}
temp	int	$tmp38	 %read{84,84} %write{83,83}
const	string	$const24	"Manhattan"		 %read{87,10059} %write{2147483647,-1}
temp	int	$tmp39	 %read{88,88} %write{87,87}
temp	float	$tmp40	 %read{93,93} %write{90,90}
temp	float	$tmp41	 %read{90,90} %write{89,89}
temp	float	$tmp42	 %read{93,93} %write{92,92}
temp	float	$tmp43	 %read{92,92} %write{91,91}
temp	float	$tmp44	 %read{96,96} %write{93,93}
temp	float	$tmp45	 %read{96,96} %write{95,95}
temp	float	$tmp46	 %read{95,95} %write{94,94}
const	string	$const25	"Chebychev"		 %read{98,10070} %write{2147483647,-1}
temp	int	$tmp47	 %read{99,99} %write{98,98}
temp	float	$tmp48	 %read{107,107} %write{101,101}
temp	float	$tmp49	 %read{101,101} %write{100,100}
temp	float	$tmp50	 %read{107,107} %write{106,106}
temp	float	$tmp51	 %read{106,106} %write{103,103}
temp	float	$tmp52	 %read{103,103} %write{102,102}
temp	float	$tmp53	 %read{106,106} %write{105,105}
temp	float	$tmp54	 %read{105,105} %write{104,104}
const	string	$const26	"Minkovsky 1/2"		 %read{109,10081} %write{2147483647,-1}
temp	int	$tmp55	 %read{110,110} %write{109,109}
temp	float	$tmp56	 %read{117,117} %write{113,113}
temp	float	$tmp57	 %read{113,113} %write{112,112}
temp	float	$tmp58	 %read{112,112} %write{111,111}
temp	float	$tmp59	 %read{117,117} %write{116,116}
temp	float	$tmp60	 %read{116,116} %write{115,115}
temp	float	$tmp61	 %read{115,115} %write{114,114}
temp	float	$tmp62	 %read{121,121} %write{117,117}
temp	float	$tmp63	 %read{121,121} %write{120,120}
temp	float	$tmp64	 %read{120,120} %write{119,119}
temp	float	$tmp65	 %read{119,119} %write{118,118}
const	string	$const27	"Minkovsky 4"		 %read{123,10095} %write{2147483647,-1}
temp	int	$tmp66	 %read{124,124} %write{123,123}
temp	float	$tmp67	 %read{129,129} %write{128,128}
temp	float	$tmp68	 %read{128,128} %write{127,127}
temp	vector	$tmp69	 %read{127,127} %write{125,125}
temp	vector	$tmp70	 %read{127,127} %write{126,126}
const	string	$const28	"Minkovsky"		 %read{131,10103} %write{2147483647,-1}
temp	int	$tmp71	 %read{132,132} %write{131,131}
temp	float	$tmp72	 %read{139,139} %write{135,135}
temp	float	$tmp73	 %read{135,135} %write{134,134}
temp	float	$tmp74	 %read{134,134} %write{133,133}
temp	float	$tmp75	 %read{139,139} %write{138,138}
temp	float	$tmp76	 %read{138,138} %write{137,137}
temp	float	$tmp77	 %read{137,137} %write{136,136}
temp	float	$tmp78	 %read{143,143} %write{139,139}
temp	float	$tmp79	 %read{143,143} %write{142,142}
temp	float	$tmp80	 %read{142,142} %write{141,141}
temp	float	$tmp81	 %read{141,141} %write{140,140}
temp	float	$tmp82	 %read{145,145} %write{143,143}
const	float	$const29	1		 %read{144,10215} %write{2147483647,-1}
temp	float	$tmp83	 %read{145,145} %write{144,144}
temp	point	$tmp84	 %read{152,152} %write{151,151}
temp	float	$tmp85	 %read{151,151} %write{148,148}
temp	float	$tmp86	 %read{151,151} %write{149,149}
temp	float	$tmp87	 %read{151,151} %write{150,150}
temp	float	$tmp88	 %read{154,154} %write{153,153}
temp	int	$tmp89	 %read{155,155} %write{154,154}
temp	float	$tmp90	 %read{157,157} %write{156,156}
temp	float	$tmp91	 %read{159,159} %write{158,158}
temp	float	$tmp92	 %read{161,161} %write{160,160}
temp	point	$tmp93	 %read{164,164} %write{163,163}
temp	point	$tmp94	 %read{166,166} %write{165,165}
temp	point	$tmp95	 %read{168,168} %write{167,167}
temp	float	$tmp96	 %read{171,171} %write{170,170}
temp	int	$tmp97	 %read{172,172} %write{171,171}
temp	float	$tmp98	 %read{174,174} %write{173,173}
temp	float	$tmp99	 %read{176,176} %write{175,175}
temp	point	$tmp100	 %read{179,179} %write{178,178}
temp	point	$tmp101	 %read{181,181} %write{180,180}
temp	float	$tmp102	 %read{184,184} %write{183,183}
temp	int	$tmp103	 %read{185,185} %write{184,184}
temp	float	$tmp104	 %read{187,187} %write{186,186}
temp	point	$tmp105	 %read{190,190} %write{189,189}
temp	float	$tmp106	 %read{193,193} %write{192,192}
temp	int	$tmp107	 %read{194,194} %write{193,193}
temp	int	$tmp108	 %read{2147483647,-1} %write{197,197}
temp	int	$tmp109	 %read{2147483647,-1} %write{199,199}
temp	int	$tmp110	 %read{2147483647,-1} %write{201,201}
temp	float	$tmp111	 %read{205,205} %write{204,204}
const	string	$const30	"Voronoi F2"		 %read{207,9276} %write{2147483647,-1}
temp	int	$tmp112	 %read{208,208} %write{207,207}
const	string	$const31	"voronoi_F2S"		 %read{209,9278} %write{2147483647,-1}
temp	float	$tmp113	 %read{384,384} %write{383,383}
const	string	$const32	"voronoi_F2"		 %read{210,9279} %write{2147483647,-1}
temp	float	$tmp114	 %read{215,215} %write{214,214}
temp	float	$tmp115	 %read{214,214} %write{213,213}
temp	float	$tmp116	 %read{218,218} %write{217,217}
temp	float	$tmp117	 %read{217,217} %write{216,216}
temp	float	$tmp118	 %read{221,221} %write{220,220}
temp	float	$tmp119	 %read{220,220} %write{219,219}
temp	int	$tmp120	 %read{229,229} %write{228,228}
temp	int	$tmp121	 %read{226,382} %write{226,382}
temp	int	$tmp122	 %read{233,233} %write{232,232}
temp	int	$tmp123	 %read{230,380} %write{230,380}
temp	int	$tmp124	 %read{237,237} %write{236,236}
temp	int	$tmp125	 %read{234,378} %write{234,378}
temp	float	$tmp126	 %read{241,241} %write{238,238}
temp	float	$tmp127	 %read{241,241} %write{239,239}
temp	float	$tmp128	 %read{241,241} %write{240,240}
temp	color	$tmp129	 %read{255,255} %write{254,254}
temp	point	$tmp130	 %read{248,248} %write{247,247}
temp	float	$tmp131	 %read{247,247} %write{244,244}
temp	float	$tmp132	 %read{247,247} %write{245,245}
temp	float	$tmp133	 %read{247,247} %write{246,246}
temp	point	$tmp134	 %read{253,253} %write{252,252}
temp	float	$tmp135	 %read{252,252} %write{249,249}
temp	float	$tmp136	 %read{252,252} %write{250,250}
temp	float	$tmp137	 %read{252,252} %write{251,251}
temp	point	$tmp138	 %read{257,257} %write{256,256}
temp	int	$tmp139	 %read{260,260} %write{259,259}
temp	int	$tmp140	 %read{264,264} %write{263,263}
temp	int	$tmp141	 %read{268,268} %write{267,267}
temp	float	$tmp142	 %read{273,273} %write{270,270}
temp	float	$tmp143	 %read{270,270} %write{269,269}
temp	float	$tmp144	 %read{273,273} %write{272,272}
temp	float	$tmp145	 %read{272,272} %write{271,271}
temp	float	$tmp146	 %read{276,276} %write{273,273}
temp	float	$tmp147	 %read{276,276} %write{275,275}
temp	float	$tmp148	 %read{275,275} %write{274,274}
temp	int	$tmp149	 %read{279,279} %write{278,278}
temp	float	$tmp150	 %read{287,287} %write{281,281}
temp	float	$tmp151	 %read{281,281} %write{280,280}
temp	float	$tmp152	 %read{287,287} %write{286,286}
temp	float	$tmp153	 %read{286,286} %write{283,283}
temp	float	$tmp154	 %read{283,283} %write{282,282}
temp	float	$tmp155	 %read{286,286} %write{285,285}
temp	float	$tmp156	 %read{285,285} %write{284,284}
temp	int	$tmp157	 %read{290,290} %write{289,289}
temp	float	$tmp158	 %read{297,297} %write{293,293}
temp	float	$tmp159	 %read{293,293} %write{292,292}
temp	float	$tmp160	 %read{292,292} %write{291,291}
temp	float	$tmp161	 %read{297,297} %write{296,296}
temp	float	$tmp162	 %read{296,296} %write{295,295}
temp	float	$tmp163	 %read{295,295} %write{294,294}
temp	float	$tmp164	 %read{301,301} %write{297,297}
temp	float	$tmp165	 %read{301,301} %write{300,300}
temp	float	$tmp166	 %read{300,300} %write{299,299}
temp	float	$tmp167	 %read{299,299} %write{298,298}
temp	int	$tmp168	 %read{304,304} %write{303,303}
temp	float	$tmp169	 %read{309,309} %write{308,308}
temp	float	$tmp170	 %read{308,308} %write{307,307}
temp	vector	$tmp171	 %read{307,307} %write{305,305}
temp	vector	$tmp172	 %read{307,307} %write{306,306}
temp	int	$tmp173	 %read{312,312} %write{311,311}
temp	float	$tmp174	 %read{319,319} %write{315,315}
temp	float	$tmp175	 %read{315,315} %write{314,314}
temp	float	$tmp176	 %read{314,314} %write{313,313}
temp	float	$tmp177	 %read{319,319} %write{318,318}
temp	float	$tmp178	 %read{318,318} %write{317,317}
temp	float	$tmp179	 %read{317,317} %write{316,316}
temp	float	$tmp180	 %read{323,323} %write{319,319}
temp	float	$tmp181	 %read{323,323} %write{322,322}
temp	float	$tmp182	 %read{322,322} %write{321,321}
temp	float	$tmp183	 %read{321,321} %write{320,320}
temp	float	$tmp184	 %read{325,325} %write{323,323}
temp	float	$tmp185	 %read{325,325} %write{324,324}
temp	point	$tmp186	 %read{332,332} %write{331,331}
temp	float	$tmp187	 %read{331,331} %write{328,328}
temp	float	$tmp188	 %read{331,331} %write{329,329}
temp	float	$tmp189	 %read{331,331} %write{330,330}
temp	float	$tmp190	 %read{334,334} %write{333,333}
temp	int	$tmp191	 %read{335,335} %write{334,334}
temp	float	$tmp192	 %read{337,337} %write{336,336}
temp	float	$tmp193	 %read{339,339} %write{338,338}
temp	float	$tmp194	 %read{341,341} %write{340,340}
temp	point	$tmp195	 %read{344,344} %write{343,343}
temp	point	$tmp196	 %read{346,346} %write{345,345}
temp	point	$tmp197	 %read{348,348} %write{347,347}
temp	float	$tmp198	 %read{351,351} %write{350,350}
temp	int	$tmp199	 %read{352,352} %write{351,351}
temp	float	$tmp200	 %read{354,354} %write{353,353}
temp	float	$tmp201	 %read{356,356} %write{355,355}
temp	point	$tmp202	 %read{359,359} %write{358,358}
temp	point	$tmp203	 %read{361,361} %write{360,360}
temp	float	$tmp204	 %read{364,364} %write{363,363}
temp	int	$tmp205	 %read{365,365} %write{364,364}
temp	float	$tmp206	 %read{367,367} %write{366,366}
temp	point	$tmp207	 %read{370,370} %write{369,369}
temp	float	$tmp208	 %read{373,373} %write{372,372}
temp	int	$tmp209	 %read{374,374} %write{373,373}
temp	int	$tmp210	 %read{2147483647,-1} %write{377,377}
temp	int	$tmp211	 %read{2147483647,-1} %write{379,379}
temp	int	$tmp212	 %read{2147483647,-1} %write{381,381}
temp	float	$tmp213	 %read{385,385} %write{384,384}
const	string	$const33	"Voronoi F3"		 %read{387,9456} %write{2147483647,-1}
temp	int	$tmp214	 %read{388,388} %write{387,387}
const	string	$const34	"voronoi_F3S"		 %read{389,9458} %write{2147483647,-1}
temp	float	$tmp215	 %read{564,564} %write{563,563}
const	string	$const35	"voronoi_F3"		 %read{390,9459} %write{2147483647,-1}
temp	float	$tmp216	 %read{395,395} %write{394,394}
temp	float	$tmp217	 %read{394,394} %write{393,393}
temp	float	$tmp218	 %read{398,398} %write{397,397}
temp	float	$tmp219	 %read{397,397} %write{396,396}
temp	float	$tmp220	 %read{401,401} %write{400,400}
temp	float	$tmp221	 %read{400,400} %write{399,399}
temp	int	$tmp222	 %read{409,409} %write{408,408}
temp	int	$tmp223	 %read{406,562} %write{406,562}
temp	int	$tmp224	 %read{413,413} %write{412,412}
temp	int	$tmp225	 %read{410,560} %write{410,560}
temp	int	$tmp226	 %read{417,417} %write{416,416}
temp	int	$tmp227	 %read{414,558} %write{414,558}
temp	float	$tmp228	 %read{421,421} %write{418,418}
temp	float	$tmp229	 %read{421,421} %write{419,419}
temp	float	$tmp230	 %read{421,421} %write{420,420}
temp	color	$tmp231	 %read{435,435} %write{434,434}
temp	point	$tmp232	 %read{428,428} %write{427,427}
temp	float	$tmp233	 %read{427,427} %write{424,424}
temp	float	$tmp234	 %read{427,427} %write{425,425}
temp	float	$tmp235	 %read{427,427} %write{426,426}
temp	point	$tmp236	 %read{433,433} %write{432,432}
temp	float	$tmp237	 %read{432,432} %write{429,429}
temp	float	$tmp238	 %read{432,432} %write{430,430}
temp	float	$tmp239	 %read{432,432} %write{431,431}
temp	point	$tmp240	 %read{437,437} %write{436,436}
temp	int	$tmp241	 %read{440,440} %write{439,439}
temp	int	$tmp242	 %read{444,444} %write{443,443}
temp	int	$tmp243	 %read{448,448} %write{447,447}
temp	float	$tmp244	 %read{453,453} %write{450,450}
temp	float	$tmp245	 %read{450,450} %write{449,449}
temp	float	$tmp246	 %read{453,453} %write{452,452}
temp	float	$tmp247	 %read{452,452} %write{451,451}
temp	float	$tmp248	 %read{456,456} %write{453,453}
temp	float	$tmp249	 %read{456,456} %write{455,455}
temp	float	$tmp250	 %read{455,455} %write{454,454}
temp	int	$tmp251	 %read{459,459} %write{458,458}
temp	float	$tmp252	 %read{467,467} %write{461,461}
temp	float	$tmp253	 %read{461,461} %write{460,460}
temp	float	$tmp254	 %read{467,467} %write{466,466}
temp	float	$tmp255	 %read{466,466} %write{463,463}
temp	float	$tmp256	 %read{463,463} %write{462,462}
temp	float	$tmp257	 %read{466,466} %write{465,465}
temp	float	$tmp258	 %read{465,465} %write{464,464}
temp	int	$tmp259	 %read{470,470} %write{469,469}
temp	float	$tmp260	 %read{477,477} %write{473,473}
temp	float	$tmp261	 %read{473,473} %write{472,472}
temp	float	$tmp262	 %read{472,472} %write{471,471}
temp	float	$tmp263	 %read{477,477} %write{476,476}
temp	float	$tmp264	 %read{476,476} %write{475,475}
temp	float	$tmp265	 %read{475,475} %write{474,474}
temp	float	$tmp266	 %read{481,481} %write{477,477}
temp	float	$tmp267	 %read{481,481} %write{480,480}
temp	float	$tmp268	 %read{480,480} %write{479,479}
temp	float	$tmp269	 %read{479,479} %write{478,478}
temp	int	$tmp270	 %read{484,484} %write{483,483}
temp	float	$tmp271	 %read{489,489} %write{488,488}
temp	float	$tmp272	 %read{488,488} %write{487,487}
temp	vector	$tmp273	 %read{487,487} %write{485,485}
temp	vector	$tmp274	 %read{487,487} %write{486,486}
temp	int	$tmp275	 %read{492,492} %write{491,491}
temp	float	$tmp276	 %read{499,499} %write{495,495}
temp	float	$tmp277	 %read{495,495} %write{494,494}
temp	float	$tmp278	 %read{494,494} %write{493,493}
temp	float	$tmp279	 %read{499,499} %write{498,498}
temp	float	$tmp280	 %read{498,498} %write{497,497}
temp	float	$tmp281	 %read{497,497} %write{496,496}
temp	float	$tmp282	 %read{503,503} %write{499,499}
temp	float	$tmp283	 %read{503,503} %write{502,502}
temp	float	$tmp284	 %read{502,502} %write{501,501}
temp	float	$tmp285	 %read{501,501} %write{500,500}
temp	float	$tmp286	 %read{505,505} %write{503,503}
temp	float	$tmp287	 %read{505,505} %write{504,504}
temp	point	$tmp288	 %read{512,512} %write{511,511}
temp	float	$tmp289	 %read{511,511} %write{508,508}
temp	float	$tmp290	 %read{511,511} %write{509,509}
temp	float	$tmp291	 %read{511,511} %write{510,510}
temp	float	$tmp292	 %read{514,514} %write{513,513}
temp	int	$tmp293	 %read{515,515} %write{514,514}
temp	float	$tmp294	 %read{517,517} %write{516,516}
temp	float	$tmp295	 %read{519,519} %write{518,518}
temp	float	$tmp296	 %read{521,521} %write{520,520}
temp	point	$tmp297	 %read{524,524} %write{523,523}
temp	point	$tmp298	 %read{526,526} %write{525,525}
temp	point	$tmp299	 %read{528,528} %write{527,527}
temp	float	$tmp300	 %read{531,531} %write{530,530}
temp	int	$tmp301	 %read{532,532} %write{531,531}
temp	float	$tmp302	 %read{534,534} %write{533,533}
temp	float	$tmp303	 %read{536,536} %write{535,535}
temp	point	$tmp304	 %read{539,539} %write{538,538}
temp	point	$tmp305	 %read{541,541} %write{540,540}
temp	float	$tmp306	 %read{544,544} %write{543,543}
temp	int	$tmp307	 %read{545,545} %write{544,544}
temp	float	$tmp308	 %read{547,547} %write{546,546}
temp	point	$tmp309	 %read{550,550} %write{549,549}
temp	float	$tmp310	 %read{553,553} %write{552,552}
temp	int	$tmp311	 %read{554,554} %write{553,553}
temp	int	$tmp312	 %read{2147483647,-1} %write{557,557}
temp	int	$tmp313	 %read{2147483647,-1} %write{559,559}
temp	int	$tmp314	 %read{2147483647,-1} %write{561,561}
temp	float	$tmp315	 %read{565,565} %write{564,564}
const	string	$const36	"Voronoi F4"		 %read{567,9636} %write{2147483647,-1}
temp	int	$tmp316	 %read{568,568} %write{567,567}
const	string	$const37	"voronoi_F4S"		 %read{569,9638} %write{2147483647,-1}
temp	float	$tmp317	 %read{744,744} %write{743,743}
const	string	$const38	"voronoi_F4"		 %read{570,9639} %write{2147483647,-1}
temp	float	$tmp318	 %read{575,575} %write{574,574}
temp	float	$tmp319	 %read{574,574} %write{573,573}
temp	float	$tmp320	 %read{578,578} %write{577,577}
temp	float	$tmp321	 %read{577,577} %write{576,576}
temp	float	$tmp322	 %read{581,581} %write{580,580}
temp	float	$tmp323	 %read{580,580} %write{579,579}
temp	int	$tmp324	 %read{589,589} %write{588,588}
temp	int	$tmp325	 %read{586,742} %write{586,742}
temp	int	$tmp326	 %read{593,593} %write{592,592}
temp	int	$tmp327	 %read{590,740} %write{590,740}
temp	int	$tmp328	 %read{597,597} %write{596,596}
temp	int	$tmp329	 %read{594,738} %write{594,738}
temp	float	$tmp330	 %read{601,601} %write{598,598}
temp	float	$tmp331	 %read{601,601} %write{599,599}
temp	float	$tmp332	 %read{601,601} %write{600,600}
temp	color	$tmp333	 %read{615,615} %write{614,614}
temp	point	$tmp334	 %read{608,608} %write{607,607}
temp	float	$tmp335	 %read{607,607} %write{604,604}
temp	float	$tmp336	 %read{607,607} %write{605,605}
temp	float	$tmp337	 %read{607,607} %write{606,606}
temp	point	$tmp338	 %read{613,613} %write{612,612}
temp	float	$tmp339	 %read{612,612} %write{609,609}
temp	float	$tmp340	 %read{612,612} %write{610,610}
temp	float	$tmp341	 %read{612,612} %write{611,611}
temp	point	$tmp342	 %read{617,617} %write{616,616}
temp	int	$tmp343	 %read{620,620} %write{619,619}
temp	int	$tmp344	 %read{624,624} %write{623,623}
temp	int	$tmp345	 %read{628,628} %write{627,627}
temp	float	$tmp346	 %read{633,633} %write{630,630}
temp	float	$tmp347	 %read{630,630} %write{629,629}
temp	float	$tmp348	 %read{633,633} %write{632,632}
temp	float	$tmp349	 %read{632,632} %write{631,631}
temp	float	$tmp350	 %read{636,636} %write{633,633}
temp	float	$tmp351	 %read{636,636} %write{635,635}
temp	float	$tmp352	 %read{635,635} %write{634,634}
temp	int	$tmp353	 %read{639,639} %write{638,638}
temp	float	$tmp354	 %read{647,647} %write{641,641}
temp	float	$tmp355	 %read{641,641} %write{640,640}
temp	float	$tmp356	 %read{647,647} %write{646,646}
temp	float	$tmp357	 %read{646,646} %write{643,643}
temp	float	$tmp358	 %read{643,643} %write{642,642}
temp	float	$tmp359	 %read{646,646} %write{645,645}
temp	float	$tmp360	 %read{645,645} %write{644,644}
temp	int	$tmp361	 %read{650,650} %write{649,649}
temp	float	$tmp362	 %read{657,657} %write{653,653}
temp	float	$tmp363	 %read{653,653} %write{652,652}
temp	float	$tmp364	 %read{652,652} %write{651,651}
temp	float	$tmp365	 %read{657,657} %write{656,656}
temp	float	$tmp366	 %read{656,656} %write{655,655}
temp	float	$tmp367	 %read{655,655} %write{654,654}
temp	float	$tmp368	 %read{661,661} %write{657,657}
temp	float	$tmp369	 %read{661,661} %write{660,660}
temp	float	$tmp370	 %read{660,660} %write{659,659}
temp	float	$tmp371	 %read{659,659} %write{658,658}
temp	int	$tmp372	 %read{664,664} %write{663,663}
temp	float	$tmp373	 %read{669,669} %write{668,668}
temp	float	$tmp374	 %read{668,668} %write{667,667}
temp	vector	$tmp375	 %read{667,667} %write{665,665}
temp	vector	$tmp376	 %read{667,667} %write{666,666}
temp	int	$tmp377	 %read{672,672} %write{671,671}
temp	float	$tmp378	 %read{679,679} %write{675,675}
temp	float	$tmp379	 %read{675,675} %write{674,674}
temp	float	$tmp380	 %read{674,674} %write{673,673}
temp	float	$tmp381	 %read{679,679} %write{678,678}
temp	float	$tmp382	 %read{678,678} %write{677,677}
temp	float	$tmp383	 %read{677,677} %write{676,676}
temp	float	$tmp384	 %read{683,683} %write{679,679}
temp	float	$tmp385	 %read{683,683} %write{682,682}
temp	float	$tmp386	 %read{682,682} %write{681,681}
temp	float	$tmp387	 %read{681,681} %write{680,680}
temp	float	$tmp388	 %read{685,685} %write{683,683}
temp	float	$tmp389	 %read{685,685} %write{684,684}
temp	point	$tmp390	 %read{692,692} %write{691,691}
temp	float	$tmp391	 %read{691,691} %write{688,688}
temp	float	$tmp392	 %read{691,691} %write{689,689}
temp	float	$tmp393	 %read{691,691} %write{690,690}
temp	float	$tmp394	 %read{694,694} %write{693,693}
temp	int	$tmp395	 %read{695,695} %write{694,694}
temp	float	$tmp396	 %read{697,697} %write{696,696}
temp	float	$tmp397	 %read{699,699} %write{698,698}
temp	float	$tmp398	 %read{701,701} %write{700,700}
temp	point	$tmp399	 %read{704,704} %write{703,703}
temp	point	$tmp400	 %read{706,706} %write{705,705}
temp	point	$tmp401	 %read{708,708} %write{707,707}
temp	float	$tmp402	 %read{711,711} %write{710,710}
temp	int	$tmp403	 %read{712,712} %write{711,711}
temp	float	$tmp404	 %read{714,714} %write{713,713}
temp	float	$tmp405	 %read{716,716} %write{715,715}
temp	point	$tmp406	 %read{719,719} %write{718,718}
temp	point	$tmp407	 %read{721,721} %write{720,720}
temp	float	$tmp408	 %read{724,724} %write{723,723}
temp	int	$tmp409	 %read{725,725} %write{724,724}
temp	float	$tmp410	 %read{727,727} %write{726,726}
temp	point	$tmp411	 %read{730,730} %write{729,729}
temp	float	$tmp412	 %read{733,733} %write{732,732}
temp	int	$tmp413	 %read{734,734} %write{733,733}
temp	int	$tmp414	 %read{2147483647,-1} %write{737,737}
temp	int	$tmp415	 %read{2147483647,-1} %write{739,739}
temp	int	$tmp416	 %read{2147483647,-1} %write{741,741}
temp	float	$tmp417	 %read{745,745} %write{744,744}
const	string	$const39	"Voronoi F2-F1"		 %read{747,9816} %write{2147483647,-1}
temp	int	$tmp418	 %read{748,748} %write{747,747}
const	string	$const40	"voronoi_F1F2S"		 %read{749,9818} %write{2147483647,-1}
temp	float	$tmp419	 %read{926,926} %write{925,925}
const	string	$const41	"voronoi_F1F2"		 %read{750,10002} %write{2147483647,-1}
const	string	$const42	"voronoi_FnFn"		 %read{751,10003} %write{2147483647,-1}
temp	float	$tmp420	 %read{755,755} %write{754,754}
temp	float	$tmp421	 %read{754,754} %write{753,753}
temp	float	$tmp422	 %read{758,758} %write{757,757}
temp	float	$tmp423	 %read{757,757} %write{756,756}
temp	float	$tmp424	 %read{761,761} %write{760,760}
temp	float	$tmp425	 %read{760,760} %write{759,759}
temp	int	$tmp426	 %read{769,769} %write{768,768}
temp	int	$tmp427	 %read{766,922} %write{766,922}
temp	int	$tmp428	 %read{773,773} %write{772,772}
temp	int	$tmp429	 %read{770,920} %write{770,920}
temp	int	$tmp430	 %read{777,777} %write{776,776}
temp	int	$tmp431	 %read{774,918} %write{774,918}
temp	float	$tmp432	 %read{781,781} %write{778,778}
temp	float	$tmp433	 %read{781,781} %write{779,779}
temp	float	$tmp434	 %read{781,781} %write{780,780}
temp	color	$tmp435	 %read{795,795} %write{794,794}
temp	point	$tmp436	 %read{788,788} %write{787,787}
temp	float	$tmp437	 %read{787,787} %write{784,784}
temp	float	$tmp438	 %read{787,787} %write{785,785}
temp	float	$tmp439	 %read{787,787} %write{786,786}
temp	point	$tmp440	 %read{793,793} %write{792,792}
temp	float	$tmp441	 %read{792,792} %write{789,789}
temp	float	$tmp442	 %read{792,792} %write{790,790}
temp	float	$tmp443	 %read{792,792} %write{791,791}
temp	point	$tmp444	 %read{797,797} %write{796,796}
temp	int	$tmp445	 %read{800,800} %write{799,799}
temp	int	$tmp446	 %read{804,804} %write{803,803}
temp	int	$tmp447	 %read{808,808} %write{807,807}
temp	float	$tmp448	 %read{813,813} %write{810,810}
temp	float	$tmp449	 %read{810,810} %write{809,809}
temp	float	$tmp450	 %read{813,813} %write{812,812}
temp	float	$tmp451	 %read{812,812} %write{811,811}
temp	float	$tmp452	 %read{816,816} %write{813,813}
temp	float	$tmp453	 %read{816,816} %write{815,815}
temp	float	$tmp454	 %read{815,815} %write{814,814}
temp	int	$tmp455	 %read{819,819} %write{818,818}
temp	float	$tmp456	 %read{827,827} %write{821,821}
temp	float	$tmp457	 %read{821,821} %write{820,820}
temp	float	$tmp458	 %read{827,827} %write{826,826}
temp	float	$tmp459	 %read{826,826} %write{823,823}
temp	float	$tmp460	 %read{823,823} %write{822,822}
temp	float	$tmp461	 %read{826,826} %write{825,825}
temp	float	$tmp462	 %read{825,825} %write{824,824}
temp	int	$tmp463	 %read{830,830} %write{829,829}
temp	float	$tmp464	 %read{837,837} %write{833,833}
temp	float	$tmp465	 %read{833,833} %write{832,832}
temp	float	$tmp466	 %read{832,832} %write{831,831}
temp	float	$tmp467	 %read{837,837} %write{836,836}
temp	float	$tmp468	 %read{836,836} %write{835,835}
temp	float	$tmp469	 %read{835,835} %write{834,834}
temp	float	$tmp470	 %read{841,841} %write{837,837}
temp	float	$tmp471	 %read{841,841} %write{840,840}
temp	float	$tmp472	 %read{840,840} %write{839,839}
temp	float	$tmp473	 %read{839,839} %write{838,838}
temp	int	$tmp474	 %read{844,844} %write{843,843}
temp	float	$tmp475	 %read{849,849} %write{848,848}
temp	float	$tmp476	 %read{848,848} %write{847,847}
temp	vector	$tmp477	 %read{847,847} %write{845,845}
temp	vector	$tmp478	 %read{847,847} %write{846,846}
temp	int	$tmp479	 %read{852,852} %write{851,851}
temp	float	$tmp480	 %read{859,859} %write{855,855}
temp	float	$tmp481	 %read{855,855} %write{854,854}
temp	float	$tmp482	 %read{854,854} %write{853,853}
temp	float	$tmp483	 %read{859,859} %write{858,858}
temp	float	$tmp484	 %read{858,858} %write{857,857}
temp	float	$tmp485	 %read{857,857} %write{856,856}
temp	float	$tmp486	 %read{863,863} %write{859,859}
temp	float	$tmp487	 %read{863,863} %write{862,862}
temp	float	$tmp488	 %read{862,862} %write{861,861}
temp	float	$tmp489	 %read{861,861} %write{860,860}
temp	float	$tmp490	 %read{865,865} %write{863,863}
temp	float	$tmp491	 %read{865,865} %write{864,864}
temp	point	$tmp492	 %read{872,872} %write{871,871}
temp	float	$tmp493	 %read{871,871} %write{868,868}
temp	float	$tmp494	 %read{871,871} %write{869,869}
temp	float	$tmp495	 %read{871,871} %write{870,870}
temp	float	$tmp496	 %read{874,874} %write{873,873}
temp	int	$tmp497	 %read{875,875} %write{874,874}
temp	float	$tmp498	 %read{877,877} %write{876,876}
temp	float	$tmp499	 %read{879,879} %write{878,878}
temp	float	$tmp500	 %read{881,881} %write{880,880}
temp	point	$tmp501	 %read{884,884} %write{883,883}
temp	point	$tmp502	 %read{886,886} %write{885,885}
temp	point	$tmp503	 %read{888,888} %write{887,887}
temp	float	$tmp504	 %read{891,891} %write{890,890}
temp	int	$tmp505	 %read{892,892} %write{891,891}
temp	float	$tmp506	 %read{894,894} %write{893,893}
temp	float	$tmp507	 %read{896,896} %write{895,895}
temp	point	$tmp508	 %read{899,899} %write{898,898}
temp	point	$tmp509	 %read{901,901} %write{900,900}
temp	float	$tmp510	 %read{904,904} %write{903,903}
temp	int	$tmp511	 %read{905,905} %write{904,904}
temp	float	$tmp512	 %read{907,907} %write{906,906}
temp	point	$tmp513	 %read{910,910} %write{909,909}
temp	float	$tmp514	 %read{913,913} %write{912,912}
temp	int	$tmp515	 %read{914,914} %write{913,913}
temp	int	$tmp516	 %read{2147483647,-1} %write{917,917}
temp	int	$tmp517	 %read{2147483647,-1} %write{919,919}
temp	int	$tmp518	 %read{2147483647,-1} %write{921,921}
temp	float	$tmp519	 %read{925,925} %write{923,923}
temp	float	$tmp520	 %read{925,925} %write{924,924}
temp	float	$tmp521	 %read{927,927} %write{926,926}
const	string	$const43	"Voronoi Crackle"		 %read{929,9998} %write{2147483647,-1}
temp	int	$tmp522	 %read{930,930} %write{929,929}
const	string	$const44	"voronoi_CrS"		 %read{931,10000} %write{2147483647,-1}
temp	float	$tmp523	 %read{1115,1115} %write{1112,1113}
const	string	$const45	"voronoi_Cr"		 %read{932,10001} %write{2147483647,-1}
const	float	$const46	10		 %read{1109,10178} %write{2147483647,-1}
temp	float	$tmp524	 %read{1109,1109} %write{1108,1108}
temp	float	$tmp525	 %read{938,938} %write{937,937}
temp	float	$tmp526	 %read{937,937} %write{936,936}
temp	float	$tmp527	 %read{941,941} %write{940,940}
temp	float	$tmp528	 %read{940,940} %write{939,939}
temp	float	$tmp529	 %read{944,944} %write{943,943}
temp	float	$tmp530	 %read{943,943} %write{942,942}
temp	int	$tmp531	 %read{952,952} %write{951,951}
temp	int	$tmp532	 %read{949,1105} %write{949,1105}
temp	int	$tmp533	 %read{956,956} %write{955,955}
temp	int	$tmp534	 %read{953,1103} %write{953,1103}
temp	int	$tmp535	 %read{960,960} %write{959,959}
temp	int	$tmp536	 %read{957,1101} %write{957,1101}
temp	float	$tmp537	 %read{964,964} %write{961,961}
temp	float	$tmp538	 %read{964,964} %write{962,962}
temp	float	$tmp539	 %read{964,964} %write{963,963}
temp	color	$tmp540	 %read{978,978} %write{977,977}
temp	point	$tmp541	 %read{971,971} %write{970,970}
temp	float	$tmp542	 %read{970,970} %write{967,967}
temp	float	$tmp543	 %read{970,970} %write{968,968}
temp	float	$tmp544	 %read{970,970} %write{969,969}
temp	point	$tmp545	 %read{976,976} %write{975,975}
temp	float	$tmp546	 %read{975,975} %write{972,972}
temp	float	$tmp547	 %read{975,975} %write{973,973}
temp	float	$tmp548	 %read{975,975} %write{974,974}
temp	point	$tmp549	 %read{980,980} %write{979,979}
temp	int	$tmp550	 %read{983,983} %write{982,982}
temp	int	$tmp551	 %read{987,987} %write{986,986}
temp	int	$tmp552	 %read{991,991} %write{990,990}
temp	float	$tmp553	 %read{996,996} %write{993,993}
temp	float	$tmp554	 %read{993,993} %write{992,992}
temp	float	$tmp555	 %read{996,996} %write{995,995}
temp	float	$tmp556	 %read{995,995} %write{994,994}
temp	float	$tmp557	 %read{999,999} %write{996,996}
temp	float	$tmp558	 %read{999,999} %write{998,998}
temp	float	$tmp559	 %read{998,998} %write{997,997}
temp	int	$tmp560	 %read{1002,1002} %write{1001,1001}
temp	float	$tmp561	 %read{1010,1010} %write{1004,1004}
temp	float	$tmp562	 %read{1004,1004} %write{1003,1003}
temp	float	$tmp563	 %read{1010,1010} %write{1009,1009}
temp	float	$tmp564	 %read{1009,1009} %write{1006,1006}
temp	float	$tmp565	 %read{1006,1006} %write{1005,1005}
temp	float	$tmp566	 %read{1009,1009} %write{1008,1008}
temp	float	$tmp567	 %read{1008,1008} %write{1007,1007}
temp	int	$tmp568	 %read{1013,1013} %write{1012,1012}
temp	float	$tmp569	 %read{1020,1020} %write{1016,1016}
temp	float	$tmp570	 %read{1016,1016} %write{1015,1015}
temp	float	$tmp571	 %read{1015,1015} %write{1014,1014}
temp	float	$tmp572	 %read{1020,1020} %write{1019,1019}
temp	float	$tmp573	 %read{1019,1019} %write{1018,1018}
temp	float	$tmp574	 %read{1018,1018} %write{1017,1017}
temp	float	$tmp575	 %read{1024,1024} %write{1020,1020}
temp	float	$tmp576	 %read{1024,1024} %write{1023,1023}
temp	float	$tmp577	 %read{1023,1023} %write{1022,1022}
temp	float	$tmp578	 %read{1022,1022} %write{1021,1021}
temp	int	$tmp579	 %read{1027,1027} %write{1026,1026}
temp	float	$tmp580	 %read{1032,1032} %write{1031,1031}
temp	float	$tmp581	 %read{1031,1031} %write{1030,1030}
temp	vector	$tmp582	 %read{1030,1030} %write{1028,1028}
temp	vector	$tmp583	 %read{1030,1030} %write{1029,1029}
temp	int	$tmp584	 %read{1035,1035} %write{1034,1034}
temp	float	$tmp585	 %read{1042,1042} %write{1038,1038}
temp	float	$tmp586	 %read{1038,1038} %write{1037,1037}
temp	float	$tmp587	 %read{1037,1037} %write{1036,1036}
temp	float	$tmp588	 %read{1042,1042} %write{1041,1041}
temp	float	$tmp589	 %read{1041,1041} %write{1040,1040}
temp	float	$tmp590	 %read{1040,1040} %write{1039,1039}
temp	float	$tmp591	 %read{1046,1046} %write{1042,1042}
temp	float	$tmp592	 %read{1046,1046} %write{1045,1045}
temp	float	$tmp593	 %read{1045,1045} %write{1044,1044}
temp	float	$tmp594	 %read{1044,1044} %write{1043,1043}
temp	float	$tmp595	 %read{1048,1048} %write{1046,1046}
temp	float	$tmp596	 %read{1048,1048} %write{1047,1047}
temp	point	$tmp597	 %read{1055,1055} %write{1054,1054}
temp	float	$tmp598	 %read{1054,1054} %write{1051,1051}
temp	float	$tmp599	 %read{1054,1054} %write{1052,1052}
temp	float	$tmp600	 %read{1054,1054} %write{1053,1053}
temp	float	$tmp601	 %read{1057,1057} %write{1056,1056}
temp	int	$tmp602	 %read{1058,1058} %write{1057,1057}
temp	float	$tmp603	 %read{1060,1060} %write{1059,1059}
temp	float	$tmp604	 %read{1062,1062} %write{1061,1061}
temp	float	$tmp605	 %read{1064,1064} %write{1063,1063}
temp	point	$tmp606	 %read{1067,1067} %write{1066,1066}
temp	point	$tmp607	 %read{1069,1069} %write{1068,1068}
temp	point	$tmp608	 %read{1071,1071} %write{1070,1070}
temp	float	$tmp609	 %read{1074,1074} %write{1073,1073}
temp	int	$tmp610	 %read{1075,1075} %write{1074,1074}
temp	float	$tmp611	 %read{1077,1077} %write{1076,1076}
temp	float	$tmp612	 %read{1079,1079} %write{1078,1078}
temp	point	$tmp613	 %read{1082,1082} %write{1081,1081}
temp	point	$tmp614	 %read{1084,1084} %write{1083,1083}
temp	float	$tmp615	 %read{1087,1087} %write{1086,1086}
temp	int	$tmp616	 %read{1088,1088} %write{1087,1087}
temp	float	$tmp617	 %read{1090,1090} %write{1089,1089}
temp	point	$tmp618	 %read{1093,1093} %write{1092,1092}
temp	float	$tmp619	 %read{1096,1096} %write{1095,1095}
temp	int	$tmp620	 %read{1097,1097} %write{1096,1096}
temp	int	$tmp621	 %read{2147483647,-1} %write{1100,1100}
temp	int	$tmp622	 %read{2147483647,-1} %write{1102,1102}
temp	int	$tmp623	 %read{2147483647,-1} %write{1104,1104}
temp	float	$tmp624	 %read{1108,1108} %write{1106,1106}
temp	float	$tmp625	 %read{1108,1108} %write{1107,1107}
temp	int	$tmp626	 %read{1111,1111} %write{1110,1110}
temp	float	$tmp627	 %read{1116,1116} %write{1115,1115}
const	string	$const47	"Cell Noise"		 %read{1118,10187} %write{2147483647,-1}
temp	int	$tmp628	 %read{1119,1119} %write{1118,1118}
temp	float	$tmp629	 %read{1124,1124} %write{1123,1123}
temp	float	$tmp630	 %read{1160,2237} %write{1137,2236}
temp	int	$tmp631	 %read{1127,1127} %write{1126,1126}
temp	int	$tmp632	 %read{1131,1131} %write{1130,1130}
temp	int	$tmp633	 %read{1135,1135} %write{1134,1134}
temp	int	$tmp634	 %read{1136,1136} %write{1135,1135}
temp	int	$tmp635	 %read{1142,1142} %write{1141,1141}
temp	float	$tmp636	 %read{1318,1318} %write{1317,1317}
temp	float	$tmp637	 %read{1149,1149} %write{1148,1148}
temp	float	$tmp638	 %read{1148,1148} %write{1147,1147}
temp	float	$tmp639	 %read{1152,1152} %write{1151,1151}
temp	float	$tmp640	 %read{1151,1151} %write{1150,1150}
temp	float	$tmp641	 %read{1155,1155} %write{1154,1154}
temp	float	$tmp642	 %read{1154,1154} %write{1153,1153}
temp	int	$tmp643	 %read{1163,1163} %write{1162,1162}
temp	int	$tmp644	 %read{1160,1316} %write{1160,1316}
temp	int	$tmp645	 %read{1167,1167} %write{1166,1166}
temp	int	$tmp646	 %read{1164,1314} %write{1164,1314}
temp	int	$tmp647	 %read{1171,1171} %write{1170,1170}
temp	int	$tmp648	 %read{1168,1312} %write{1168,1312}
temp	float	$tmp649	 %read{1175,1175} %write{1172,1172}
temp	float	$tmp650	 %read{1175,1175} %write{1173,1173}
temp	float	$tmp651	 %read{1175,1175} %write{1174,1174}
temp	color	$tmp652	 %read{1189,1189} %write{1188,1188}
temp	point	$tmp653	 %read{1182,1182} %write{1181,1181}
temp	float	$tmp654	 %read{1181,1181} %write{1178,1178}
temp	float	$tmp655	 %read{1181,1181} %write{1179,1179}
temp	float	$tmp656	 %read{1181,1181} %write{1180,1180}
temp	point	$tmp657	 %read{1187,1187} %write{1186,1186}
temp	float	$tmp658	 %read{1186,1186} %write{1183,1183}
temp	float	$tmp659	 %read{1186,1186} %write{1184,1184}
temp	float	$tmp660	 %read{1186,1186} %write{1185,1185}
temp	point	$tmp661	 %read{1191,1191} %write{1190,1190}
temp	int	$tmp662	 %read{1194,1194} %write{1193,1193}
temp	int	$tmp663	 %read{1198,1198} %write{1197,1197}
temp	int	$tmp664	 %read{1202,1202} %write{1201,1201}
temp	float	$tmp665	 %read{1207,1207} %write{1204,1204}
temp	float	$tmp666	 %read{1204,1204} %write{1203,1203}
temp	float	$tmp667	 %read{1207,1207} %write{1206,1206}
temp	float	$tmp668	 %read{1206,1206} %write{1205,1205}
temp	float	$tmp669	 %read{1210,1210} %write{1207,1207}
temp	float	$tmp670	 %read{1210,1210} %write{1209,1209}
temp	float	$tmp671	 %read{1209,1209} %write{1208,1208}
temp	int	$tmp672	 %read{1213,1213} %write{1212,1212}
temp	float	$tmp673	 %read{1221,1221} %write{1215,1215}
temp	float	$tmp674	 %read{1215,1215} %write{1214,1214}
temp	float	$tmp675	 %read{1221,1221} %write{1220,1220}
temp	float	$tmp676	 %read{1220,1220} %write{1217,1217}
temp	float	$tmp677	 %read{1217,1217} %write{1216,1216}
temp	float	$tmp678	 %read{1220,1220} %write{1219,1219}
temp	float	$tmp679	 %read{1219,1219} %write{1218,1218}
temp	int	$tmp680	 %read{1224,1224} %write{1223,1223}
temp	float	$tmp681	 %read{1231,1231} %write{1227,1227}
temp	float	$tmp682	 %read{1227,1227} %write{1226,1226}
temp	float	$tmp683	 %read{1226,1226} %write{1225,1225}
temp	float	$tmp684	 %read{1231,1231} %write{1230,1230}
temp	float	$tmp685	 %read{1230,1230} %write{1229,1229}
temp	float	$tmp686	 %read{1229,1229} %write{1228,1228}
temp	float	$tmp687	 %read{1235,1235} %write{1231,1231}
temp	float	$tmp688	 %read{1235,1235} %write{1234,1234}
temp	float	$tmp689	 %read{1234,1234} %write{1233,1233}
temp	float	$tmp690	 %read{1233,1233} %write{1232,1232}
temp	int	$tmp691	 %read{1238,1238} %write{1237,1237}
temp	float	$tmp692	 %read{1243,1243} %write{1242,1242}
temp	float	$tmp693	 %read{1242,1242} %write{1241,1241}
temp	vector	$tmp694	 %read{1241,1241} %write{1239,1239}
temp	vector	$tmp695	 %read{1241,1241} %write{1240,1240}
temp	int	$tmp696	 %read{1246,1246} %write{1245,1245}
temp	float	$tmp697	 %read{1253,1253} %write{1249,1249}
temp	float	$tmp698	 %read{1249,1249} %write{1248,1248}
temp	float	$tmp699	 %read{1248,1248} %write{1247,1247}
temp	float	$tmp700	 %read{1253,1253} %write{1252,1252}
temp	float	$tmp701	 %read{1252,1252} %write{1251,1251}
temp	float	$tmp702	 %read{1251,1251} %write{1250,1250}
temp	float	$tmp703	 %read{1257,1257} %write{1253,1253}
temp	float	$tmp704	 %read{1257,1257} %write{1256,1256}
temp	float	$tmp705	 %read{1256,1256} %write{1255,1255}
temp	float	$tmp706	 %read{1255,1255} %write{1254,1254}
temp	float	$tmp707	 %read{1259,1259} %write{1257,1257}
temp	float	$tmp708	 %read{1259,1259} %write{1258,1258}
temp	point	$tmp709	 %read{1266,1266} %write{1265,1265}
temp	float	$tmp710	 %read{1265,1265} %write{1262,1262}
temp	float	$tmp711	 %read{1265,1265} %write{1263,1263}
temp	float	$tmp712	 %read{1265,1265} %write{1264,1264}
temp	float	$tmp713	 %read{1268,1268} %write{1267,1267}
temp	int	$tmp714	 %read{1269,1269} %write{1268,1268}
temp	float	$tmp715	 %read{1271,1271} %write{1270,1270}
temp	float	$tmp716	 %read{1273,1273} %write{1272,1272}
temp	float	$tmp717	 %read{1275,1275} %write{1274,1274}
temp	point	$tmp718	 %read{1278,1278} %write{1277,1277}
temp	point	$tmp719	 %read{1280,1280} %write{1279,1279}
temp	point	$tmp720	 %read{1282,1282} %write{1281,1281}
temp	float	$tmp721	 %read{1285,1285} %write{1284,1284}
temp	int	$tmp722	 %read{1286,1286} %write{1285,1285}
temp	float	$tmp723	 %read{1288,1288} %write{1287,1287}
temp	float	$tmp724	 %read{1290,1290} %write{1289,1289}
temp	point	$tmp725	 %read{1293,1293} %write{1292,1292}
temp	point	$tmp726	 %read{1295,1295} %write{1294,1294}
temp	float	$tmp727	 %read{1298,1298} %write{1297,1297}
temp	int	$tmp728	 %read{1299,1299} %write{1298,1298}
temp	float	$tmp729	 %read{1301,1301} %write{1300,1300}
temp	point	$tmp730	 %read{1304,1304} %write{1303,1303}
temp	float	$tmp731	 %read{1307,1307} %write{1306,1306}
temp	int	$tmp732	 %read{1308,1308} %write{1307,1307}
temp	int	$tmp733	 %read{2147483647,-1} %write{1311,1311}
temp	int	$tmp734	 %read{2147483647,-1} %write{1313,1313}
temp	int	$tmp735	 %read{2147483647,-1} %write{1315,1315}
temp	float	$tmp736	 %read{1319,1319} %write{1318,1318}
temp	int	$tmp737	 %read{1322,1322} %write{1321,1321}
temp	float	$tmp738	 %read{1498,1498} %write{1497,1497}
temp	float	$tmp739	 %read{1329,1329} %write{1328,1328}
temp	float	$tmp740	 %read{1328,1328} %write{1327,1327}
temp	float	$tmp741	 %read{1332,1332} %write{1331,1331}
temp	float	$tmp742	 %read{1331,1331} %write{1330,1330}
temp	float	$tmp743	 %read{1335,1335} %write{1334,1334}
temp	float	$tmp744	 %read{1334,1334} %write{1333,1333}
temp	int	$tmp745	 %read{1343,1343} %write{1342,1342}
temp	int	$tmp746	 %read{1340,1496} %write{1340,1496}
temp	int	$tmp747	 %read{1347,1347} %write{1346,1346}
temp	int	$tmp748	 %read{1344,1494} %write{1344,1494}
temp	int	$tmp749	 %read{1351,1351} %write{1350,1350}
temp	int	$tmp750	 %read{1348,1492} %write{1348,1492}
temp	float	$tmp751	 %read{1355,1355} %write{1352,1352}
temp	float	$tmp752	 %read{1355,1355} %write{1353,1353}
temp	float	$tmp753	 %read{1355,1355} %write{1354,1354}
temp	color	$tmp754	 %read{1369,1369} %write{1368,1368}
temp	point	$tmp755	 %read{1362,1362} %write{1361,1361}
temp	float	$tmp756	 %read{1361,1361} %write{1358,1358}
temp	float	$tmp757	 %read{1361,1361} %write{1359,1359}
temp	float	$tmp758	 %read{1361,1361} %write{1360,1360}
temp	point	$tmp759	 %read{1367,1367} %write{1366,1366}
temp	float	$tmp760	 %read{1366,1366} %write{1363,1363}
temp	float	$tmp761	 %read{1366,1366} %write{1364,1364}
temp	float	$tmp762	 %read{1366,1366} %write{1365,1365}
temp	point	$tmp763	 %read{1371,1371} %write{1370,1370}
temp	int	$tmp764	 %read{1374,1374} %write{1373,1373}
temp	int	$tmp765	 %read{1378,1378} %write{1377,1377}
temp	int	$tmp766	 %read{1382,1382} %write{1381,1381}
temp	float	$tmp767	 %read{1387,1387} %write{1384,1384}
temp	float	$tmp768	 %read{1384,1384} %write{1383,1383}
temp	float	$tmp769	 %read{1387,1387} %write{1386,1386}
temp	float	$tmp770	 %read{1386,1386} %write{1385,1385}
temp	float	$tmp771	 %read{1390,1390} %write{1387,1387}
temp	float	$tmp772	 %read{1390,1390} %write{1389,1389}
temp	float	$tmp773	 %read{1389,1389} %write{1388,1388}
temp	int	$tmp774	 %read{1393,1393} %write{1392,1392}
temp	float	$tmp775	 %read{1401,1401} %write{1395,1395}
temp	float	$tmp776	 %read{1395,1395} %write{1394,1394}
temp	float	$tmp777	 %read{1401,1401} %write{1400,1400}
temp	float	$tmp778	 %read{1400,1400} %write{1397,1397}
temp	float	$tmp779	 %read{1397,1397} %write{1396,1396}
temp	float	$tmp780	 %read{1400,1400} %write{1399,1399}
temp	float	$tmp781	 %read{1399,1399} %write{1398,1398}
temp	int	$tmp782	 %read{1404,1404} %write{1403,1403}
temp	float	$tmp783	 %read{1411,1411} %write{1407,1407}
temp	float	$tmp784	 %read{1407,1407} %write{1406,1406}
temp	float	$tmp785	 %read{1406,1406} %write{1405,1405}
temp	float	$tmp786	 %read{1411,1411} %write{1410,1410}
temp	float	$tmp787	 %read{1410,1410} %write{1409,1409}
temp	float	$tmp788	 %read{1409,1409} %write{1408,1408}
temp	float	$tmp789	 %read{1415,1415} %write{1411,1411}
temp	float	$tmp790	 %read{1415,1415} %write{1414,1414}
temp	float	$tmp791	 %read{1414,1414} %write{1413,1413}
temp	float	$tmp792	 %read{1413,1413} %write{1412,1412}
temp	int	$tmp793	 %read{1418,1418} %write{1417,1417}
temp	float	$tmp794	 %read{1423,1423} %write{1422,1422}
temp	float	$tmp795	 %read{1422,1422} %write{1421,1421}
temp	vector	$tmp796	 %read{1421,1421} %write{1419,1419}
temp	vector	$tmp797	 %read{1421,1421} %write{1420,1420}
temp	int	$tmp798	 %read{1426,1426} %write{1425,1425}
temp	float	$tmp799	 %read{1433,1433} %write{1429,1429}
temp	float	$tmp800	 %read{1429,1429} %write{1428,1428}
temp	float	$tmp801	 %read{1428,1428} %write{1427,1427}
temp	float	$tmp802	 %read{1433,1433} %write{1432,1432}
temp	float	$tmp803	 %read{1432,1432} %write{1431,1431}
temp	float	$tmp804	 %read{1431,1431} %write{1430,1430}
temp	float	$tmp805	 %read{1437,1437} %write{1433,1433}
temp	float	$tmp806	 %read{1437,1437} %write{1436,1436}
temp	float	$tmp807	 %read{1436,1436} %write{1435,1435}
temp	float	$tmp808	 %read{1435,1435} %write{1434,1434}
temp	float	$tmp809	 %read{1439,1439} %write{1437,1437}
temp	float	$tmp810	 %read{1439,1439} %write{1438,1438}
temp	point	$tmp811	 %read{1446,1446} %write{1445,1445}
temp	float	$tmp812	 %read{1445,1445} %write{1442,1442}
temp	float	$tmp813	 %read{1445,1445} %write{1443,1443}
temp	float	$tmp814	 %read{1445,1445} %write{1444,1444}
temp	float	$tmp815	 %read{1448,1448} %write{1447,1447}
temp	int	$tmp816	 %read{1449,1449} %write{1448,1448}
temp	float	$tmp817	 %read{1451,1451} %write{1450,1450}
temp	float	$tmp818	 %read{1453,1453} %write{1452,1452}
temp	float	$tmp819	 %read{1455,1455} %write{1454,1454}
temp	point	$tmp820	 %read{1458,1458} %write{1457,1457}
temp	point	$tmp821	 %read{1460,1460} %write{1459,1459}
temp	point	$tmp822	 %read{1462,1462} %write{1461,1461}
temp	float	$tmp823	 %read{1465,1465} %write{1464,1464}
temp	int	$tmp824	 %read{1466,1466} %write{1465,1465}
temp	float	$tmp825	 %read{1468,1468} %write{1467,1467}
temp	float	$tmp826	 %read{1470,1470} %write{1469,1469}
temp	point	$tmp827	 %read{1473,1473} %write{1472,1472}
temp	point	$tmp828	 %read{1475,1475} %write{1474,1474}
temp	float	$tmp829	 %read{1478,1478} %write{1477,1477}
temp	int	$tmp830	 %read{1479,1479} %write{1478,1478}
temp	float	$tmp831	 %read{1481,1481} %write{1480,1480}
temp	point	$tmp832	 %read{1484,1484} %write{1483,1483}
temp	float	$tmp833	 %read{1487,1487} %write{1486,1486}
temp	int	$tmp834	 %read{1488,1488} %write{1487,1487}
temp	int	$tmp835	 %read{2147483647,-1} %write{1491,1491}
temp	int	$tmp836	 %read{2147483647,-1} %write{1493,1493}
temp	int	$tmp837	 %read{2147483647,-1} %write{1495,1495}
temp	float	$tmp838	 %read{1499,1499} %write{1498,1498}
temp	int	$tmp839	 %read{1502,1502} %write{1501,1501}
temp	float	$tmp840	 %read{1678,1678} %write{1677,1677}
temp	float	$tmp841	 %read{1509,1509} %write{1508,1508}
temp	float	$tmp842	 %read{1508,1508} %write{1507,1507}
temp	float	$tmp843	 %read{1512,1512} %write{1511,1511}
temp	float	$tmp844	 %read{1511,1511} %write{1510,1510}
temp	float	$tmp845	 %read{1515,1515} %write{1514,1514}
temp	float	$tmp846	 %read{1514,1514} %write{1513,1513}
temp	int	$tmp847	 %read{1523,1523} %write{1522,1522}
temp	int	$tmp848	 %read{1520,1676} %write{1520,1676}
temp	int	$tmp849	 %read{1527,1527} %write{1526,1526}
temp	int	$tmp850	 %read{1524,1674} %write{1524,1674}
temp	int	$tmp851	 %read{1531,1531} %write{1530,1530}
temp	int	$tmp852	 %read{1528,1672} %write{1528,1672}
temp	float	$tmp853	 %read{1535,1535} %write{1532,1532}
temp	float	$tmp854	 %read{1535,1535} %write{1533,1533}
temp	float	$tmp855	 %read{1535,1535} %write{1534,1534}
temp	color	$tmp856	 %read{1549,1549} %write{1548,1548}
temp	point	$tmp857	 %read{1542,1542} %write{1541,1541}
temp	float	$tmp858	 %read{1541,1541} %write{1538,1538}
temp	float	$tmp859	 %read{1541,1541} %write{1539,1539}
temp	float	$tmp860	 %read{1541,1541} %write{1540,1540}
temp	point	$tmp861	 %read{1547,1547} %write{1546,1546}
temp	float	$tmp862	 %read{1546,1546} %write{1543,1543}
temp	float	$tmp863	 %read{1546,1546} %write{1544,1544}
temp	float	$tmp864	 %read{1546,1546} %write{1545,1545}
temp	point	$tmp865	 %read{1551,1551} %write{1550,1550}
temp	int	$tmp866	 %read{1554,1554} %write{1553,1553}
temp	int	$tmp867	 %read{1558,1558} %write{1557,1557}
temp	int	$tmp868	 %read{1562,1562} %write{1561,1561}
temp	float	$tmp869	 %read{1567,1567} %write{1564,1564}
temp	float	$tmp870	 %read{1564,1564} %write{1563,1563}
temp	float	$tmp871	 %read{1567,1567} %write{1566,1566}
temp	float	$tmp872	 %read{1566,1566} %write{1565,1565}
temp	float	$tmp873	 %read{1570,1570} %write{1567,1567}
temp	float	$tmp874	 %read{1570,1570} %write{1569,1569}
temp	float	$tmp875	 %read{1569,1569} %write{1568,1568}
temp	int	$tmp876	 %read{1573,1573} %write{1572,1572}
temp	float	$tmp877	 %read{1581,1581} %write{1575,1575}
temp	float	$tmp878	 %read{1575,1575} %write{1574,1574}
temp	float	$tmp879	 %read{1581,1581} %write{1580,1580}
temp	float	$tmp880	 %read{1580,1580} %write{1577,1577}
temp	float	$tmp881	 %read{1577,1577} %write{1576,1576}
temp	float	$tmp882	 %read{1580,1580} %write{1579,1579}
temp	float	$tmp883	 %read{1579,1579} %write{1578,1578}
temp	int	$tmp884	 %read{1584,1584} %write{1583,1583}
temp	float	$tmp885	 %read{1591,1591} %write{1587,1587}
temp	float	$tmp886	 %read{1587,1587} %write{1586,1586}
temp	float	$tmp887	 %read{1586,1586} %write{1585,1585}
temp	float	$tmp888	 %read{1591,1591} %write{1590,1590}
temp	float	$tmp889	 %read{1590,1590} %write{1589,1589}
temp	float	$tmp890	 %read{1589,1589} %write{1588,1588}
temp	float	$tmp891	 %read{1595,1595} %write{1591,1591}
temp	float	$tmp892	 %read{1595,1595} %write{1594,1594}
temp	float	$tmp893	 %read{1594,1594} %write{1593,1593}
temp	float	$tmp894	 %read{1593,1593} %write{1592,1592}
temp	int	$tmp895	 %read{1598,1598} %write{1597,1597}
temp	float	$tmp896	 %read{1603,1603} %write{1602,1602}
temp	float	$tmp897	 %read{1602,1602} %write{1601,1601}
temp	vector	$tmp898	 %read{1601,1601} %write{1599,1599}
temp	vector	$tmp899	 %read{1601,1601} %write{1600,1600}
temp	int	$tmp900	 %read{1606,1606} %write{1605,1605}
temp	float	$tmp901	 %read{1613,1613} %write{1609,1609}
temp	float	$tmp902	 %read{1609,1609} %write{1608,1608}
temp	float	$tmp903	 %read{1608,1608} %write{1607,1607}
temp	float	$tmp904	 %read{1613,1613} %write{1612,1612}
temp	float	$tmp905	 %read{1612,1612} %write{1611,1611}
temp	float	$tmp906	 %read{1611,1611} %write{1610,1610}
temp	float	$tmp907	 %read{1617,1617} %write{1613,1613}
temp	float	$tmp908	 %read{1617,1617} %write{1616,1616}
temp	float	$tmp909	 %read{1616,1616} %write{1615,1615}
temp	float	$tmp910	 %read{1615,1615} %write{1614,1614}
temp	float	$tmp911	 %read{1619,1619} %write{1617,1617}
temp	float	$tmp912	 %read{1619,1619} %write{1618,1618}
temp	point	$tmp913	 %read{1626,1626} %write{1625,1625}
temp	float	$tmp914	 %read{1625,1625} %write{1622,1622}
temp	float	$tmp915	 %read{1625,1625} %write{1623,1623}
temp	float	$tmp916	 %read{1625,1625} %write{1624,1624}
temp	float	$tmp917	 %read{1628,1628} %write{1627,1627}
temp	int	$tmp918	 %read{1629,1629} %write{1628,1628}
temp	float	$tmp919	 %read{1631,1631} %write{1630,1630}
temp	float	$tmp920	 %read{1633,1633} %write{1632,1632}
temp	float	$tmp921	 %read{1635,1635} %write{1634,1634}
temp	point	$tmp922	 %read{1638,1638} %write{1637,1637}
temp	point	$tmp923	 %read{1640,1640} %write{1639,1639}
temp	point	$tmp924	 %read{1642,1642} %write{1641,1641}
temp	float	$tmp925	 %read{1645,1645} %write{1644,1644}
temp	int	$tmp926	 %read{1646,1646} %write{1645,1645}
temp	float	$tmp927	 %read{1648,1648} %write{1647,1647}
temp	float	$tmp928	 %read{1650,1650} %write{1649,1649}
temp	point	$tmp929	 %read{1653,1653} %write{1652,1652}
temp	point	$tmp930	 %read{1655,1655} %write{1654,1654}
temp	float	$tmp931	 %read{1658,1658} %write{1657,1657}
temp	int	$tmp932	 %read{1659,1659} %write{1658,1658}
temp	float	$tmp933	 %read{1661,1661} %write{1660,1660}
temp	point	$tmp934	 %read{1664,1664} %write{1663,1663}
temp	float	$tmp935	 %read{1667,1667} %write{1666,1666}
temp	int	$tmp936	 %read{1668,1668} %write{1667,1667}
temp	int	$tmp937	 %read{2147483647,-1} %write{1671,1671}
temp	int	$tmp938	 %read{2147483647,-1} %write{1673,1673}
temp	int	$tmp939	 %read{2147483647,-1} %write{1675,1675}
temp	float	$tmp940	 %read{1679,1679} %write{1678,1678}
temp	int	$tmp941	 %read{1682,1682} %write{1681,1681}
temp	float	$tmp942	 %read{1858,1858} %write{1857,1857}
temp	float	$tmp943	 %read{1689,1689} %write{1688,1688}
temp	float	$tmp944	 %read{1688,1688} %write{1687,1687}
temp	float	$tmp945	 %read{1692,1692} %write{1691,1691}
temp	float	$tmp946	 %read{1691,1691} %write{1690,1690}
temp	float	$tmp947	 %read{1695,1695} %write{1694,1694}
temp	float	$tmp948	 %read{1694,1694} %write{1693,1693}
temp	int	$tmp949	 %read{1703,1703} %write{1702,1702}
temp	int	$tmp950	 %read{1700,1856} %write{1700,1856}
temp	int	$tmp951	 %read{1707,1707} %write{1706,1706}
temp	int	$tmp952	 %read{1704,1854} %write{1704,1854}
temp	int	$tmp953	 %read{1711,1711} %write{1710,1710}
temp	int	$tmp954	 %read{1708,1852} %write{1708,1852}
temp	float	$tmp955	 %read{1715,1715} %write{1712,1712}
temp	float	$tmp956	 %read{1715,1715} %write{1713,1713}
temp	float	$tmp957	 %read{1715,1715} %write{1714,1714}
temp	color	$tmp958	 %read{1729,1729} %write{1728,1728}
temp	point	$tmp959	 %read{1722,1722} %write{1721,1721}
temp	float	$tmp960	 %read{1721,1721} %write{1718,1718}
temp	float	$tmp961	 %read{1721,1721} %write{1719,1719}
temp	float	$tmp962	 %read{1721,1721} %write{1720,1720}
temp	point	$tmp963	 %read{1727,1727} %write{1726,1726}
temp	float	$tmp964	 %read{1726,1726} %write{1723,1723}
temp	float	$tmp965	 %read{1726,1726} %write{1724,1724}
temp	float	$tmp966	 %read{1726,1726} %write{1725,1725}
temp	point	$tmp967	 %read{1731,1731} %write{1730,1730}
temp	int	$tmp968	 %read{1734,1734} %write{1733,1733}
temp	int	$tmp969	 %read{1738,1738} %write{1737,1737}
temp	int	$tmp970	 %read{1742,1742} %write{1741,1741}
temp	float	$tmp971	 %read{1747,1747} %write{1744,1744}
temp	float	$tmp972	 %read{1744,1744} %write{1743,1743}
temp	float	$tmp973	 %read{1747,1747} %write{1746,1746}
temp	float	$tmp974	 %read{1746,1746} %write{1745,1745}
temp	float	$tmp975	 %read{1750,1750} %write{1747,1747}
temp	float	$tmp976	 %read{1750,1750} %write{1749,1749}
temp	float	$tmp977	 %read{1749,1749} %write{1748,1748}
temp	int	$tmp978	 %read{1753,1753} %write{1752,1752}
temp	float	$tmp979	 %read{1761,1761} %write{1755,1755}
temp	float	$tmp980	 %read{1755,1755} %write{1754,1754}
temp	float	$tmp981	 %read{1761,1761} %write{1760,1760}
temp	float	$tmp982	 %read{1760,1760} %write{1757,1757}
temp	float	$tmp983	 %read{1757,1757} %write{1756,1756}
temp	float	$tmp984	 %read{1760,1760} %write{1759,1759}
temp	float	$tmp985	 %read{1759,1759} %write{1758,1758}
temp	int	$tmp986	 %read{1764,1764} %write{1763,1763}
temp	float	$tmp987	 %read{1771,1771} %write{1767,1767}
temp	float	$tmp988	 %read{1767,1767} %write{1766,1766}
temp	float	$tmp989	 %read{1766,1766} %write{1765,1765}
temp	float	$tmp990	 %read{1771,1771} %write{1770,1770}
temp	float	$tmp991	 %read{1770,1770} %write{1769,1769}
temp	float	$tmp992	 %read{1769,1769} %write{1768,1768}
temp	float	$tmp993	 %read{1775,1775} %write{1771,1771}
temp	float	$tmp994	 %read{1775,1775} %write{1774,1774}
temp	float	$tmp995	 %read{1774,1774} %write{1773,1773}
temp	float	$tmp996	 %read{1773,1773} %write{1772,1772}
temp	int	$tmp997	 %read{1778,1778} %write{1777,1777}
temp	float	$tmp998	 %read{1783,1783} %write{1782,1782}
temp	float	$tmp999	 %read{1782,1782} %write{1781,1781}
temp	vector	$tmp1000	 %read{1781,1781} %write{1779,1779}
temp	vector	$tmp1001	 %read{1781,1781} %write{1780,1780}
temp	int	$tmp1002	 %read{1786,1786} %write{1785,1785}
temp	float	$tmp1003	 %read{1793,1793} %write{1789,1789}
temp	float	$tmp1004	 %read{1789,1789} %write{1788,1788}
temp	float	$tmp1005	 %read{1788,1788} %write{1787,1787}
temp	float	$tmp1006	 %read{1793,1793} %write{1792,1792}
temp	float	$tmp1007	 %read{1792,1792} %write{1791,1791}
temp	float	$tmp1008	 %read{1791,1791} %write{1790,1790}
temp	float	$tmp1009	 %read{1797,1797} %write{1793,1793}
temp	float	$tmp1010	 %read{1797,1797} %write{1796,1796}
temp	float	$tmp1011	 %read{1796,1796} %write{1795,1795}
temp	float	$tmp1012	 %read{1795,1795} %write{1794,1794}
temp	float	$tmp1013	 %read{1799,1799} %write{1797,1797}
temp	float	$tmp1014	 %read{1799,1799} %write{1798,1798}
temp	point	$tmp1015	 %read{1806,1806} %write{1805,1805}
temp	float	$tmp1016	 %read{1805,1805} %write{1802,1802}
temp	float	$tmp1017	 %read{1805,1805} %write{1803,1803}
temp	float	$tmp1018	 %read{1805,1805} %write{1804,1804}
temp	float	$tmp1019	 %read{1808,1808} %write{1807,1807}
temp	int	$tmp1020	 %read{1809,1809} %write{1808,1808}
temp	float	$tmp1021	 %read{1811,1811} %write{1810,1810}
temp	float	$tmp1022	 %read{1813,1813} %write{1812,1812}
temp	float	$tmp1023	 %read{1815,1815} %write{1814,1814}
temp	point	$tmp1024	 %read{1818,1818} %write{1817,1817}
temp	point	$tmp1025	 %read{1820,1820} %write{1819,1819}
temp	point	$tmp1026	 %read{1822,1822} %write{1821,1821}
temp	float	$tmp1027	 %read{1825,1825} %write{1824,1824}
temp	int	$tmp1028	 %read{1826,1826} %write{1825,1825}
temp	float	$tmp1029	 %read{1828,1828} %write{1827,1827}
temp	float	$tmp1030	 %read{1830,1830} %write{1829,1829}
temp	point	$tmp1031	 %read{1833,1833} %write{1832,1832}
temp	point	$tmp1032	 %read{1835,1835} %write{1834,1834}
temp	float	$tmp1033	 %read{1838,1838} %write{1837,1837}
temp	int	$tmp1034	 %read{1839,1839} %write{1838,1838}
temp	float	$tmp1035	 %read{1841,1841} %write{1840,1840}
temp	point	$tmp1036	 %read{1844,1844} %write{1843,1843}
temp	float	$tmp1037	 %read{1847,1847} %write{1846,1846}
temp	int	$tmp1038	 %read{1848,1848} %write{1847,1847}
temp	int	$tmp1039	 %read{2147483647,-1} %write{1851,1851}
temp	int	$tmp1040	 %read{2147483647,-1} %write{1853,1853}
temp	int	$tmp1041	 %read{2147483647,-1} %write{1855,1855}
temp	float	$tmp1042	 %read{1859,1859} %write{1858,1858}
temp	int	$tmp1043	 %read{1862,1862} %write{1861,1861}
temp	float	$tmp1044	 %read{2040,2040} %write{2039,2039}
temp	float	$tmp1045	 %read{1869,1869} %write{1868,1868}
temp	float	$tmp1046	 %read{1868,1868} %write{1867,1867}
temp	float	$tmp1047	 %read{1872,1872} %write{1871,1871}
temp	float	$tmp1048	 %read{1871,1871} %write{1870,1870}
temp	float	$tmp1049	 %read{1875,1875} %write{1874,1874}
temp	float	$tmp1050	 %read{1874,1874} %write{1873,1873}
temp	int	$tmp1051	 %read{1883,1883} %write{1882,1882}
temp	int	$tmp1052	 %read{1880,2036} %write{1880,2036}
temp	int	$tmp1053	 %read{1887,1887} %write{1886,1886}
temp	int	$tmp1054	 %read{1884,2034} %write{1884,2034}
temp	int	$tmp1055	 %read{1891,1891} %write{1890,1890}
temp	int	$tmp1056	 %read{1888,2032} %write{1888,2032}
temp	float	$tmp1057	 %read{1895,1895} %write{1892,1892}
temp	float	$tmp1058	 %read{1895,1895} %write{1893,1893}
temp	float	$tmp1059	 %read{1895,1895} %write{1894,1894}
temp	color	$tmp1060	 %read{1909,1909} %write{1908,1908}
temp	point	$tmp1061	 %read{1902,1902} %write{1901,1901}
temp	float	$tmp1062	 %read{1901,1901} %write{1898,1898}
temp	float	$tmp1063	 %read{1901,1901} %write{1899,1899}
temp	float	$tmp1064	 %read{1901,1901} %write{1900,1900}
temp	point	$tmp1065	 %read{1907,1907} %write{1906,1906}
temp	float	$tmp1066	 %read{1906,1906} %write{1903,1903}
temp	float	$tmp1067	 %read{1906,1906} %write{1904,1904}
temp	float	$tmp1068	 %read{1906,1906} %write{1905,1905}
temp	point	$tmp1069	 %read{1911,1911} %write{1910,1910}
temp	int	$tmp1070	 %read{1914,1914} %write{1913,1913}
temp	int	$tmp1071	 %read{1918,1918} %write{1917,1917}
temp	int	$tmp1072	 %read{1922,1922} %write{1921,1921}
temp	float	$tmp1073	 %read{1927,1927} %write{1924,1924}
temp	float	$tmp1074	 %read{1924,1924} %write{1923,1923}
temp	float	$tmp1075	 %read{1927,1927} %write{1926,1926}
temp	float	$tmp1076	 %read{1926,1926} %write{1925,1925}
temp	float	$tmp1077	 %read{1930,1930} %write{1927,1927}
temp	float	$tmp1078	 %read{1930,1930} %write{1929,1929}
temp	float	$tmp1079	 %read{1929,1929} %write{1928,1928}
temp	int	$tmp1080	 %read{1933,1933} %write{1932,1932}
temp	float	$tmp1081	 %read{1941,1941} %write{1935,1935}
temp	float	$tmp1082	 %read{1935,1935} %write{1934,1934}
temp	float	$tmp1083	 %read{1941,1941} %write{1940,1940}
temp	float	$tmp1084	 %read{1940,1940} %write{1937,1937}
temp	float	$tmp1085	 %read{1937,1937} %write{1936,1936}
temp	float	$tmp1086	 %read{1940,1940} %write{1939,1939}
temp	float	$tmp1087	 %read{1939,1939} %write{1938,1938}
temp	int	$tmp1088	 %read{1944,1944} %write{1943,1943}
temp	float	$tmp1089	 %read{1951,1951} %write{1947,1947}
temp	float	$tmp1090	 %read{1947,1947} %write{1946,1946}
temp	float	$tmp1091	 %read{1946,1946} %write{1945,1945}
temp	float	$tmp1092	 %read{1951,1951} %write{1950,1950}
temp	float	$tmp1093	 %read{1950,1950} %write{1949,1949}
temp	float	$tmp1094	 %read{1949,1949} %write{1948,1948}
temp	float	$tmp1095	 %read{1955,1955} %write{1951,1951}
temp	float	$tmp1096	 %read{1955,1955} %write{1954,1954}
temp	float	$tmp1097	 %read{1954,1954} %write{1953,1953}
temp	float	$tmp1098	 %read{1953,1953} %write{1952,1952}
temp	int	$tmp1099	 %read{1958,1958} %write{1957,1957}
temp	float	$tmp1100	 %read{1963,1963} %write{1962,1962}
temp	float	$tmp1101	 %read{1962,1962} %write{1961,1961}
temp	vector	$tmp1102	 %read{1961,1961} %write{1959,1959}
temp	vector	$tmp1103	 %read{1961,1961} %write{1960,1960}
temp	int	$tmp1104	 %read{1966,1966} %write{1965,1965}
temp	float	$tmp1105	 %read{1973,1973} %write{1969,1969}
temp	float	$tmp1106	 %read{1969,1969} %write{1968,1968}
temp	float	$tmp1107	 %read{1968,1968} %write{1967,1967}
temp	float	$tmp1108	 %read{1973,1973} %write{1972,1972}
temp	float	$tmp1109	 %read{1972,1972} %write{1971,1971}
temp	float	$tmp1110	 %read{1971,1971} %write{1970,1970}
temp	float	$tmp1111	 %read{1977,1977} %write{1973,1973}
temp	float	$tmp1112	 %read{1977,1977} %write{1976,1976}
temp	float	$tmp1113	 %read{1976,1976} %write{1975,1975}
temp	float	$tmp1114	 %read{1975,1975} %write{1974,1974}
temp	float	$tmp1115	 %read{1979,1979} %write{1977,1977}
temp	float	$tmp1116	 %read{1979,1979} %write{1978,1978}
temp	point	$tmp1117	 %read{1986,1986} %write{1985,1985}
temp	float	$tmp1118	 %read{1985,1985} %write{1982,1982}
temp	float	$tmp1119	 %read{1985,1985} %write{1983,1983}
temp	float	$tmp1120	 %read{1985,1985} %write{1984,1984}
temp	float	$tmp1121	 %read{1988,1988} %write{1987,1987}
temp	int	$tmp1122	 %read{1989,1989} %write{1988,1988}
temp	float	$tmp1123	 %read{1991,1991} %write{1990,1990}
temp	float	$tmp1124	 %read{1993,1993} %write{1992,1992}
temp	float	$tmp1125	 %read{1995,1995} %write{1994,1994}
temp	point	$tmp1126	 %read{1998,1998} %write{1997,1997}
temp	point	$tmp1127	 %read{2000,2000} %write{1999,1999}
temp	point	$tmp1128	 %read{2002,2002} %write{2001,2001}
temp	float	$tmp1129	 %read{2005,2005} %write{2004,2004}
temp	int	$tmp1130	 %read{2006,2006} %write{2005,2005}
temp	float	$tmp1131	 %read{2008,2008} %write{2007,2007}
temp	float	$tmp1132	 %read{2010,2010} %write{2009,2009}
temp	point	$tmp1133	 %read{2013,2013} %write{2012,2012}
temp	point	$tmp1134	 %read{2015,2015} %write{2014,2014}
temp	float	$tmp1135	 %read{2018,2018} %write{2017,2017}
temp	int	$tmp1136	 %read{2019,2019} %write{2018,2018}
temp	float	$tmp1137	 %read{2021,2021} %write{2020,2020}
temp	point	$tmp1138	 %read{2024,2024} %write{2023,2023}
temp	float	$tmp1139	 %read{2027,2027} %write{2026,2026}
temp	int	$tmp1140	 %read{2028,2028} %write{2027,2027}
temp	int	$tmp1141	 %read{2147483647,-1} %write{2031,2031}
temp	int	$tmp1142	 %read{2147483647,-1} %write{2033,2033}
temp	int	$tmp1143	 %read{2147483647,-1} %write{2035,2035}
temp	float	$tmp1144	 %read{2039,2039} %write{2037,2037}
temp	float	$tmp1145	 %read{2039,2039} %write{2038,2038}
temp	float	$tmp1146	 %read{2041,2041} %write{2040,2040}
temp	int	$tmp1147	 %read{2044,2044} %write{2043,2043}
temp	float	$tmp1148	 %read{2229,2229} %write{2226,2227}
temp	float	$tmp1149	 %read{2223,2223} %write{2222,2222}
temp	float	$tmp1150	 %read{2052,2052} %write{2051,2051}
temp	float	$tmp1151	 %read{2051,2051} %write{2050,2050}
temp	float	$tmp1152	 %read{2055,2055} %write{2054,2054}
temp	float	$tmp1153	 %read{2054,2054} %write{2053,2053}
temp	float	$tmp1154	 %read{2058,2058} %write{2057,2057}
temp	float	$tmp1155	 %read{2057,2057} %write{2056,2056}
temp	int	$tmp1156	 %read{2066,2066} %write{2065,2065}
temp	int	$tmp1157	 %read{2063,2219} %write{2063,2219}
temp	int	$tmp1158	 %read{2070,2070} %write{2069,2069}
temp	int	$tmp1159	 %read{2067,2217} %write{2067,2217}
temp	int	$tmp1160	 %read{2074,2074} %write{2073,2073}
temp	int	$tmp1161	 %read{2071,2215} %write{2071,2215}
temp	float	$tmp1162	 %read{2078,2078} %write{2075,2075}
temp	float	$tmp1163	 %read{2078,2078} %write{2076,2076}
temp	float	$tmp1164	 %read{2078,2078} %write{2077,2077}
temp	color	$tmp1165	 %read{2092,2092} %write{2091,2091}
temp	point	$tmp1166	 %read{2085,2085} %write{2084,2084}
temp	float	$tmp1167	 %read{2084,2084} %write{2081,2081}
temp	float	$tmp1168	 %read{2084,2084} %write{2082,2082}
temp	float	$tmp1169	 %read{2084,2084} %write{2083,2083}
temp	point	$tmp1170	 %read{2090,2090} %write{2089,2089}
temp	float	$tmp1171	 %read{2089,2089} %write{2086,2086}
temp	float	$tmp1172	 %read{2089,2089} %write{2087,2087}
temp	float	$tmp1173	 %read{2089,2089} %write{2088,2088}
temp	point	$tmp1174	 %read{2094,2094} %write{2093,2093}
temp	int	$tmp1175	 %read{2097,2097} %write{2096,2096}
temp	int	$tmp1176	 %read{2101,2101} %write{2100,2100}
temp	int	$tmp1177	 %read{2105,2105} %write{2104,2104}
temp	float	$tmp1178	 %read{2110,2110} %write{2107,2107}
temp	float	$tmp1179	 %read{2107,2107} %write{2106,2106}
temp	float	$tmp1180	 %read{2110,2110} %write{2109,2109}
temp	float	$tmp1181	 %read{2109,2109} %write{2108,2108}
temp	float	$tmp1182	 %read{2113,2113} %write{2110,2110}
temp	float	$tmp1183	 %read{2113,2113} %write{2112,2112}
temp	float	$tmp1184	 %read{2112,2112} %write{2111,2111}
temp	int	$tmp1185	 %read{2116,2116} %write{2115,2115}
temp	float	$tmp1186	 %read{2124,2124} %write{2118,2118}
temp	float	$tmp1187	 %read{2118,2118} %write{2117,2117}
temp	float	$tmp1188	 %read{2124,2124} %write{2123,2123}
temp	float	$tmp1189	 %read{2123,2123} %write{2120,2120}
temp	float	$tmp1190	 %read{2120,2120} %write{2119,2119}
temp	float	$tmp1191	 %read{2123,2123} %write{2122,2122}
temp	float	$tmp1192	 %read{2122,2122} %write{2121,2121}
temp	int	$tmp1193	 %read{2127,2127} %write{2126,2126}
temp	float	$tmp1194	 %read{2134,2134} %write{2130,2130}
temp	float	$tmp1195	 %read{2130,2130} %write{2129,2129}
temp	float	$tmp1196	 %read{2129,2129} %write{2128,2128}
temp	float	$tmp1197	 %read{2134,2134} %write{2133,2133}
temp	float	$tmp1198	 %read{2133,2133} %write{2132,2132}
temp	float	$tmp1199	 %read{2132,2132} %write{2131,2131}
temp	float	$tmp1200	 %read{2138,2138} %write{2134,2134}
temp	float	$tmp1201	 %read{2138,2138} %write{2137,2137}
temp	float	$tmp1202	 %read{2137,2137} %write{2136,2136}
temp	float	$tmp1203	 %read{2136,2136} %write{2135,2135}
temp	int	$tmp1204	 %read{2141,2141} %write{2140,2140}
temp	float	$tmp1205	 %read{2146,2146} %write{2145,2145}
temp	float	$tmp1206	 %read{2145,2145} %write{2144,2144}
temp	vector	$tmp1207	 %read{2144,2144} %write{2142,2142}
temp	vector	$tmp1208	 %read{2144,2144} %write{2143,2143}
temp	int	$tmp1209	 %read{2149,2149} %write{2148,2148}
temp	float	$tmp1210	 %read{2156,2156} %write{2152,2152}
temp	float	$tmp1211	 %read{2152,2152} %write{2151,2151}
temp	float	$tmp1212	 %read{2151,2151} %write{2150,2150}
temp	float	$tmp1213	 %read{2156,2156} %write{2155,2155}
temp	float	$tmp1214	 %read{2155,2155} %write{2154,2154}
temp	float	$tmp1215	 %read{2154,2154} %write{2153,2153}
temp	float	$tmp1216	 %read{2160,2160} %write{2156,2156}
temp	float	$tmp1217	 %read{2160,2160} %write{2159,2159}
temp	float	$tmp1218	 %read{2159,2159} %write{2158,2158}
temp	float	$tmp1219	 %read{2158,2158} %write{2157,2157}
temp	float	$tmp1220	 %read{2162,2162} %write{2160,2160}
temp	float	$tmp1221	 %read{2162,2162} %write{2161,2161}
temp	point	$tmp1222	 %read{2169,2169} %write{2168,2168}
temp	float	$tmp1223	 %read{2168,2168} %write{2165,2165}
temp	float	$tmp1224	 %read{2168,2168} %write{2166,2166}
temp	float	$tmp1225	 %read{2168,2168} %write{2167,2167}
temp	float	$tmp1226	 %read{2171,2171} %write{2170,2170}
temp	int	$tmp1227	 %read{2172,2172} %write{2171,2171}
temp	float	$tmp1228	 %read{2174,2174} %write{2173,2173}
temp	float	$tmp1229	 %read{2176,2176} %write{2175,2175}
temp	float	$tmp1230	 %read{2178,2178} %write{2177,2177}
temp	point	$tmp1231	 %read{2181,2181} %write{2180,2180}
temp	point	$tmp1232	 %read{2183,2183} %write{2182,2182}
temp	point	$tmp1233	 %read{2185,2185} %write{2184,2184}
temp	float	$tmp1234	 %read{2188,2188} %write{2187,2187}
temp	int	$tmp1235	 %read{2189,2189} %write{2188,2188}
temp	float	$tmp1236	 %read{2191,2191} %write{2190,2190}
temp	float	$tmp1237	 %read{2193,2193} %write{2192,2192}
temp	point	$tmp1238	 %read{2196,2196} %write{2195,2195}
temp	point	$tmp1239	 %read{2198,2198} %write{2197,2197}
temp	float	$tmp1240	 %read{2201,2201} %write{2200,2200}
temp	int	$tmp1241	 %read{2202,2202} %write{2201,2201}
temp	float	$tmp1242	 %read{2204,2204} %write{2203,2203}
temp	point	$tmp1243	 %read{2207,2207} %write{2206,2206}
temp	float	$tmp1244	 %read{2210,2210} %write{2209,2209}
temp	int	$tmp1245	 %read{2211,2211} %write{2210,2210}
temp	int	$tmp1246	 %read{2147483647,-1} %write{2214,2214}
temp	int	$tmp1247	 %read{2147483647,-1} %write{2216,2216}
temp	int	$tmp1248	 %read{2147483647,-1} %write{2218,2218}
temp	float	$tmp1249	 %read{2222,2222} %write{2220,2220}
temp	float	$tmp1250	 %read{2222,2222} %write{2221,2221}
temp	int	$tmp1251	 %read{2225,2225} %write{2224,2224}
temp	float	$tmp1252	 %read{2230,2230} %write{2229,2229}
temp	int	$tmp1253	 %read{2233,2233} %write{2232,2232}
temp	float	$tmp1254	 %read{2238,2238} %write{2237,2237}
temp	float	$tmp1255	 %read{2275,3352} %write{2252,3351}
temp	vector	$tmp1257	 %read{2247,3349} %write{2239,3334}
temp	int	$tmp1258	 %read{2242,2242} %write{2241,2241}
temp	int	$tmp1259	 %read{2246,2246} %write{2245,2245}
temp	int	$tmp1260	 %read{2250,2250} %write{2249,2249}
temp	int	$tmp1261	 %read{2251,2251} %write{2250,2250}
temp	int	$tmp1262	 %read{2257,2257} %write{2256,2256}
temp	float	$tmp1263	 %read{2433,2433} %write{2432,2432}
temp	float	$tmp1264	 %read{2264,2264} %write{2263,2263}
temp	float	$tmp1265	 %read{2263,2263} %write{2262,2262}
temp	float	$tmp1266	 %read{2267,2267} %write{2266,2266}
temp	float	$tmp1267	 %read{2266,2266} %write{2265,2265}
temp	float	$tmp1268	 %read{2270,2270} %write{2269,2269}
temp	float	$tmp1269	 %read{2269,2269} %write{2268,2268}
temp	int	$tmp1270	 %read{2278,2278} %write{2277,2277}
temp	int	$tmp1271	 %read{2275,2431} %write{2275,2431}
temp	int	$tmp1272	 %read{2282,2282} %write{2281,2281}
temp	int	$tmp1273	 %read{2279,2429} %write{2279,2429}
temp	int	$tmp1274	 %read{2286,2286} %write{2285,2285}
temp	int	$tmp1275	 %read{2283,2427} %write{2283,2427}
temp	float	$tmp1276	 %read{2290,2290} %write{2287,2287}
temp	float	$tmp1277	 %read{2290,2290} %write{2288,2288}
temp	float	$tmp1278	 %read{2290,2290} %write{2289,2289}
temp	color	$tmp1279	 %read{2304,2304} %write{2303,2303}
temp	point	$tmp1280	 %read{2297,2297} %write{2296,2296}
temp	float	$tmp1281	 %read{2296,2296} %write{2293,2293}
temp	float	$tmp1282	 %read{2296,2296} %write{2294,2294}
temp	float	$tmp1283	 %read{2296,2296} %write{2295,2295}
temp	point	$tmp1284	 %read{2302,2302} %write{2301,2301}
temp	float	$tmp1285	 %read{2301,2301} %write{2298,2298}
temp	float	$tmp1286	 %read{2301,2301} %write{2299,2299}
temp	float	$tmp1287	 %read{2301,2301} %write{2300,2300}
temp	point	$tmp1288	 %read{2306,2306} %write{2305,2305}
temp	int	$tmp1289	 %read{2309,2309} %write{2308,2308}
temp	int	$tmp1290	 %read{2313,2313} %write{2312,2312}
temp	int	$tmp1291	 %read{2317,2317} %write{2316,2316}
temp	float	$tmp1292	 %read{2322,2322} %write{2319,2319}
temp	float	$tmp1293	 %read{2319,2319} %write{2318,2318}
temp	float	$tmp1294	 %read{2322,2322} %write{2321,2321}
temp	float	$tmp1295	 %read{2321,2321} %write{2320,2320}
temp	float	$tmp1296	 %read{2325,2325} %write{2322,2322}
temp	float	$tmp1297	 %read{2325,2325} %write{2324,2324}
temp	float	$tmp1298	 %read{2324,2324} %write{2323,2323}
temp	int	$tmp1299	 %read{2328,2328} %write{2327,2327}
temp	float	$tmp1300	 %read{2336,2336} %write{2330,2330}
temp	float	$tmp1301	 %read{2330,2330} %write{2329,2329}
temp	float	$tmp1302	 %read{2336,2336} %write{2335,2335}
temp	float	$tmp1303	 %read{2335,2335} %write{2332,2332}
temp	float	$tmp1304	 %read{2332,2332} %write{2331,2331}
temp	float	$tmp1305	 %read{2335,2335} %write{2334,2334}
temp	float	$tmp1306	 %read{2334,2334} %write{2333,2333}
temp	int	$tmp1307	 %read{2339,2339} %write{2338,2338}
temp	float	$tmp1308	 %read{2346,2346} %write{2342,2342}
temp	float	$tmp1309	 %read{2342,2342} %write{2341,2341}
temp	float	$tmp1310	 %read{2341,2341} %write{2340,2340}
temp	float	$tmp1311	 %read{2346,2346} %write{2345,2345}
temp	float	$tmp1312	 %read{2345,2345} %write{2344,2344}
temp	float	$tmp1313	 %read{2344,2344} %write{2343,2343}
temp	float	$tmp1314	 %read{2350,2350} %write{2346,2346}
temp	float	$tmp1315	 %read{2350,2350} %write{2349,2349}
temp	float	$tmp1316	 %read{2349,2349} %write{2348,2348}
temp	float	$tmp1317	 %read{2348,2348} %write{2347,2347}
temp	int	$tmp1318	 %read{2353,2353} %write{2352,2352}
temp	float	$tmp1319	 %read{2358,2358} %write{2357,2357}
temp	float	$tmp1320	 %read{2357,2357} %write{2356,2356}
temp	vector	$tmp1321	 %read{2356,2356} %write{2354,2354}
temp	vector	$tmp1322	 %read{2356,2356} %write{2355,2355}
temp	int	$tmp1323	 %read{2361,2361} %write{2360,2360}
temp	float	$tmp1324	 %read{2368,2368} %write{2364,2364}
temp	float	$tmp1325	 %read{2364,2364} %write{2363,2363}
temp	float	$tmp1326	 %read{2363,2363} %write{2362,2362}
temp	float	$tmp1327	 %read{2368,2368} %write{2367,2367}
temp	float	$tmp1328	 %read{2367,2367} %write{2366,2366}
temp	float	$tmp1329	 %read{2366,2366} %write{2365,2365}
temp	float	$tmp1330	 %read{2372,2372} %write{2368,2368}
temp	float	$tmp1331	 %read{2372,2372} %write{2371,2371}
temp	float	$tmp1332	 %read{2371,2371} %write{2370,2370}
temp	float	$tmp1333	 %read{2370,2370} %write{2369,2369}
temp	float	$tmp1334	 %read{2374,2374} %write{2372,2372}
temp	float	$tmp1335	 %read{2374,2374} %write{2373,2373}
temp	point	$tmp1336	 %read{2381,2381} %write{2380,2380}
temp	float	$tmp1337	 %read{2380,2380} %write{2377,2377}
temp	float	$tmp1338	 %read{2380,2380} %write{2378,2378}
temp	float	$tmp1339	 %read{2380,2380} %write{2379,2379}
temp	float	$tmp1340	 %read{2383,2383} %write{2382,2382}
temp	int	$tmp1341	 %read{2384,2384} %write{2383,2383}
temp	float	$tmp1342	 %read{2386,2386} %write{2385,2385}
temp	float	$tmp1343	 %read{2388,2388} %write{2387,2387}
temp	float	$tmp1344	 %read{2390,2390} %write{2389,2389}
temp	point	$tmp1345	 %read{2393,2393} %write{2392,2392}
temp	point	$tmp1346	 %read{2395,2395} %write{2394,2394}
temp	point	$tmp1347	 %read{2397,2397} %write{2396,2396}
temp	float	$tmp1348	 %read{2400,2400} %write{2399,2399}
temp	int	$tmp1349	 %read{2401,2401} %write{2400,2400}
temp	float	$tmp1350	 %read{2403,2403} %write{2402,2402}
temp	float	$tmp1351	 %read{2405,2405} %write{2404,2404}
temp	point	$tmp1352	 %read{2408,2408} %write{2407,2407}
temp	point	$tmp1353	 %read{2410,2410} %write{2409,2409}
temp	float	$tmp1354	 %read{2413,2413} %write{2412,2412}
temp	int	$tmp1355	 %read{2414,2414} %write{2413,2413}
temp	float	$tmp1356	 %read{2416,2416} %write{2415,2415}
temp	point	$tmp1357	 %read{2419,2419} %write{2418,2418}
temp	float	$tmp1358	 %read{2422,2422} %write{2421,2421}
temp	int	$tmp1359	 %read{2423,2423} %write{2422,2422}
temp	int	$tmp1360	 %read{2147483647,-1} %write{2426,2426}
temp	int	$tmp1361	 %read{2147483647,-1} %write{2428,2428}
temp	int	$tmp1362	 %read{2147483647,-1} %write{2430,2430}
temp	float	$tmp1363	 %read{2434,2434} %write{2433,2433}
temp	int	$tmp1364	 %read{2437,2437} %write{2436,2436}
temp	float	$tmp1365	 %read{2613,2613} %write{2612,2612}
temp	float	$tmp1366	 %read{2444,2444} %write{2443,2443}
temp	float	$tmp1367	 %read{2443,2443} %write{2442,2442}
temp	float	$tmp1368	 %read{2447,2447} %write{2446,2446}
temp	float	$tmp1369	 %read{2446,2446} %write{2445,2445}
temp	float	$tmp1370	 %read{2450,2450} %write{2449,2449}
temp	float	$tmp1371	 %read{2449,2449} %write{2448,2448}
temp	int	$tmp1372	 %read{2458,2458} %write{2457,2457}
temp	int	$tmp1373	 %read{2455,2611} %write{2455,2611}
temp	int	$tmp1374	 %read{2462,2462} %write{2461,2461}
temp	int	$tmp1375	 %read{2459,2609} %write{2459,2609}
temp	int	$tmp1376	 %read{2466,2466} %write{2465,2465}
temp	int	$tmp1377	 %read{2463,2607} %write{2463,2607}
temp	float	$tmp1378	 %read{2470,2470} %write{2467,2467}
temp	float	$tmp1379	 %read{2470,2470} %write{2468,2468}
temp	float	$tmp1380	 %read{2470,2470} %write{2469,2469}
temp	color	$tmp1381	 %read{2484,2484} %write{2483,2483}
temp	point	$tmp1382	 %read{2477,2477} %write{2476,2476}
temp	float	$tmp1383	 %read{2476,2476} %write{2473,2473}
temp	float	$tmp1384	 %read{2476,2476} %write{2474,2474}
temp	float	$tmp1385	 %read{2476,2476} %write{2475,2475}
temp	point	$tmp1386	 %read{2482,2482} %write{2481,2481}
temp	float	$tmp1387	 %read{2481,2481} %write{2478,2478}
temp	float	$tmp1388	 %read{2481,2481} %write{2479,2479}
temp	float	$tmp1389	 %read{2481,2481} %write{2480,2480}
temp	point	$tmp1390	 %read{2486,2486} %write{2485,2485}
temp	int	$tmp1391	 %read{2489,2489} %write{2488,2488}
temp	int	$tmp1392	 %read{2493,2493} %write{2492,2492}
temp	int	$tmp1393	 %read{2497,2497} %write{2496,2496}
temp	float	$tmp1394	 %read{2502,2502} %write{2499,2499}
temp	float	$tmp1395	 %read{2499,2499} %write{2498,2498}
temp	float	$tmp1396	 %read{2502,2502} %write{2501,2501}
temp	float	$tmp1397	 %read{2501,2501} %write{2500,2500}
temp	float	$tmp1398	 %read{2505,2505} %write{2502,2502}
temp	float	$tmp1399	 %read{2505,2505} %write{2504,2504}
temp	float	$tmp1400	 %read{2504,2504} %write{2503,2503}
temp	int	$tmp1401	 %read{2508,2508} %write{2507,2507}
temp	float	$tmp1402	 %read{2516,2516} %write{2510,2510}
temp	float	$tmp1403	 %read{2510,2510} %write{2509,2509}
temp	float	$tmp1404	 %read{2516,2516} %write{2515,2515}
temp	float	$tmp1405	 %read{2515,2515} %write{2512,2512}
temp	float	$tmp1406	 %read{2512,2512} %write{2511,2511}
temp	float	$tmp1407	 %read{2515,2515} %write{2514,2514}
temp	float	$tmp1408	 %read{2514,2514} %write{2513,2513}
temp	int	$tmp1409	 %read{2519,2519} %write{2518,2518}
temp	float	$tmp1410	 %read{2526,2526} %write{2522,2522}
temp	float	$tmp1411	 %read{2522,2522} %write{2521,2521}
temp	float	$tmp1412	 %read{2521,2521} %write{2520,2520}
temp	float	$tmp1413	 %read{2526,2526} %write{2525,2525}
temp	float	$tmp1414	 %read{2525,2525} %write{2524,2524}
temp	float	$tmp1415	 %read{2524,2524} %write{2523,2523}
temp	float	$tmp1416	 %read{2530,2530} %write{2526,2526}
temp	float	$tmp1417	 %read{2530,2530} %write{2529,2529}
temp	float	$tmp1418	 %read{2529,2529} %write{2528,2528}
temp	float	$tmp1419	 %read{2528,2528} %write{2527,2527}
temp	int	$tmp1420	 %read{2533,2533} %write{2532,2532}
temp	float	$tmp1421	 %read{2538,2538} %write{2537,2537}
temp	float	$tmp1422	 %read{2537,2537} %write{2536,2536}
temp	vector	$tmp1423	 %read{2536,2536} %write{2534,2534}
temp	vector	$tmp1424	 %read{2536,2536} %write{2535,2535}
temp	int	$tmp1425	 %read{2541,2541} %write{2540,2540}
temp	float	$tmp1426	 %read{2548,2548} %write{2544,2544}
temp	float	$tmp1427	 %read{2544,2544} %write{2543,2543}
temp	float	$tmp1428	 %read{2543,2543} %write{2542,2542}
temp	float	$tmp1429	 %read{2548,2548} %write{2547,2547}
temp	float	$tmp1430	 %read{2547,2547} %write{2546,2546}
temp	float	$tmp1431	 %read{2546,2546} %write{2545,2545}
temp	float	$tmp1432	 %read{2552,2552} %write{2548,2548}
temp	float	$tmp1433	 %read{2552,2552} %write{2551,2551}
temp	float	$tmp1434	 %read{2551,2551} %write{2550,2550}
temp	float	$tmp1435	 %read{2550,2550} %write{2549,2549}
temp	float	$tmp1436	 %read{2554,2554} %write{2552,2552}
temp	float	$tmp1437	 %read{2554,2554} %write{2553,2553}
temp	point	$tmp1438	 %read{2561,2561} %write{2560,2560}
temp	float	$tmp1439	 %read{2560,2560} %write{2557,2557}
temp	float	$tmp1440	 %read{2560,2560} %write{2558,2558}
temp	float	$tmp1441	 %read{2560,2560} %write{2559,2559}
temp	float	$tmp1442	 %read{2563,2563} %write{2562,2562}
temp	int	$tmp1443	 %read{2564,2564} %write{2563,2563}
temp	float	$tmp1444	 %read{2566,2566} %write{2565,2565}
temp	float	$tmp1445	 %read{2568,2568} %write{2567,2567}
temp	float	$tmp1446	 %read{2570,2570} %write{2569,2569}
temp	point	$tmp1447	 %read{2573,2573} %write{2572,2572}
temp	point	$tmp1448	 %read{2575,2575} %write{2574,2574}
temp	point	$tmp1449	 %read{2577,2577} %write{2576,2576}
temp	float	$tmp1450	 %read{2580,2580} %write{2579,2579}
temp	int	$tmp1451	 %read{2581,2581} %write{2580,2580}
temp	float	$tmp1452	 %read{2583,2583} %write{2582,2582}
temp	float	$tmp1453	 %read{2585,2585} %write{2584,2584}
temp	point	$tmp1454	 %read{2588,2588} %write{2587,2587}
temp	point	$tmp1455	 %read{2590,2590} %write{2589,2589}
temp	float	$tmp1456	 %read{2593,2593} %write{2592,2592}
temp	int	$tmp1457	 %read{2594,2594} %write{2593,2593}
temp	float	$tmp1458	 %read{2596,2596} %write{2595,2595}
temp	point	$tmp1459	 %read{2599,2599} %write{2598,2598}
temp	float	$tmp1460	 %read{2602,2602} %write{2601,2601}
temp	int	$tmp1461	 %read{2603,2603} %write{2602,2602}
temp	int	$tmp1462	 %read{2147483647,-1} %write{2606,2606}
temp	int	$tmp1463	 %read{2147483647,-1} %write{2608,2608}
temp	int	$tmp1464	 %read{2147483647,-1} %write{2610,2610}
temp	float	$tmp1465	 %read{2614,2614} %write{2613,2613}
temp	int	$tmp1466	 %read{2617,2617} %write{2616,2616}
temp	float	$tmp1467	 %read{2793,2793} %write{2792,2792}
temp	float	$tmp1468	 %read{2624,2624} %write{2623,2623}
temp	float	$tmp1469	 %read{2623,2623} %write{2622,2622}
temp	float	$tmp1470	 %read{2627,2627} %write{2626,2626}
temp	float	$tmp1471	 %read{2626,2626} %write{2625,2625}
temp	float	$tmp1472	 %read{2630,2630} %write{2629,2629}
temp	float	$tmp1473	 %read{2629,2629} %write{2628,2628}
temp	int	$tmp1474	 %read{2638,2638} %write{2637,2637}
temp	int	$tmp1475	 %read{2635,2791} %write{2635,2791}
temp	int	$tmp1476	 %read{2642,2642} %write{2641,2641}
temp	int	$tmp1477	 %read{2639,2789} %write{2639,2789}
temp	int	$tmp1478	 %read{2646,2646} %write{2645,2645}
temp	int	$tmp1479	 %read{2643,2787} %write{2643,2787}
temp	float	$tmp1480	 %read{2650,2650} %write{2647,2647}
temp	float	$tmp1481	 %read{2650,2650} %write{2648,2648}
temp	float	$tmp1482	 %read{2650,2650} %write{2649,2649}
temp	color	$tmp1483	 %read{2664,2664} %write{2663,2663}
temp	point	$tmp1484	 %read{2657,2657} %write{2656,2656}
temp	float	$tmp1485	 %read{2656,2656} %write{2653,2653}
temp	float	$tmp1486	 %read{2656,2656} %write{2654,2654}
temp	float	$tmp1487	 %read{2656,2656} %write{2655,2655}
temp	point	$tmp1488	 %read{2662,2662} %write{2661,2661}
temp	float	$tmp1489	 %read{2661,2661} %write{2658,2658}
temp	float	$tmp1490	 %read{2661,2661} %write{2659,2659}
temp	float	$tmp1491	 %read{2661,2661} %write{2660,2660}
temp	point	$tmp1492	 %read{2666,2666} %write{2665,2665}
temp	int	$tmp1493	 %read{2669,2669} %write{2668,2668}
temp	int	$tmp1494	 %read{2673,2673} %write{2672,2672}
temp	int	$tmp1495	 %read{2677,2677} %write{2676,2676}
temp	float	$tmp1496	 %read{2682,2682} %write{2679,2679}
temp	float	$tmp1497	 %read{2679,2679} %write{2678,2678}
temp	float	$tmp1498	 %read{2682,2682} %write{2681,2681}
temp	float	$tmp1499	 %read{2681,2681} %write{2680,2680}
temp	float	$tmp1500	 %read{2685,2685} %write{2682,2682}
temp	float	$tmp1501	 %read{2685,2685} %write{2684,2684}
temp	float	$tmp1502	 %read{2684,2684} %write{2683,2683}
temp	int	$tmp1503	 %read{2688,2688} %write{2687,2687}
temp	float	$tmp1504	 %read{2696,2696} %write{2690,2690}
temp	float	$tmp1505	 %read{2690,2690} %write{2689,2689}
temp	float	$tmp1506	 %read{2696,2696} %write{2695,2695}
temp	float	$tmp1507	 %read{2695,2695} %write{2692,2692}
temp	float	$tmp1508	 %read{2692,2692} %write{2691,2691}
temp	float	$tmp1509	 %read{2695,2695} %write{2694,2694}
temp	float	$tmp1510	 %read{2694,2694} %write{2693,2693}
temp	int	$tmp1511	 %read{2699,2699} %write{2698,2698}
temp	float	$tmp1512	 %read{2706,2706} %write{2702,2702}
temp	float	$tmp1513	 %read{2702,2702} %write{2701,2701}
temp	float	$tmp1514	 %read{2701,2701} %write{2700,2700}
temp	float	$tmp1515	 %read{2706,2706} %write{2705,2705}
temp	float	$tmp1516	 %read{2705,2705} %write{2704,2704}
temp	float	$tmp1517	 %read{2704,2704} %write{2703,2703}
temp	float	$tmp1518	 %read{2710,2710} %write{2706,2706}
temp	float	$tmp1519	 %read{2710,2710} %write{2709,2709}
temp	float	$tmp1520	 %read{2709,2709} %write{2708,2708}
temp	float	$tmp1521	 %read{2708,2708} %write{2707,2707}
temp	int	$tmp1522	 %read{2713,2713} %write{2712,2712}
temp	float	$tmp1523	 %read{2718,2718} %write{2717,2717}
temp	float	$tmp1524	 %read{2717,2717} %write{2716,2716}
temp	vector	$tmp1525	 %read{2716,2716} %write{2714,2714}
temp	vector	$tmp1526	 %read{2716,2716} %write{2715,2715}
temp	int	$tmp1527	 %read{2721,2721} %write{2720,2720}
temp	float	$tmp1528	 %read{2728,2728} %write{2724,2724}
temp	float	$tmp1529	 %read{2724,2724} %write{2723,2723}
temp	float	$tmp1530	 %read{2723,2723} %write{2722,2722}
temp	float	$tmp1531	 %read{2728,2728} %write{2727,2727}
temp	float	$tmp1532	 %read{2727,2727} %write{2726,2726}
temp	float	$tmp1533	 %read{2726,2726} %write{2725,2725}
temp	float	$tmp1534	 %read{2732,2732} %write{2728,2728}
temp	float	$tmp1535	 %read{2732,2732} %write{2731,2731}
temp	float	$tmp1536	 %read{2731,2731} %write{2730,2730}
temp	float	$tmp1537	 %read{2730,2730} %write{2729,2729}
temp	float	$tmp1538	 %read{2734,2734} %write{2732,2732}
temp	float	$tmp1539	 %read{2734,2734} %write{2733,2733}
temp	point	$tmp1540	 %read{2741,2741} %write{2740,2740}
temp	float	$tmp1541	 %read{2740,2740} %write{2737,2737}
temp	float	$tmp1542	 %read{2740,2740} %write{2738,2738}
temp	float	$tmp1543	 %read{2740,2740} %write{2739,2739}
temp	float	$tmp1544	 %read{2743,2743} %write{2742,2742}
temp	int	$tmp1545	 %read{2744,2744} %write{2743,2743}
temp	float	$tmp1546	 %read{2746,2746} %write{2745,2745}
temp	float	$tmp1547	 %read{2748,2748} %write{2747,2747}
temp	float	$tmp1548	 %read{2750,2750} %write{2749,2749}
temp	point	$tmp1549	 %read{2753,2753} %write{2752,2752}
temp	point	$tmp1550	 %read{2755,2755} %write{2754,2754}
temp	point	$tmp1551	 %read{2757,2757} %write{2756,2756}
temp	float	$tmp1552	 %read{2760,2760} %write{2759,2759}
temp	int	$tmp1553	 %read{2761,2761} %write{2760,2760}
temp	float	$tmp1554	 %read{2763,2763} %write{2762,2762}
temp	float	$tmp1555	 %read{2765,2765} %write{2764,2764}
temp	point	$tmp1556	 %read{2768,2768} %write{2767,2767}
temp	point	$tmp1557	 %read{2770,2770} %write{2769,2769}
temp	float	$tmp1558	 %read{2773,2773} %write{2772,2772}
temp	int	$tmp1559	 %read{2774,2774} %write{2773,2773}
temp	float	$tmp1560	 %read{2776,2776} %write{2775,2775}
temp	point	$tmp1561	 %read{2779,2779} %write{2778,2778}
temp	float	$tmp1562	 %read{2782,2782} %write{2781,2781}
temp	int	$tmp1563	 %read{2783,2783} %write{2782,2782}
temp	int	$tmp1564	 %read{2147483647,-1} %write{2786,2786}
temp	int	$tmp1565	 %read{2147483647,-1} %write{2788,2788}
temp	int	$tmp1566	 %read{2147483647,-1} %write{2790,2790}
temp	float	$tmp1567	 %read{2794,2794} %write{2793,2793}
temp	int	$tmp1568	 %read{2797,2797} %write{2796,2796}
temp	float	$tmp1569	 %read{2973,2973} %write{2972,2972}
temp	float	$tmp1570	 %read{2804,2804} %write{2803,2803}
temp	float	$tmp1571	 %read{2803,2803} %write{2802,2802}
temp	float	$tmp1572	 %read{2807,2807} %write{2806,2806}
temp	float	$tmp1573	 %read{2806,2806} %write{2805,2805}
temp	float	$tmp1574	 %read{2810,2810} %write{2809,2809}
temp	float	$tmp1575	 %read{2809,2809} %write{2808,2808}
temp	int	$tmp1576	 %read{2818,2818} %write{2817,2817}
temp	int	$tmp1577	 %read{2815,2971} %write{2815,2971}
temp	int	$tmp1578	 %read{2822,2822} %write{2821,2821}
temp	int	$tmp1579	 %read{2819,2969} %write{2819,2969}
temp	int	$tmp1580	 %read{2826,2826} %write{2825,2825}
temp	int	$tmp1581	 %read{2823,2967} %write{2823,2967}
temp	float	$tmp1582	 %read{2830,2830} %write{2827,2827}
temp	float	$tmp1583	 %read{2830,2830} %write{2828,2828}
temp	float	$tmp1584	 %read{2830,2830} %write{2829,2829}
temp	color	$tmp1585	 %read{2844,2844} %write{2843,2843}
temp	point	$tmp1586	 %read{2837,2837} %write{2836,2836}
temp	float	$tmp1587	 %read{2836,2836} %write{2833,2833}
temp	float	$tmp1588	 %read{2836,2836} %write{2834,2834}
temp	float	$tmp1589	 %read{2836,2836} %write{2835,2835}
temp	point	$tmp1590	 %read{2842,2842} %write{2841,2841}
temp	float	$tmp1591	 %read{2841,2841} %write{2838,2838}
temp	float	$tmp1592	 %read{2841,2841} %write{2839,2839}
temp	float	$tmp1593	 %read{2841,2841} %write{2840,2840}
temp	point	$tmp1594	 %read{2846,2846} %write{2845,2845}
temp	int	$tmp1595	 %read{2849,2849} %write{2848,2848}
temp	int	$tmp1596	 %read{2853,2853} %write{2852,2852}
temp	int	$tmp1597	 %read{2857,2857} %write{2856,2856}
temp	float	$tmp1598	 %read{2862,2862} %write{2859,2859}
temp	float	$tmp1599	 %read{2859,2859} %write{2858,2858}
temp	float	$tmp1600	 %read{2862,2862} %write{2861,2861}
temp	float	$tmp1601	 %read{2861,2861} %write{2860,2860}
temp	float	$tmp1602	 %read{2865,2865} %write{2862,2862}
temp	float	$tmp1603	 %read{2865,2865} %write{2864,2864}
temp	float	$tmp1604	 %read{2864,2864} %write{2863,2863}
temp	int	$tmp1605	 %read{2868,2868} %write{2867,2867}
temp	float	$tmp1606	 %read{2876,2876} %write{2870,2870}
temp	float	$tmp1607	 %read{2870,2870} %write{2869,2869}
temp	float	$tmp1608	 %read{2876,2876} %write{2875,2875}
temp	float	$tmp1609	 %read{2875,2875} %write{2872,2872}
temp	float	$tmp1610	 %read{2872,2872} %write{2871,2871}
temp	float	$tmp1611	 %read{2875,2875} %write{2874,2874}
temp	float	$tmp1612	 %read{2874,2874} %write{2873,2873}
temp	int	$tmp1613	 %read{2879,2879} %write{2878,2878}
temp	float	$tmp1614	 %read{2886,2886} %write{2882,2882}
temp	float	$tmp1615	 %read{2882,2882} %write{2881,2881}
temp	float	$tmp1616	 %read{2881,2881} %write{2880,2880}
temp	float	$tmp1617	 %read{2886,2886} %write{2885,2885}
temp	float	$tmp1618	 %read{2885,2885} %write{2884,2884}
temp	float	$tmp1619	 %read{2884,2884} %write{2883,2883}
temp	float	$tmp1620	 %read{2890,2890} %write{2886,2886}
temp	float	$tmp1621	 %read{2890,2890} %write{2889,2889}
temp	float	$tmp1622	 %read{2889,2889} %write{2888,2888}
temp	float	$tmp1623	 %read{2888,2888} %write{2887,2887}
temp	int	$tmp1624	 %read{2893,2893} %write{2892,2892}
temp	float	$tmp1625	 %read{2898,2898} %write{2897,2897}
temp	float	$tmp1626	 %read{2897,2897} %write{2896,2896}
temp	vector	$tmp1627	 %read{2896,2896} %write{2894,2894}
temp	vector	$tmp1628	 %read{2896,2896} %write{2895,2895}
temp	int	$tmp1629	 %read{2901,2901} %write{2900,2900}
temp	float	$tmp1630	 %read{2908,2908} %write{2904,2904}
temp	float	$tmp1631	 %read{2904,2904} %write{2903,2903}
temp	float	$tmp1632	 %read{2903,2903} %write{2902,2902}
temp	float	$tmp1633	 %read{2908,2908} %write{2907,2907}
temp	float	$tmp1634	 %read{2907,2907} %write{2906,2906}
temp	float	$tmp1635	 %read{2906,2906} %write{2905,2905}
temp	float	$tmp1636	 %read{2912,2912} %write{2908,2908}
temp	float	$tmp1637	 %read{2912,2912} %write{2911,2911}
temp	float	$tmp1638	 %read{2911,2911} %write{2910,2910}
temp	float	$tmp1639	 %read{2910,2910} %write{2909,2909}
temp	float	$tmp1640	 %read{2914,2914} %write{2912,2912}
temp	float	$tmp1641	 %read{2914,2914} %write{2913,2913}
temp	point	$tmp1642	 %read{2921,2921} %write{2920,2920}
temp	float	$tmp1643	 %read{2920,2920} %write{2917,2917}
temp	float	$tmp1644	 %read{2920,2920} %write{2918,2918}
temp	float	$tmp1645	 %read{2920,2920} %write{2919,2919}
temp	float	$tmp1646	 %read{2923,2923} %write{2922,2922}
temp	int	$tmp1647	 %read{2924,2924} %write{2923,2923}
temp	float	$tmp1648	 %read{2926,2926} %write{2925,2925}
temp	float	$tmp1649	 %read{2928,2928} %write{2927,2927}
temp	float	$tmp1650	 %read{2930,2930} %write{2929,2929}
temp	point	$tmp1651	 %read{2933,2933} %write{2932,2932}
temp	point	$tmp1652	 %read{2935,2935} %write{2934,2934}
temp	point	$tmp1653	 %read{2937,2937} %write{2936,2936}
temp	float	$tmp1654	 %read{2940,2940} %write{2939,2939}
temp	int	$tmp1655	 %read{2941,2941} %write{2940,2940}
temp	float	$tmp1656	 %read{2943,2943} %write{2942,2942}
temp	float	$tmp1657	 %read{2945,2945} %write{2944,2944}
temp	point	$tmp1658	 %read{2948,2948} %write{2947,2947}
temp	point	$tmp1659	 %read{2950,2950} %write{2949,2949}
temp	float	$tmp1660	 %read{2953,2953} %write{2952,2952}
temp	int	$tmp1661	 %read{2954,2954} %write{2953,2953}
temp	float	$tmp1662	 %read{2956,2956} %write{2955,2955}
temp	point	$tmp1663	 %read{2959,2959} %write{2958,2958}
temp	float	$tmp1664	 %read{2962,2962} %write{2961,2961}
temp	int	$tmp1665	 %read{2963,2963} %write{2962,2962}
temp	int	$tmp1666	 %read{2147483647,-1} %write{2966,2966}
temp	int	$tmp1667	 %read{2147483647,-1} %write{2968,2968}
temp	int	$tmp1668	 %read{2147483647,-1} %write{2970,2970}
temp	float	$tmp1669	 %read{2974,2974} %write{2973,2973}
temp	int	$tmp1670	 %read{2977,2977} %write{2976,2976}
temp	float	$tmp1671	 %read{3155,3155} %write{3154,3154}
temp	float	$tmp1672	 %read{2984,2984} %write{2983,2983}
temp	float	$tmp1673	 %read{2983,2983} %write{2982,2982}
temp	float	$tmp1674	 %read{2987,2987} %write{2986,2986}
temp	float	$tmp1675	 %read{2986,2986} %write{2985,2985}
temp	float	$tmp1676	 %read{2990,2990} %write{2989,2989}
temp	float	$tmp1677	 %read{2989,2989} %write{2988,2988}
temp	int	$tmp1678	 %read{2998,2998} %write{2997,2997}
temp	int	$tmp1679	 %read{2995,3151} %write{2995,3151}
temp	int	$tmp1680	 %read{3002,3002} %write{3001,3001}
temp	int	$tmp1681	 %read{2999,3149} %write{2999,3149}
temp	int	$tmp1682	 %read{3006,3006} %write{3005,3005}
temp	int	$tmp1683	 %read{3003,3147} %write{3003,3147}
temp	float	$tmp1684	 %read{3010,3010} %write{3007,3007}
temp	float	$tmp1685	 %read{3010,3010} %write{3008,3008}
temp	float	$tmp1686	 %read{3010,3010} %write{3009,3009}
temp	color	$tmp1687	 %read{3024,3024} %write{3023,3023}
temp	point	$tmp1688	 %read{3017,3017} %write{3016,3016}
temp	float	$tmp1689	 %read{3016,3016} %write{3013,3013}
temp	float	$tmp1690	 %read{3016,3016} %write{3014,3014}
temp	float	$tmp1691	 %read{3016,3016} %write{3015,3015}
temp	point	$tmp1692	 %read{3022,3022} %write{3021,3021}
temp	float	$tmp1693	 %read{3021,3021} %write{3018,3018}
temp	float	$tmp1694	 %read{3021,3021} %write{3019,3019}
temp	float	$tmp1695	 %read{3021,3021} %write{3020,3020}
temp	point	$tmp1696	 %read{3026,3026} %write{3025,3025}
temp	int	$tmp1697	 %read{3029,3029} %write{3028,3028}
temp	int	$tmp1698	 %read{3033,3033} %write{3032,3032}
temp	int	$tmp1699	 %read{3037,3037} %write{3036,3036}
temp	float	$tmp1700	 %read{3042,3042} %write{3039,3039}
temp	float	$tmp1701	 %read{3039,3039} %write{3038,3038}
temp	float	$tmp1702	 %read{3042,3042} %write{3041,3041}
temp	float	$tmp1703	 %read{3041,3041} %write{3040,3040}
temp	float	$tmp1704	 %read{3045,3045} %write{3042,3042}
temp	float	$tmp1705	 %read{3045,3045} %write{3044,3044}
temp	float	$tmp1706	 %read{3044,3044} %write{3043,3043}
temp	int	$tmp1707	 %read{3048,3048} %write{3047,3047}
temp	float	$tmp1708	 %read{3056,3056} %write{3050,3050}
temp	float	$tmp1709	 %read{3050,3050} %write{3049,3049}
temp	float	$tmp1710	 %read{3056,3056} %write{3055,3055}
temp	float	$tmp1711	 %read{3055,3055} %write{3052,3052}
temp	float	$tmp1712	 %read{3052,3052} %write{3051,3051}
temp	float	$tmp1713	 %read{3055,3055} %write{3054,3054}
temp	float	$tmp1714	 %read{3054,3054} %write{3053,3053}
temp	int	$tmp1715	 %read{3059,3059} %write{3058,3058}
temp	float	$tmp1716	 %read{3066,3066} %write{3062,3062}
temp	float	$tmp1717	 %read{3062,3062} %write{3061,3061}
temp	float	$tmp1718	 %read{3061,3061} %write{3060,3060}
temp	float	$tmp1719	 %read{3066,3066} %write{3065,3065}
temp	float	$tmp1720	 %read{3065,3065} %write{3064,3064}
temp	float	$tmp1721	 %read{3064,3064} %write{3063,3063}
temp	float	$tmp1722	 %read{3070,3070} %write{3066,3066}
temp	float	$tmp1723	 %read{3070,3070} %write{3069,3069}
temp	float	$tmp1724	 %read{3069,3069} %write{3068,3068}
temp	float	$tmp1725	 %read{3068,3068} %write{3067,3067}
temp	int	$tmp1726	 %read{3073,3073} %write{3072,3072}
temp	float	$tmp1727	 %read{3078,3078} %write{3077,3077}
temp	float	$tmp1728	 %read{3077,3077} %write{3076,3076}
temp	vector	$tmp1729	 %read{3076,3076} %write{3074,3074}
temp	vector	$tmp1730	 %read{3076,3076} %write{3075,3075}
temp	int	$tmp1731	 %read{3081,3081} %write{3080,3080}
temp	float	$tmp1732	 %read{3088,3088} %write{3084,3084}
temp	float	$tmp1733	 %read{3084,3084} %write{3083,3083}
temp	float	$tmp1734	 %read{3083,3083} %write{3082,3082}
temp	float	$tmp1735	 %read{3088,3088} %write{3087,3087}
temp	float	$tmp1736	 %read{3087,3087} %write{3086,3086}
temp	float	$tmp1737	 %read{3086,3086} %write{3085,3085}
temp	float	$tmp1738	 %read{3092,3092} %write{3088,3088}
temp	float	$tmp1739	 %read{3092,3092} %write{3091,3091}
temp	float	$tmp1740	 %read{3091,3091} %write{3090,3090}
temp	float	$tmp1741	 %read{3090,3090} %write{3089,3089}
temp	float	$tmp1742	 %read{3094,3094} %write{3092,3092}
temp	float	$tmp1743	 %read{3094,3094} %write{3093,3093}
temp	point	$tmp1744	 %read{3101,3101} %write{3100,3100}
temp	float	$tmp1745	 %read{3100,3100} %write{3097,3097}
temp	float	$tmp1746	 %read{3100,3100} %write{3098,3098}
temp	float	$tmp1747	 %read{3100,3100} %write{3099,3099}
temp	float	$tmp1748	 %read{3103,3103} %write{3102,3102}
temp	int	$tmp1749	 %read{3104,3104} %write{3103,3103}
temp	float	$tmp1750	 %read{3106,3106} %write{3105,3105}
temp	float	$tmp1751	 %read{3108,3108} %write{3107,3107}
temp	float	$tmp1752	 %read{3110,3110} %write{3109,3109}
temp	point	$tmp1753	 %read{3113,3113} %write{3112,3112}
temp	point	$tmp1754	 %read{3115,3115} %write{3114,3114}
temp	point	$tmp1755	 %read{3117,3117} %write{3116,3116}
temp	float	$tmp1756	 %read{3120,3120} %write{3119,3119}
temp	int	$tmp1757	 %read{3121,3121} %write{3120,3120}
temp	float	$tmp1758	 %read{3123,3123} %write{3122,3122}
temp	float	$tmp1759	 %read{3125,3125} %write{3124,3124}
temp	point	$tmp1760	 %read{3128,3128} %write{3127,3127}
temp	point	$tmp1761	 %read{3130,3130} %write{3129,3129}
temp	float	$tmp1762	 %read{3133,3133} %write{3132,3132}
temp	int	$tmp1763	 %read{3134,3134} %write{3133,3133}
temp	float	$tmp1764	 %read{3136,3136} %write{3135,3135}
temp	point	$tmp1765	 %read{3139,3139} %write{3138,3138}
temp	float	$tmp1766	 %read{3142,3142} %write{3141,3141}
temp	int	$tmp1767	 %read{3143,3143} %write{3142,3142}
temp	int	$tmp1768	 %read{2147483647,-1} %write{3146,3146}
temp	int	$tmp1769	 %read{2147483647,-1} %write{3148,3148}
temp	int	$tmp1770	 %read{2147483647,-1} %write{3150,3150}
temp	float	$tmp1771	 %read{3154,3154} %write{3152,3152}
temp	float	$tmp1772	 %read{3154,3154} %write{3153,3153}
temp	float	$tmp1773	 %read{3156,3156} %write{3155,3155}
temp	int	$tmp1774	 %read{3159,3159} %write{3158,3158}
temp	float	$tmp1775	 %read{3344,3344} %write{3341,3342}
temp	float	$tmp1776	 %read{3338,3338} %write{3337,3337}
temp	float	$tmp1777	 %read{3167,3167} %write{3166,3166}
temp	float	$tmp1778	 %read{3166,3166} %write{3165,3165}
temp	float	$tmp1779	 %read{3170,3170} %write{3169,3169}
temp	float	$tmp1780	 %read{3169,3169} %write{3168,3168}
temp	float	$tmp1781	 %read{3173,3173} %write{3172,3172}
temp	float	$tmp1782	 %read{3172,3172} %write{3171,3171}
temp	int	$tmp1783	 %read{3181,3181} %write{3180,3180}
temp	int	$tmp1784	 %read{3178,3334} %write{3178,3334}
temp	int	$tmp1785	 %read{3185,3185} %write{3184,3184}
temp	int	$tmp1786	 %read{3182,3332} %write{3182,3332}
temp	int	$tmp1787	 %read{3189,3189} %write{3188,3188}
temp	int	$tmp1788	 %read{3186,3330} %write{3186,3330}
temp	float	$tmp1789	 %read{3193,3193} %write{3190,3190}
temp	float	$tmp1790	 %read{3193,3193} %write{3191,3191}
temp	float	$tmp1791	 %read{3193,3193} %write{3192,3192}
temp	color	$tmp1792	 %read{3207,3207} %write{3206,3206}
temp	point	$tmp1793	 %read{3200,3200} %write{3199,3199}
temp	float	$tmp1794	 %read{3199,3199} %write{3196,3196}
temp	float	$tmp1795	 %read{3199,3199} %write{3197,3197}
temp	float	$tmp1796	 %read{3199,3199} %write{3198,3198}
temp	point	$tmp1797	 %read{3205,3205} %write{3204,3204}
temp	float	$tmp1798	 %read{3204,3204} %write{3201,3201}
temp	float	$tmp1799	 %read{3204,3204} %write{3202,3202}
temp	float	$tmp1800	 %read{3204,3204} %write{3203,3203}
temp	point	$tmp1801	 %read{3209,3209} %write{3208,3208}
temp	int	$tmp1802	 %read{3212,3212} %write{3211,3211}
temp	int	$tmp1803	 %read{3216,3216} %write{3215,3215}
temp	int	$tmp1804	 %read{3220,3220} %write{3219,3219}
temp	float	$tmp1805	 %read{3225,3225} %write{3222,3222}
temp	float	$tmp1806	 %read{3222,3222} %write{3221,3221}
temp	float	$tmp1807	 %read{3225,3225} %write{3224,3224}
temp	float	$tmp1808	 %read{3224,3224} %write{3223,3223}
temp	float	$tmp1809	 %read{3228,3228} %write{3225,3225}
temp	float	$tmp1810	 %read{3228,3228} %write{3227,3227}
temp	float	$tmp1811	 %read{3227,3227} %write{3226,3226}
temp	int	$tmp1812	 %read{3231,3231} %write{3230,3230}
temp	float	$tmp1813	 %read{3239,3239} %write{3233,3233}
temp	float	$tmp1814	 %read{3233,3233} %write{3232,3232}
temp	float	$tmp1815	 %read{3239,3239} %write{3238,3238}
temp	float	$tmp1816	 %read{3238,3238} %write{3235,3235}
temp	float	$tmp1817	 %read{3235,3235} %write{3234,3234}
temp	float	$tmp1818	 %read{3238,3238} %write{3237,3237}
temp	float	$tmp1819	 %read{3237,3237} %write{3236,3236}
temp	int	$tmp1820	 %read{3242,3242} %write{3241,3241}
temp	float	$tmp1821	 %read{3249,3249} %write{3245,3245}
temp	float	$tmp1822	 %read{3245,3245} %write{3244,3244}
temp	float	$tmp1823	 %read{3244,3244} %write{3243,3243}
temp	float	$tmp1824	 %read{3249,3249} %write{3248,3248}
temp	float	$tmp1825	 %read{3248,3248} %write{3247,3247}
temp	float	$tmp1826	 %read{3247,3247} %write{3246,3246}
temp	float	$tmp1827	 %read{3253,3253} %write{3249,3249}
temp	float	$tmp1828	 %read{3253,3253} %write{3252,3252}
temp	float	$tmp1829	 %read{3252,3252} %write{3251,3251}
temp	float	$tmp1830	 %read{3251,3251} %write{3250,3250}
temp	int	$tmp1831	 %read{3256,3256} %write{3255,3255}
temp	float	$tmp1832	 %read{3261,3261} %write{3260,3260}
temp	float	$tmp1833	 %read{3260,3260} %write{3259,3259}
temp	vector	$tmp1834	 %read{3259,3259} %write{3257,3257}
temp	vector	$tmp1835	 %read{3259,3259} %write{3258,3258}
temp	int	$tmp1836	 %read{3264,3264} %write{3263,3263}
temp	float	$tmp1837	 %read{3271,3271} %write{3267,3267}
temp	float	$tmp1838	 %read{3267,3267} %write{3266,3266}
temp	float	$tmp1839	 %read{3266,3266} %write{3265,3265}
temp	float	$tmp1840	 %read{3271,3271} %write{3270,3270}
temp	float	$tmp1841	 %read{3270,3270} %write{3269,3269}
temp	float	$tmp1842	 %read{3269,3269} %write{3268,3268}
temp	float	$tmp1843	 %read{3275,3275} %write{3271,3271}
temp	float	$tmp1844	 %read{3275,3275} %write{3274,3274}
temp	float	$tmp1845	 %read{3274,3274} %write{3273,3273}
temp	float	$tmp1846	 %read{3273,3273} %write{3272,3272}
temp	float	$tmp1847	 %read{3277,3277} %write{3275,3275}
temp	float	$tmp1848	 %read{3277,3277} %write{3276,3276}
temp	point	$tmp1849	 %read{3284,3284} %write{3283,3283}
temp	float	$tmp1850	 %read{3283,3283} %write{3280,3280}
temp	float	$tmp1851	 %read{3283,3283} %write{3281,3281}
temp	float	$tmp1852	 %read{3283,3283} %write{3282,3282}
temp	float	$tmp1853	 %read{3286,3286} %write{3285,3285}
temp	int	$tmp1854	 %read{3287,3287} %write{3286,3286}
temp	float	$tmp1855	 %read{3289,3289} %write{3288,3288}
temp	float	$tmp1856	 %read{3291,3291} %write{3290,3290}
temp	float	$tmp1857	 %read{3293,3293} %write{3292,3292}
temp	point	$tmp1858	 %read{3296,3296} %write{3295,3295}
temp	point	$tmp1859	 %read{3298,3298} %write{3297,3297}
temp	point	$tmp1860	 %read{3300,3300} %write{3299,3299}
temp	float	$tmp1861	 %read{3303,3303} %write{3302,3302}
temp	int	$tmp1862	 %read{3304,3304} %write{3303,3303}
temp	float	$tmp1863	 %read{3306,3306} %write{3305,3305}
temp	float	$tmp1864	 %read{3308,3308} %write{3307,3307}
temp	point	$tmp1865	 %read{3311,3311} %write{3310,3310}
temp	point	$tmp1866	 %read{3313,3313} %write{3312,3312}
temp	float	$tmp1867	 %read{3316,3316} %write{3315,3315}
temp	int	$tmp1868	 %read{3317,3317} %write{3316,3316}
temp	float	$tmp1869	 %read{3319,3319} %write{3318,3318}
temp	point	$tmp1870	 %read{3322,3322} %write{3321,3321}
temp	float	$tmp1871	 %read{3325,3325} %write{3324,3324}
temp	int	$tmp1872	 %read{3326,3326} %write{3325,3325}
temp	int	$tmp1873	 %read{2147483647,-1} %write{3329,3329}
temp	int	$tmp1874	 %read{2147483647,-1} %write{3331,3331}
temp	int	$tmp1875	 %read{2147483647,-1} %write{3333,3333}
temp	float	$tmp1876	 %read{3337,3337} %write{3335,3335}
temp	float	$tmp1877	 %read{3337,3337} %write{3336,3336}
temp	int	$tmp1878	 %read{3340,3340} %write{3339,3339}
temp	float	$tmp1879	 %read{3345,3345} %write{3344,3344}
temp	int	$tmp1880	 %read{3348,3348} %write{3347,3347}
temp	float	$tmp1881	 %read{3353,3353} %write{3352,3352}
const	string	$const48	"noise_turbulence"		 %read{3355,7941} %write{2147483647,-1}
const	float	$const49	16		 %read{3360,7946} %write{2147483647,-1}
const	string	$const50	"clamp"		 %read{3359,7945} %write{2147483647,-1}
temp	float	$tmp1882	 %read{3361,3361} %write{3360,3360}
temp	int	$tmp1883	 %read{3363,4488} %write{3363,4488}
temp	point	$tmp1884	 %read{3374,4476} %write{3366,4461}
temp	int	$tmp1885	 %read{3369,3369} %write{3368,3368}
temp	int	$tmp1886	 %read{3373,3373} %write{3372,3372}
temp	int	$tmp1887	 %read{3377,3377} %write{3376,3376}
temp	int	$tmp1888	 %read{3378,3378} %write{3377,3377}
temp	int	$tmp1889	 %read{3384,3384} %write{3383,3383}
temp	float	$tmp1890	 %read{3560,3560} %write{3559,3559}
temp	float	$tmp1891	 %read{3391,3391} %write{3390,3390}
temp	float	$tmp1892	 %read{3390,3390} %write{3389,3389}
temp	float	$tmp1893	 %read{3394,3394} %write{3393,3393}
temp	float	$tmp1894	 %read{3393,3393} %write{3392,3392}
temp	float	$tmp1895	 %read{3397,3397} %write{3396,3396}
temp	float	$tmp1896	 %read{3396,3396} %write{3395,3395}
temp	int	$tmp1897	 %read{3405,3405} %write{3404,3404}
temp	int	$tmp1898	 %read{3402,3558} %write{3402,3558}
temp	int	$tmp1899	 %read{3409,3409} %write{3408,3408}
temp	int	$tmp1900	 %read{3406,3556} %write{3406,3556}
temp	int	$tmp1901	 %read{3413,3413} %write{3412,3412}
temp	int	$tmp1902	 %read{3410,3554} %write{3410,3554}
temp	float	$tmp1903	 %read{3417,3417} %write{3414,3414}
temp	float	$tmp1904	 %read{3417,3417} %write{3415,3415}
temp	float	$tmp1905	 %read{3417,3417} %write{3416,3416}
temp	color	$tmp1906	 %read{3431,3431} %write{3430,3430}
temp	point	$tmp1907	 %read{3424,3424} %write{3423,3423}
temp	float	$tmp1908	 %read{3423,3423} %write{3420,3420}
temp	float	$tmp1909	 %read{3423,3423} %write{3421,3421}
temp	float	$tmp1910	 %read{3423,3423} %write{3422,3422}
temp	point	$tmp1911	 %read{3429,3429} %write{3428,3428}
temp	float	$tmp1912	 %read{3428,3428} %write{3425,3425}
temp	float	$tmp1913	 %read{3428,3428} %write{3426,3426}
temp	float	$tmp1914	 %read{3428,3428} %write{3427,3427}
temp	point	$tmp1915	 %read{3433,3433} %write{3432,3432}
temp	int	$tmp1916	 %read{3436,3436} %write{3435,3435}
temp	int	$tmp1917	 %read{3440,3440} %write{3439,3439}
temp	int	$tmp1918	 %read{3444,3444} %write{3443,3443}
temp	float	$tmp1919	 %read{3449,3449} %write{3446,3446}
temp	float	$tmp1920	 %read{3446,3446} %write{3445,3445}
temp	float	$tmp1921	 %read{3449,3449} %write{3448,3448}
temp	float	$tmp1922	 %read{3448,3448} %write{3447,3447}
temp	float	$tmp1923	 %read{3452,3452} %write{3449,3449}
temp	float	$tmp1924	 %read{3452,3452} %write{3451,3451}
temp	float	$tmp1925	 %read{3451,3451} %write{3450,3450}
temp	int	$tmp1926	 %read{3455,3455} %write{3454,3454}
temp	float	$tmp1927	 %read{3463,3463} %write{3457,3457}
temp	float	$tmp1928	 %read{3457,3457} %write{3456,3456}
temp	float	$tmp1929	 %read{3463,3463} %write{3462,3462}
temp	float	$tmp1930	 %read{3462,3462} %write{3459,3459}
temp	float	$tmp1931	 %read{3459,3459} %write{3458,3458}
temp	float	$tmp1932	 %read{3462,3462} %write{3461,3461}
temp	float	$tmp1933	 %read{3461,3461} %write{3460,3460}
temp	int	$tmp1934	 %read{3466,3466} %write{3465,3465}
temp	float	$tmp1935	 %read{3473,3473} %write{3469,3469}
temp	float	$tmp1936	 %read{3469,3469} %write{3468,3468}
temp	float	$tmp1937	 %read{3468,3468} %write{3467,3467}
temp	float	$tmp1938	 %read{3473,3473} %write{3472,3472}
temp	float	$tmp1939	 %read{3472,3472} %write{3471,3471}
temp	float	$tmp1940	 %read{3471,3471} %write{3470,3470}
temp	float	$tmp1941	 %read{3477,3477} %write{3473,3473}
temp	float	$tmp1942	 %read{3477,3477} %write{3476,3476}
temp	float	$tmp1943	 %read{3476,3476} %write{3475,3475}
temp	float	$tmp1944	 %read{3475,3475} %write{3474,3474}
temp	int	$tmp1945	 %read{3480,3480} %write{3479,3479}
temp	float	$tmp1946	 %read{3485,3485} %write{3484,3484}
temp	float	$tmp1947	 %read{3484,3484} %write{3483,3483}
temp	vector	$tmp1948	 %read{3483,3483} %write{3481,3481}
temp	vector	$tmp1949	 %read{3483,3483} %write{3482,3482}
temp	int	$tmp1950	 %read{3488,3488} %write{3487,3487}
temp	float	$tmp1951	 %read{3495,3495} %write{3491,3491}
temp	float	$tmp1952	 %read{3491,3491} %write{3490,3490}
temp	float	$tmp1953	 %read{3490,3490} %write{3489,3489}
temp	float	$tmp1954	 %read{3495,3495} %write{3494,3494}
temp	float	$tmp1955	 %read{3494,3494} %write{3493,3493}
temp	float	$tmp1956	 %read{3493,3493} %write{3492,3492}
temp	float	$tmp1957	 %read{3499,3499} %write{3495,3495}
temp	float	$tmp1958	 %read{3499,3499} %write{3498,3498}
temp	float	$tmp1959	 %read{3498,3498} %write{3497,3497}
temp	float	$tmp1960	 %read{3497,3497} %write{3496,3496}
temp	float	$tmp1961	 %read{3501,3501} %write{3499,3499}
temp	float	$tmp1962	 %read{3501,3501} %write{3500,3500}
temp	point	$tmp1963	 %read{3508,3508} %write{3507,3507}
temp	float	$tmp1964	 %read{3507,3507} %write{3504,3504}
temp	float	$tmp1965	 %read{3507,3507} %write{3505,3505}
temp	float	$tmp1966	 %read{3507,3507} %write{3506,3506}
temp	float	$tmp1967	 %read{3510,3510} %write{3509,3509}
temp	int	$tmp1968	 %read{3511,3511} %write{3510,3510}
temp	float	$tmp1969	 %read{3513,3513} %write{3512,3512}
temp	float	$tmp1970	 %read{3515,3515} %write{3514,3514}
temp	float	$tmp1971	 %read{3517,3517} %write{3516,3516}
temp	point	$tmp1972	 %read{3520,3520} %write{3519,3519}
temp	point	$tmp1973	 %read{3522,3522} %write{3521,3521}
temp	point	$tmp1974	 %read{3524,3524} %write{3523,3523}
temp	float	$tmp1975	 %read{3527,3527} %write{3526,3526}
temp	int	$tmp1976	 %read{3528,3528} %write{3527,3527}
temp	float	$tmp1977	 %read{3530,3530} %write{3529,3529}
temp	float	$tmp1978	 %read{3532,3532} %write{3531,3531}
temp	point	$tmp1979	 %read{3535,3535} %write{3534,3534}
temp	point	$tmp1980	 %read{3537,3537} %write{3536,3536}
temp	float	$tmp1981	 %read{3540,3540} %write{3539,3539}
temp	int	$tmp1982	 %read{3541,3541} %write{3540,3540}
temp	float	$tmp1983	 %read{3543,3543} %write{3542,3542}
temp	point	$tmp1984	 %read{3546,3546} %write{3545,3545}
temp	float	$tmp1985	 %read{3549,3549} %write{3548,3548}
temp	int	$tmp1986	 %read{3550,3550} %write{3549,3549}
temp	int	$tmp1987	 %read{2147483647,-1} %write{3553,3553}
temp	int	$tmp1988	 %read{2147483647,-1} %write{3555,3555}
temp	int	$tmp1989	 %read{2147483647,-1} %write{3557,3557}
temp	float	$tmp1990	 %read{3561,3561} %write{3560,3560}
temp	int	$tmp1991	 %read{3564,3564} %write{3563,3563}
temp	float	$tmp1992	 %read{3740,3740} %write{3739,3739}
temp	float	$tmp1993	 %read{3571,3571} %write{3570,3570}
temp	float	$tmp1994	 %read{3570,3570} %write{3569,3569}
temp	float	$tmp1995	 %read{3574,3574} %write{3573,3573}
temp	float	$tmp1996	 %read{3573,3573} %write{3572,3572}
temp	float	$tmp1997	 %read{3577,3577} %write{3576,3576}
temp	float	$tmp1998	 %read{3576,3576} %write{3575,3575}
temp	int	$tmp1999	 %read{3585,3585} %write{3584,3584}
temp	int	$tmp2000	 %read{3582,3738} %write{3582,3738}
temp	int	$tmp2001	 %read{3589,3589} %write{3588,3588}
temp	int	$tmp2002	 %read{3586,3736} %write{3586,3736}
temp	int	$tmp2003	 %read{3593,3593} %write{3592,3592}
temp	int	$tmp2004	 %read{3590,3734} %write{3590,3734}
temp	float	$tmp2005	 %read{3597,3597} %write{3594,3594}
temp	float	$tmp2006	 %read{3597,3597} %write{3595,3595}
temp	float	$tmp2007	 %read{3597,3597} %write{3596,3596}
temp	color	$tmp2008	 %read{3611,3611} %write{3610,3610}
temp	point	$tmp2009	 %read{3604,3604} %write{3603,3603}
temp	float	$tmp2010	 %read{3603,3603} %write{3600,3600}
temp	float	$tmp2011	 %read{3603,3603} %write{3601,3601}
temp	float	$tmp2012	 %read{3603,3603} %write{3602,3602}
temp	point	$tmp2013	 %read{3609,3609} %write{3608,3608}
temp	float	$tmp2014	 %read{3608,3608} %write{3605,3605}
temp	float	$tmp2015	 %read{3608,3608} %write{3606,3606}
temp	float	$tmp2016	 %read{3608,3608} %write{3607,3607}
temp	point	$tmp2017	 %read{3613,3613} %write{3612,3612}
temp	int	$tmp2018	 %read{3616,3616} %write{3615,3615}
temp	int	$tmp2019	 %read{3620,3620} %write{3619,3619}
temp	int	$tmp2020	 %read{3624,3624} %write{3623,3623}
temp	float	$tmp2021	 %read{3629,3629} %write{3626,3626}
temp	float	$tmp2022	 %read{3626,3626} %write{3625,3625}
temp	float	$tmp2023	 %read{3629,3629} %write{3628,3628}
temp	float	$tmp2024	 %read{3628,3628} %write{3627,3627}
temp	float	$tmp2025	 %read{3632,3632} %write{3629,3629}
temp	float	$tmp2026	 %read{3632,3632} %write{3631,3631}
temp	float	$tmp2027	 %read{3631,3631} %write{3630,3630}
temp	int	$tmp2028	 %read{3635,3635} %write{3634,3634}
temp	float	$tmp2029	 %read{3643,3643} %write{3637,3637}
temp	float	$tmp2030	 %read{3637,3637} %write{3636,3636}
temp	float	$tmp2031	 %read{3643,3643} %write{3642,3642}
temp	float	$tmp2032	 %read{3642,3642} %write{3639,3639}
temp	float	$tmp2033	 %read{3639,3639} %write{3638,3638}
temp	float	$tmp2034	 %read{3642,3642} %write{3641,3641}
temp	float	$tmp2035	 %read{3641,3641} %write{3640,3640}
temp	int	$tmp2036	 %read{3646,3646} %write{3645,3645}
temp	float	$tmp2037	 %read{3653,3653} %write{3649,3649}
temp	float	$tmp2038	 %read{3649,3649} %write{3648,3648}
temp	float	$tmp2039	 %read{3648,3648} %write{3647,3647}
temp	float	$tmp2040	 %read{3653,3653} %write{3652,3652}
temp	float	$tmp2041	 %read{3652,3652} %write{3651,3651}
temp	float	$tmp2042	 %read{3651,3651} %write{3650,3650}
temp	float	$tmp2043	 %read{3657,3657} %write{3653,3653}
temp	float	$tmp2044	 %read{3657,3657} %write{3656,3656}
temp	float	$tmp2045	 %read{3656,3656} %write{3655,3655}
temp	float	$tmp2046	 %read{3655,3655} %write{3654,3654}
temp	int	$tmp2047	 %read{3660,3660} %write{3659,3659}
temp	float	$tmp2048	 %read{3665,3665} %write{3664,3664}
temp	float	$tmp2049	 %read{3664,3664} %write{3663,3663}
temp	vector	$tmp2050	 %read{3663,3663} %write{3661,3661}
temp	vector	$tmp2051	 %read{3663,3663} %write{3662,3662}
temp	int	$tmp2052	 %read{3668,3668} %write{3667,3667}
temp	float	$tmp2053	 %read{3675,3675} %write{3671,3671}
temp	float	$tmp2054	 %read{3671,3671} %write{3670,3670}
temp	float	$tmp2055	 %read{3670,3670} %write{3669,3669}
temp	float	$tmp2056	 %read{3675,3675} %write{3674,3674}
temp	float	$tmp2057	 %read{3674,3674} %write{3673,3673}
temp	float	$tmp2058	 %read{3673,3673} %write{3672,3672}
temp	float	$tmp2059	 %read{3679,3679} %write{3675,3675}
temp	float	$tmp2060	 %read{3679,3679} %write{3678,3678}
temp	float	$tmp2061	 %read{3678,3678} %write{3677,3677}
temp	float	$tmp2062	 %read{3677,3677} %write{3676,3676}
temp	float	$tmp2063	 %read{3681,3681} %write{3679,3679}
temp	float	$tmp2064	 %read{3681,3681} %write{3680,3680}
temp	point	$tmp2065	 %read{3688,3688} %write{3687,3687}
temp	float	$tmp2066	 %read{3687,3687} %write{3684,3684}
temp	float	$tmp2067	 %read{3687,3687} %write{3685,3685}
temp	float	$tmp2068	 %read{3687,3687} %write{3686,3686}
temp	float	$tmp2069	 %read{3690,3690} %write{3689,3689}
temp	int	$tmp2070	 %read{3691,3691} %write{3690,3690}
temp	float	$tmp2071	 %read{3693,3693} %write{3692,3692}
temp	float	$tmp2072	 %read{3695,3695} %write{3694,3694}
temp	float	$tmp2073	 %read{3697,3697} %write{3696,3696}
temp	point	$tmp2074	 %read{3700,3700} %write{3699,3699}
temp	point	$tmp2075	 %read{3702,3702} %write{3701,3701}
temp	point	$tmp2076	 %read{3704,3704} %write{3703,3703}
temp	float	$tmp2077	 %read{3707,3707} %write{3706,3706}
temp	int	$tmp2078	 %read{3708,3708} %write{3707,3707}
temp	float	$tmp2079	 %read{3710,3710} %write{3709,3709}
temp	float	$tmp2080	 %read{3712,3712} %write{3711,3711}
temp	point	$tmp2081	 %read{3715,3715} %write{3714,3714}
temp	point	$tmp2082	 %read{3717,3717} %write{3716,3716}
temp	float	$tmp2083	 %read{3720,3720} %write{3719,3719}
temp	int	$tmp2084	 %read{3721,3721} %write{3720,3720}
temp	float	$tmp2085	 %read{3723,3723} %write{3722,3722}
temp	point	$tmp2086	 %read{3726,3726} %write{3725,3725}
temp	float	$tmp2087	 %read{3729,3729} %write{3728,3728}
temp	int	$tmp2088	 %read{3730,3730} %write{3729,3729}
temp	int	$tmp2089	 %read{2147483647,-1} %write{3733,3733}
temp	int	$tmp2090	 %read{2147483647,-1} %write{3735,3735}
temp	int	$tmp2091	 %read{2147483647,-1} %write{3737,3737}
temp	float	$tmp2092	 %read{3741,3741} %write{3740,3740}
temp	int	$tmp2093	 %read{3744,3744} %write{3743,3743}
temp	float	$tmp2094	 %read{3920,3920} %write{3919,3919}
temp	float	$tmp2095	 %read{3751,3751} %write{3750,3750}
temp	float	$tmp2096	 %read{3750,3750} %write{3749,3749}
temp	float	$tmp2097	 %read{3754,3754} %write{3753,3753}
temp	float	$tmp2098	 %read{3753,3753} %write{3752,3752}
temp	float	$tmp2099	 %read{3757,3757} %write{3756,3756}
temp	float	$tmp2100	 %read{3756,3756} %write{3755,3755}
temp	int	$tmp2101	 %read{3765,3765} %write{3764,3764}
temp	int	$tmp2102	 %read{3762,3918} %write{3762,3918}
temp	int	$tmp2103	 %read{3769,3769} %write{3768,3768}
temp	int	$tmp2104	 %read{3766,3916} %write{3766,3916}
temp	int	$tmp2105	 %read{3773,3773} %write{3772,3772}
temp	int	$tmp2106	 %read{3770,3914} %write{3770,3914}
temp	float	$tmp2107	 %read{3777,3777} %write{3774,3774}
temp	float	$tmp2108	 %read{3777,3777} %write{3775,3775}
temp	float	$tmp2109	 %read{3777,3777} %write{3776,3776}
temp	color	$tmp2110	 %read{3791,3791} %write{3790,3790}
temp	point	$tmp2111	 %read{3784,3784} %write{3783,3783}
temp	float	$tmp2112	 %read{3783,3783} %write{3780,3780}
temp	float	$tmp2113	 %read{3783,3783} %write{3781,3781}
temp	float	$tmp2114	 %read{3783,3783} %write{3782,3782}
temp	point	$tmp2115	 %read{3789,3789} %write{3788,3788}
temp	float	$tmp2116	 %read{3788,3788} %write{3785,3785}
temp	float	$tmp2117	 %read{3788,3788} %write{3786,3786}
temp	float	$tmp2118	 %read{3788,3788} %write{3787,3787}
temp	point	$tmp2119	 %read{3793,3793} %write{3792,3792}
temp	int	$tmp2120	 %read{3796,3796} %write{3795,3795}
temp	int	$tmp2121	 %read{3800,3800} %write{3799,3799}
temp	int	$tmp2122	 %read{3804,3804} %write{3803,3803}
temp	float	$tmp2123	 %read{3809,3809} %write{3806,3806}
temp	float	$tmp2124	 %read{3806,3806} %write{3805,3805}
temp	float	$tmp2125	 %read{3809,3809} %write{3808,3808}
temp	float	$tmp2126	 %read{3808,3808} %write{3807,3807}
temp	float	$tmp2127	 %read{3812,3812} %write{3809,3809}
temp	float	$tmp2128	 %read{3812,3812} %write{3811,3811}
temp	float	$tmp2129	 %read{3811,3811} %write{3810,3810}
temp	int	$tmp2130	 %read{3815,3815} %write{3814,3814}
temp	float	$tmp2131	 %read{3823,3823} %write{3817,3817}
temp	float	$tmp2132	 %read{3817,3817} %write{3816,3816}
temp	float	$tmp2133	 %read{3823,3823} %write{3822,3822}
temp	float	$tmp2134	 %read{3822,3822} %write{3819,3819}
temp	float	$tmp2135	 %read{3819,3819} %write{3818,3818}
temp	float	$tmp2136	 %read{3822,3822} %write{3821,3821}
temp	float	$tmp2137	 %read{3821,3821} %write{3820,3820}
temp	int	$tmp2138	 %read{3826,3826} %write{3825,3825}
temp	float	$tmp2139	 %read{3833,3833} %write{3829,3829}
temp	float	$tmp2140	 %read{3829,3829} %write{3828,3828}
temp	float	$tmp2141	 %read{3828,3828} %write{3827,3827}
temp	float	$tmp2142	 %read{3833,3833} %write{3832,3832}
temp	float	$tmp2143	 %read{3832,3832} %write{3831,3831}
temp	float	$tmp2144	 %read{3831,3831} %write{3830,3830}
temp	float	$tmp2145	 %read{3837,3837} %write{3833,3833}
temp	float	$tmp2146	 %read{3837,3837} %write{3836,3836}
temp	float	$tmp2147	 %read{3836,3836} %write{3835,3835}
temp	float	$tmp2148	 %read{3835,3835} %write{3834,3834}
temp	int	$tmp2149	 %read{3840,3840} %write{3839,3839}
temp	float	$tmp2150	 %read{3845,3845} %write{3844,3844}
temp	float	$tmp2151	 %read{3844,3844} %write{3843,3843}
temp	vector	$tmp2152	 %read{3843,3843} %write{3841,3841}
temp	vector	$tmp2153	 %read{3843,3843} %write{3842,3842}
temp	int	$tmp2154	 %read{3848,3848} %write{3847,3847}
temp	float	$tmp2155	 %read{3855,3855} %write{3851,3851}
temp	float	$tmp2156	 %read{3851,3851} %write{3850,3850}
temp	float	$tmp2157	 %read{3850,3850} %write{3849,3849}
temp	float	$tmp2158	 %read{3855,3855} %write{3854,3854}
temp	float	$tmp2159	 %read{3854,3854} %write{3853,3853}
temp	float	$tmp2160	 %read{3853,3853} %write{3852,3852}
temp	float	$tmp2161	 %read{3859,3859} %write{3855,3855}
temp	float	$tmp2162	 %read{3859,3859} %write{3858,3858}
temp	float	$tmp2163	 %read{3858,3858} %write{3857,3857}
temp	float	$tmp2164	 %read{3857,3857} %write{3856,3856}
temp	float	$tmp2165	 %read{3861,3861} %write{3859,3859}
temp	float	$tmp2166	 %read{3861,3861} %write{3860,3860}
temp	point	$tmp2167	 %read{3868,3868} %write{3867,3867}
temp	float	$tmp2168	 %read{3867,3867} %write{3864,3864}
temp	float	$tmp2169	 %read{3867,3867} %write{3865,3865}
temp	float	$tmp2170	 %read{3867,3867} %write{3866,3866}
temp	float	$tmp2171	 %read{3870,3870} %write{3869,3869}
temp	int	$tmp2172	 %read{3871,3871} %write{3870,3870}
temp	float	$tmp2173	 %read{3873,3873} %write{3872,3872}
temp	float	$tmp2174	 %read{3875,3875} %write{3874,3874}
temp	float	$tmp2175	 %read{3877,3877} %write{3876,3876}
temp	point	$tmp2176	 %read{3880,3880} %write{3879,3879}
temp	point	$tmp2177	 %read{3882,3882} %write{3881,3881}
temp	point	$tmp2178	 %read{3884,3884} %write{3883,3883}
temp	float	$tmp2179	 %read{3887,3887} %write{3886,3886}
temp	int	$tmp2180	 %read{3888,3888} %write{3887,3887}
temp	float	$tmp2181	 %read{3890,3890} %write{3889,3889}
temp	float	$tmp2182	 %read{3892,3892} %write{3891,3891}
temp	point	$tmp2183	 %read{3895,3895} %write{3894,3894}
temp	point	$tmp2184	 %read{3897,3897} %write{3896,3896}
temp	float	$tmp2185	 %read{3900,3900} %write{3899,3899}
temp	int	$tmp2186	 %read{3901,3901} %write{3900,3900}
temp	float	$tmp2187	 %read{3903,3903} %write{3902,3902}
temp	point	$tmp2188	 %read{3906,3906} %write{3905,3905}
temp	float	$tmp2189	 %read{3909,3909} %write{3908,3908}
temp	int	$tmp2190	 %read{3910,3910} %write{3909,3909}
temp	int	$tmp2191	 %read{2147483647,-1} %write{3913,3913}
temp	int	$tmp2192	 %read{2147483647,-1} %write{3915,3915}
temp	int	$tmp2193	 %read{2147483647,-1} %write{3917,3917}
temp	float	$tmp2194	 %read{3921,3921} %write{3920,3920}
temp	int	$tmp2195	 %read{3924,3924} %write{3923,3923}
temp	float	$tmp2196	 %read{4100,4100} %write{4099,4099}
temp	float	$tmp2197	 %read{3931,3931} %write{3930,3930}
temp	float	$tmp2198	 %read{3930,3930} %write{3929,3929}
temp	float	$tmp2199	 %read{3934,3934} %write{3933,3933}
temp	float	$tmp2200	 %read{3933,3933} %write{3932,3932}
temp	float	$tmp2201	 %read{3937,3937} %write{3936,3936}
temp	float	$tmp2202	 %read{3936,3936} %write{3935,3935}
temp	int	$tmp2203	 %read{3945,3945} %write{3944,3944}
temp	int	$tmp2204	 %read{3942,4098} %write{3942,4098}
temp	int	$tmp2205	 %read{3949,3949} %write{3948,3948}
temp	int	$tmp2206	 %read{3946,4096} %write{3946,4096}
temp	int	$tmp2207	 %read{3953,3953} %write{3952,3952}
temp	int	$tmp2208	 %read{3950,4094} %write{3950,4094}
temp	float	$tmp2209	 %read{3957,3957} %write{3954,3954}
temp	float	$tmp2210	 %read{3957,3957} %write{3955,3955}
temp	float	$tmp2211	 %read{3957,3957} %write{3956,3956}
temp	color	$tmp2212	 %read{3971,3971} %write{3970,3970}
temp	point	$tmp2213	 %read{3964,3964} %write{3963,3963}
temp	float	$tmp2214	 %read{3963,3963} %write{3960,3960}
temp	float	$tmp2215	 %read{3963,3963} %write{3961,3961}
temp	float	$tmp2216	 %read{3963,3963} %write{3962,3962}
temp	point	$tmp2217	 %read{3969,3969} %write{3968,3968}
temp	float	$tmp2218	 %read{3968,3968} %write{3965,3965}
temp	float	$tmp2219	 %read{3968,3968} %write{3966,3966}
temp	float	$tmp2220	 %read{3968,3968} %write{3967,3967}
temp	point	$tmp2221	 %read{3973,3973} %write{3972,3972}
temp	int	$tmp2222	 %read{3976,3976} %write{3975,3975}
temp	int	$tmp2223	 %read{3980,3980} %write{3979,3979}
temp	int	$tmp2224	 %read{3984,3984} %write{3983,3983}
temp	float	$tmp2225	 %read{3989,3989} %write{3986,3986}
temp	float	$tmp2226	 %read{3986,3986} %write{3985,3985}
temp	float	$tmp2227	 %read{3989,3989} %write{3988,3988}
temp	float	$tmp2228	 %read{3988,3988} %write{3987,3987}
temp	float	$tmp2229	 %read{3992,3992} %write{3989,3989}
temp	float	$tmp2230	 %read{3992,3992} %write{3991,3991}
temp	float	$tmp2231	 %read{3991,3991} %write{3990,3990}
temp	int	$tmp2232	 %read{3995,3995} %write{3994,3994}
temp	float	$tmp2233	 %read{4003,4003} %write{3997,3997}
temp	float	$tmp2234	 %read{3997,3997} %write{3996,3996}
temp	float	$tmp2235	 %read{4003,4003} %write{4002,4002}
temp	float	$tmp2236	 %read{4002,4002} %write{3999,3999}
temp	float	$tmp2237	 %read{3999,3999} %write{3998,3998}
temp	float	$tmp2238	 %read{4002,4002} %write{4001,4001}
temp	float	$tmp2239	 %read{4001,4001} %write{4000,4000}
temp	int	$tmp2240	 %read{4006,4006} %write{4005,4005}
temp	float	$tmp2241	 %read{4013,4013} %write{4009,4009}
temp	float	$tmp2242	 %read{4009,4009} %write{4008,4008}
temp	float	$tmp2243	 %read{4008,4008} %write{4007,4007}
temp	float	$tmp2244	 %read{4013,4013} %write{4012,4012}
temp	float	$tmp2245	 %read{4012,4012} %write{4011,4011}
temp	float	$tmp2246	 %read{4011,4011} %write{4010,4010}
temp	float	$tmp2247	 %read{4017,4017} %write{4013,4013}
temp	float	$tmp2248	 %read{4017,4017} %write{4016,4016}
temp	float	$tmp2249	 %read{4016,4016} %write{4015,4015}
temp	float	$tmp2250	 %read{4015,4015} %write{4014,4014}
temp	int	$tmp2251	 %read{4020,4020} %write{4019,4019}
temp	float	$tmp2252	 %read{4025,4025} %write{4024,4024}
temp	float	$tmp2253	 %read{4024,4024} %write{4023,4023}
temp	vector	$tmp2254	 %read{4023,4023} %write{4021,4021}
temp	vector	$tmp2255	 %read{4023,4023} %write{4022,4022}
temp	int	$tmp2256	 %read{4028,4028} %write{4027,4027}
temp	float	$tmp2257	 %read{4035,4035} %write{4031,4031}
temp	float	$tmp2258	 %read{4031,4031} %write{4030,4030}
temp	float	$tmp2259	 %read{4030,4030} %write{4029,4029}
temp	float	$tmp2260	 %read{4035,4035} %write{4034,4034}
temp	float	$tmp2261	 %read{4034,4034} %write{4033,4033}
temp	float	$tmp2262	 %read{4033,4033} %write{4032,4032}
temp	float	$tmp2263	 %read{4039,4039} %write{4035,4035}
temp	float	$tmp2264	 %read{4039,4039} %write{4038,4038}
temp	float	$tmp2265	 %read{4038,4038} %write{4037,4037}
temp	float	$tmp2266	 %read{4037,4037} %write{4036,4036}
temp	float	$tmp2267	 %read{4041,4041} %write{4039,4039}
temp	float	$tmp2268	 %read{4041,4041} %write{4040,4040}
temp	point	$tmp2269	 %read{4048,4048} %write{4047,4047}
temp	float	$tmp2270	 %read{4047,4047} %write{4044,4044}
temp	float	$tmp2271	 %read{4047,4047} %write{4045,4045}
temp	float	$tmp2272	 %read{4047,4047} %write{4046,4046}
temp	float	$tmp2273	 %read{4050,4050} %write{4049,4049}
temp	int	$tmp2274	 %read{4051,4051} %write{4050,4050}
temp	float	$tmp2275	 %read{4053,4053} %write{4052,4052}
temp	float	$tmp2276	 %read{4055,4055} %write{4054,4054}
temp	float	$tmp2277	 %read{4057,4057} %write{4056,4056}
temp	point	$tmp2278	 %read{4060,4060} %write{4059,4059}
temp	point	$tmp2279	 %read{4062,4062} %write{4061,4061}
temp	point	$tmp2280	 %read{4064,4064} %write{4063,4063}
temp	float	$tmp2281	 %read{4067,4067} %write{4066,4066}
temp	int	$tmp2282	 %read{4068,4068} %write{4067,4067}
temp	float	$tmp2283	 %read{4070,4070} %write{4069,4069}
temp	float	$tmp2284	 %read{4072,4072} %write{4071,4071}
temp	point	$tmp2285	 %read{4075,4075} %write{4074,4074}
temp	point	$tmp2286	 %read{4077,4077} %write{4076,4076}
temp	float	$tmp2287	 %read{4080,4080} %write{4079,4079}
temp	int	$tmp2288	 %read{4081,4081} %write{4080,4080}
temp	float	$tmp2289	 %read{4083,4083} %write{4082,4082}
temp	point	$tmp2290	 %read{4086,4086} %write{4085,4085}
temp	float	$tmp2291	 %read{4089,4089} %write{4088,4088}
temp	int	$tmp2292	 %read{4090,4090} %write{4089,4089}
temp	int	$tmp2293	 %read{2147483647,-1} %write{4093,4093}
temp	int	$tmp2294	 %read{2147483647,-1} %write{4095,4095}
temp	int	$tmp2295	 %read{2147483647,-1} %write{4097,4097}
temp	float	$tmp2296	 %read{4101,4101} %write{4100,4100}
temp	int	$tmp2297	 %read{4104,4104} %write{4103,4103}
temp	float	$tmp2298	 %read{4282,4282} %write{4281,4281}
temp	float	$tmp2299	 %read{4111,4111} %write{4110,4110}
temp	float	$tmp2300	 %read{4110,4110} %write{4109,4109}
temp	float	$tmp2301	 %read{4114,4114} %write{4113,4113}
temp	float	$tmp2302	 %read{4113,4113} %write{4112,4112}
temp	float	$tmp2303	 %read{4117,4117} %write{4116,4116}
temp	float	$tmp2304	 %read{4116,4116} %write{4115,4115}
temp	int	$tmp2305	 %read{4125,4125} %write{4124,4124}
temp	int	$tmp2306	 %read{4122,4278} %write{4122,4278}
temp	int	$tmp2307	 %read{4129,4129} %write{4128,4128}
temp	int	$tmp2308	 %read{4126,4276} %write{4126,4276}
temp	int	$tmp2309	 %read{4133,4133} %write{4132,4132}
temp	int	$tmp2310	 %read{4130,4274} %write{4130,4274}
temp	float	$tmp2311	 %read{4137,4137} %write{4134,4134}
temp	float	$tmp2312	 %read{4137,4137} %write{4135,4135}
temp	float	$tmp2313	 %read{4137,4137} %write{4136,4136}
temp	color	$tmp2314	 %read{4151,4151} %write{4150,4150}
temp	point	$tmp2315	 %read{4144,4144} %write{4143,4143}
temp	float	$tmp2316	 %read{4143,4143} %write{4140,4140}
temp	float	$tmp2317	 %read{4143,4143} %write{4141,4141}
temp	float	$tmp2318	 %read{4143,4143} %write{4142,4142}
temp	point	$tmp2319	 %read{4149,4149} %write{4148,4148}
temp	float	$tmp2320	 %read{4148,4148} %write{4145,4145}
temp	float	$tmp2321	 %read{4148,4148} %write{4146,4146}
temp	float	$tmp2322	 %read{4148,4148} %write{4147,4147}
temp	point	$tmp2323	 %read{4153,4153} %write{4152,4152}
temp	int	$tmp2324	 %read{4156,4156} %write{4155,4155}
temp	int	$tmp2325	 %read{4160,4160} %write{4159,4159}
temp	int	$tmp2326	 %read{4164,4164} %write{4163,4163}
temp	float	$tmp2327	 %read{4169,4169} %write{4166,4166}
temp	float	$tmp2328	 %read{4166,4166} %write{4165,4165}
temp	float	$tmp2329	 %read{4169,4169} %write{4168,4168}
temp	float	$tmp2330	 %read{4168,4168} %write{4167,4167}
temp	float	$tmp2331	 %read{4172,4172} %write{4169,4169}
temp	float	$tmp2332	 %read{4172,4172} %write{4171,4171}
temp	float	$tmp2333	 %read{4171,4171} %write{4170,4170}
temp	int	$tmp2334	 %read{4175,4175} %write{4174,4174}
temp	float	$tmp2335	 %read{4183,4183} %write{4177,4177}
temp	float	$tmp2336	 %read{4177,4177} %write{4176,4176}
temp	float	$tmp2337	 %read{4183,4183} %write{4182,4182}
temp	float	$tmp2338	 %read{4182,4182} %write{4179,4179}
temp	float	$tmp2339	 %read{4179,4179} %write{4178,4178}
temp	float	$tmp2340	 %read{4182,4182} %write{4181,4181}
temp	float	$tmp2341	 %read{4181,4181} %write{4180,4180}
temp	int	$tmp2342	 %read{4186,4186} %write{4185,4185}
temp	float	$tmp2343	 %read{4193,4193} %write{4189,4189}
temp	float	$tmp2344	 %read{4189,4189} %write{4188,4188}
temp	float	$tmp2345	 %read{4188,4188} %write{4187,4187}
temp	float	$tmp2346	 %read{4193,4193} %write{4192,4192}
temp	float	$tmp2347	 %read{4192,4192} %write{4191,4191}
temp	float	$tmp2348	 %read{4191,4191} %write{4190,4190}
temp	float	$tmp2349	 %read{4197,4197} %write{4193,4193}
temp	float	$tmp2350	 %read{4197,4197} %write{4196,4196}
temp	float	$tmp2351	 %read{4196,4196} %write{4195,4195}
temp	float	$tmp2352	 %read{4195,4195} %write{4194,4194}
temp	int	$tmp2353	 %read{4200,4200} %write{4199,4199}
temp	float	$tmp2354	 %read{4205,4205} %write{4204,4204}
temp	float	$tmp2355	 %read{4204,4204} %write{4203,4203}
temp	vector	$tmp2356	 %read{4203,4203} %write{4201,4201}
temp	vector	$tmp2357	 %read{4203,4203} %write{4202,4202}
temp	int	$tmp2358	 %read{4208,4208} %write{4207,4207}
temp	float	$tmp2359	 %read{4215,4215} %write{4211,4211}
temp	float	$tmp2360	 %read{4211,4211} %write{4210,4210}
temp	float	$tmp2361	 %read{4210,4210} %write{4209,4209}
temp	float	$tmp2362	 %read{4215,4215} %write{4214,4214}
temp	float	$tmp2363	 %read{4214,4214} %write{4213,4213}
temp	float	$tmp2364	 %read{4213,4213} %write{4212,4212}
temp	float	$tmp2365	 %read{4219,4219} %write{4215,4215}
temp	float	$tmp2366	 %read{4219,4219} %write{4218,4218}
temp	float	$tmp2367	 %read{4218,4218} %write{4217,4217}
temp	float	$tmp2368	 %read{4217,4217} %write{4216,4216}
temp	float	$tmp2369	 %read{4221,4221} %write{4219,4219}
temp	float	$tmp2370	 %read{4221,4221} %write{4220,4220}
temp	point	$tmp2371	 %read{4228,4228} %write{4227,4227}
temp	float	$tmp2372	 %read{4227,4227} %write{4224,4224}
temp	float	$tmp2373	 %read{4227,4227} %write{4225,4225}
temp	float	$tmp2374	 %read{4227,4227} %write{4226,4226}
temp	float	$tmp2375	 %read{4230,4230} %write{4229,4229}
temp	int	$tmp2376	 %read{4231,4231} %write{4230,4230}
temp	float	$tmp2377	 %read{4233,4233} %write{4232,4232}
temp	float	$tmp2378	 %read{4235,4235} %write{4234,4234}
temp	float	$tmp2379	 %read{4237,4237} %write{4236,4236}
temp	point	$tmp2380	 %read{4240,4240} %write{4239,4239}
temp	point	$tmp2381	 %read{4242,4242} %write{4241,4241}
temp	point	$tmp2382	 %read{4244,4244} %write{4243,4243}
temp	float	$tmp2383	 %read{4247,4247} %write{4246,4246}
temp	int	$tmp2384	 %read{4248,4248} %write{4247,4247}
temp	float	$tmp2385	 %read{4250,4250} %write{4249,4249}
temp	float	$tmp2386	 %read{4252,4252} %write{4251,4251}
temp	point	$tmp2387	 %read{4255,4255} %write{4254,4254}
temp	point	$tmp2388	 %read{4257,4257} %write{4256,4256}
temp	float	$tmp2389	 %read{4260,4260} %write{4259,4259}
temp	int	$tmp2390	 %read{4261,4261} %write{4260,4260}
temp	float	$tmp2391	 %read{4263,4263} %write{4262,4262}
temp	point	$tmp2392	 %read{4266,4266} %write{4265,4265}
temp	float	$tmp2393	 %read{4269,4269} %write{4268,4268}
temp	int	$tmp2394	 %read{4270,4270} %write{4269,4269}
temp	int	$tmp2395	 %read{2147483647,-1} %write{4273,4273}
temp	int	$tmp2396	 %read{2147483647,-1} %write{4275,4275}
temp	int	$tmp2397	 %read{2147483647,-1} %write{4277,4277}
temp	float	$tmp2398	 %read{4281,4281} %write{4279,4279}
temp	float	$tmp2399	 %read{4281,4281} %write{4280,4280}
temp	float	$tmp2400	 %read{4283,4283} %write{4282,4282}
temp	int	$tmp2401	 %read{4286,4286} %write{4285,4285}
temp	float	$tmp2402	 %read{4471,4471} %write{4468,4469}
temp	float	$tmp2403	 %read{4465,4465} %write{4464,4464}
temp	float	$tmp2404	 %read{4294,4294} %write{4293,4293}
temp	float	$tmp2405	 %read{4293,4293} %write{4292,4292}
temp	float	$tmp2406	 %read{4297,4297} %write{4296,4296}
temp	float	$tmp2407	 %read{4296,4296} %write{4295,4295}
temp	float	$tmp2408	 %read{4300,4300} %write{4299,4299}
temp	float	$tmp2409	 %read{4299,4299} %write{4298,4298}
temp	int	$tmp2410	 %read{4308,4308} %write{4307,4307}
temp	int	$tmp2411	 %read{4305,4461} %write{4305,4461}
temp	int	$tmp2412	 %read{4312,4312} %write{4311,4311}
temp	int	$tmp2413	 %read{4309,4459} %write{4309,4459}
temp	int	$tmp2414	 %read{4316,4316} %write{4315,4315}
temp	int	$tmp2415	 %read{4313,4457} %write{4313,4457}
temp	float	$tmp2416	 %read{4320,4320} %write{4317,4317}
temp	float	$tmp2417	 %read{4320,4320} %write{4318,4318}
temp	float	$tmp2418	 %read{4320,4320} %write{4319,4319}
temp	color	$tmp2419	 %read{4334,4334} %write{4333,4333}
temp	point	$tmp2420	 %read{4327,4327} %write{4326,4326}
temp	float	$tmp2421	 %read{4326,4326} %write{4323,4323}
temp	float	$tmp2422	 %read{4326,4326} %write{4324,4324}
temp	float	$tmp2423	 %read{4326,4326} %write{4325,4325}
temp	point	$tmp2424	 %read{4332,4332} %write{4331,4331}
temp	float	$tmp2425	 %read{4331,4331} %write{4328,4328}
temp	float	$tmp2426	 %read{4331,4331} %write{4329,4329}
temp	float	$tmp2427	 %read{4331,4331} %write{4330,4330}
temp	point	$tmp2428	 %read{4336,4336} %write{4335,4335}
temp	int	$tmp2429	 %read{4339,4339} %write{4338,4338}
temp	int	$tmp2430	 %read{4343,4343} %write{4342,4342}
temp	int	$tmp2431	 %read{4347,4347} %write{4346,4346}
temp	float	$tmp2432	 %read{4352,4352} %write{4349,4349}
temp	float	$tmp2433	 %read{4349,4349} %write{4348,4348}
temp	float	$tmp2434	 %read{4352,4352} %write{4351,4351}
temp	float	$tmp2435	 %read{4351,4351} %write{4350,4350}
temp	float	$tmp2436	 %read{4355,4355} %write{4352,4352}
temp	float	$tmp2437	 %read{4355,4355} %write{4354,4354}
temp	float	$tmp2438	 %read{4354,4354} %write{4353,4353}
temp	int	$tmp2439	 %read{4358,4358} %write{4357,4357}
temp	float	$tmp2440	 %read{4366,4366} %write{4360,4360}
temp	float	$tmp2441	 %read{4360,4360} %write{4359,4359}
temp	float	$tmp2442	 %read{4366,4366} %write{4365,4365}
temp	float	$tmp2443	 %read{4365,4365} %write{4362,4362}
temp	float	$tmp2444	 %read{4362,4362} %write{4361,4361}
temp	float	$tmp2445	 %read{4365,4365} %write{4364,4364}
temp	float	$tmp2446	 %read{4364,4364} %write{4363,4363}
temp	int	$tmp2447	 %read{4369,4369} %write{4368,4368}
temp	float	$tmp2448	 %read{4376,4376} %write{4372,4372}
temp	float	$tmp2449	 %read{4372,4372} %write{4371,4371}
temp	float	$tmp2450	 %read{4371,4371} %write{4370,4370}
temp	float	$tmp2451	 %read{4376,4376} %write{4375,4375}
temp	float	$tmp2452	 %read{4375,4375} %write{4374,4374}
temp	float	$tmp2453	 %read{4374,4374} %write{4373,4373}
temp	float	$tmp2454	 %read{4380,4380} %write{4376,4376}
temp	float	$tmp2455	 %read{4380,4380} %write{4379,4379}
temp	float	$tmp2456	 %read{4379,4379} %write{4378,4378}
temp	float	$tmp2457	 %read{4378,4378} %write{4377,4377}
temp	int	$tmp2458	 %read{4383,4383} %write{4382,4382}
temp	float	$tmp2459	 %read{4388,4388} %write{4387,4387}
temp	float	$tmp2460	 %read{4387,4387} %write{4386,4386}
temp	vector	$tmp2461	 %read{4386,4386} %write{4384,4384}
temp	vector	$tmp2462	 %read{4386,4386} %write{4385,4385}
temp	int	$tmp2463	 %read{4391,4391} %write{4390,4390}
temp	float	$tmp2464	 %read{4398,4398} %write{4394,4394}
temp	float	$tmp2465	 %read{4394,4394} %write{4393,4393}
temp	float	$tmp2466	 %read{4393,4393} %write{4392,4392}
temp	float	$tmp2467	 %read{4398,4398} %write{4397,4397}
temp	float	$tmp2468	 %read{4397,4397} %write{4396,4396}
temp	float	$tmp2469	 %read{4396,4396} %write{4395,4395}
temp	float	$tmp2470	 %read{4402,4402} %write{4398,4398}
temp	float	$tmp2471	 %read{4402,4402} %write{4401,4401}
temp	float	$tmp2472	 %read{4401,4401} %write{4400,4400}
temp	float	$tmp2473	 %read{4400,4400} %write{4399,4399}
temp	float	$tmp2474	 %read{4404,4404} %write{4402,4402}
temp	float	$tmp2475	 %read{4404,4404} %write{4403,4403}
temp	point	$tmp2476	 %read{4411,4411} %write{4410,4410}
temp	float	$tmp2477	 %read{4410,4410} %write{4407,4407}
temp	float	$tmp2478	 %read{4410,4410} %write{4408,4408}
temp	float	$tmp2479	 %read{4410,4410} %write{4409,4409}
temp	float	$tmp2480	 %read{4413,4413} %write{4412,4412}
temp	int	$tmp2481	 %read{4414,4414} %write{4413,4413}
temp	float	$tmp2482	 %read{4416,4416} %write{4415,4415}
temp	float	$tmp2483	 %read{4418,4418} %write{4417,4417}
temp	float	$tmp2484	 %read{4420,4420} %write{4419,4419}
temp	point	$tmp2485	 %read{4423,4423} %write{4422,4422}
temp	point	$tmp2486	 %read{4425,4425} %write{4424,4424}
temp	point	$tmp2487	 %read{4427,4427} %write{4426,4426}
temp	float	$tmp2488	 %read{4430,4430} %write{4429,4429}
temp	int	$tmp2489	 %read{4431,4431} %write{4430,4430}
temp	float	$tmp2490	 %read{4433,4433} %write{4432,4432}
temp	float	$tmp2491	 %read{4435,4435} %write{4434,4434}
temp	point	$tmp2492	 %read{4438,4438} %write{4437,4437}
temp	point	$tmp2493	 %read{4440,4440} %write{4439,4439}
temp	float	$tmp2494	 %read{4443,4443} %write{4442,4442}
temp	int	$tmp2495	 %read{4444,4444} %write{4443,4443}
temp	float	$tmp2496	 %read{4446,4446} %write{4445,4445}
temp	point	$tmp2497	 %read{4449,4449} %write{4448,4448}
temp	float	$tmp2498	 %read{4452,4452} %write{4451,4451}
temp	int	$tmp2499	 %read{4453,4453} %write{4452,4452}
temp	int	$tmp2500	 %read{2147483647,-1} %write{4456,4456}
temp	int	$tmp2501	 %read{2147483647,-1} %write{4458,4458}
temp	int	$tmp2502	 %read{2147483647,-1} %write{4460,4460}
temp	float	$tmp2503	 %read{4464,4464} %write{4462,4462}
temp	float	$tmp2504	 %read{4464,4464} %write{4463,4463}
temp	int	$tmp2505	 %read{4467,4467} %write{4466,4466}
temp	float	$tmp2506	 %read{4472,4472} %write{4471,4471}
temp	int	$tmp2507	 %read{4475,4475} %write{4474,4474}
temp	float	$tmp2508	 %read{4481,4481} %write{4480,4480}
temp	float	$tmp2509	 %read{4482,4482} %write{4481,4481}
temp	float	$tmp2510	 %read{4484,4484} %write{4483,4483}
temp	int	$tmp2511	 %read{2147483647,-1} %write{4487,4487}
temp	float	$tmp2512	 %read{4490,4490} %write{4489,4489}
temp	int	$tmp2513	 %read{4492,4492} %write{4491,4491}
temp	point	$tmp2514	 %read{4501,5603} %write{4493,5588}
temp	int	$tmp2515	 %read{4496,4496} %write{4495,4495}
temp	int	$tmp2516	 %read{4500,4500} %write{4499,4499}
temp	int	$tmp2517	 %read{4504,4504} %write{4503,4503}
temp	int	$tmp2518	 %read{4505,4505} %write{4504,4504}
temp	int	$tmp2519	 %read{4511,4511} %write{4510,4510}
temp	float	$tmp2520	 %read{4687,4687} %write{4686,4686}
temp	float	$tmp2521	 %read{4518,4518} %write{4517,4517}
temp	float	$tmp2522	 %read{4517,4517} %write{4516,4516}
temp	float	$tmp2523	 %read{4521,4521} %write{4520,4520}
temp	float	$tmp2524	 %read{4520,4520} %write{4519,4519}
temp	float	$tmp2525	 %read{4524,4524} %write{4523,4523}
temp	float	$tmp2526	 %read{4523,4523} %write{4522,4522}
temp	int	$tmp2527	 %read{4532,4532} %write{4531,4531}
temp	int	$tmp2528	 %read{4529,4685} %write{4529,4685}
temp	int	$tmp2529	 %read{4536,4536} %write{4535,4535}
temp	int	$tmp2530	 %read{4533,4683} %write{4533,4683}
temp	int	$tmp2531	 %read{4540,4540} %write{4539,4539}
temp	int	$tmp2532	 %read{4537,4681} %write{4537,4681}
temp	float	$tmp2533	 %read{4544,4544} %write{4541,4541}
temp	float	$tmp2534	 %read{4544,4544} %write{4542,4542}
temp	float	$tmp2535	 %read{4544,4544} %write{4543,4543}
temp	color	$tmp2536	 %read{4558,4558} %write{4557,4557}
temp	point	$tmp2537	 %read{4551,4551} %write{4550,4550}
temp	float	$tmp2538	 %read{4550,4550} %write{4547,4547}
temp	float	$tmp2539	 %read{4550,4550} %write{4548,4548}
temp	float	$tmp2540	 %read{4550,4550} %write{4549,4549}
temp	point	$tmp2541	 %read{4556,4556} %write{4555,4555}
temp	float	$tmp2542	 %read{4555,4555} %write{4552,4552}
temp	float	$tmp2543	 %read{4555,4555} %write{4553,4553}
temp	float	$tmp2544	 %read{4555,4555} %write{4554,4554}
temp	point	$tmp2545	 %read{4560,4560} %write{4559,4559}
temp	int	$tmp2546	 %read{4563,4563} %write{4562,4562}
temp	int	$tmp2547	 %read{4567,4567} %write{4566,4566}
temp	int	$tmp2548	 %read{4571,4571} %write{4570,4570}
temp	float	$tmp2549	 %read{4576,4576} %write{4573,4573}
temp	float	$tmp2550	 %read{4573,4573} %write{4572,4572}
temp	float	$tmp2551	 %read{4576,4576} %write{4575,4575}
temp	float	$tmp2552	 %read{4575,4575} %write{4574,4574}
temp	float	$tmp2553	 %read{4579,4579} %write{4576,4576}
temp	float	$tmp2554	 %read{4579,4579} %write{4578,4578}
temp	float	$tmp2555	 %read{4578,4578} %write{4577,4577}
temp	int	$tmp2556	 %read{4582,4582} %write{4581,4581}
temp	float	$tmp2557	 %read{4590,4590} %write{4584,4584}
temp	float	$tmp2558	 %read{4584,4584} %write{4583,4583}
temp	float	$tmp2559	 %read{4590,4590} %write{4589,4589}
temp	float	$tmp2560	 %read{4589,4589} %write{4586,4586}
temp	float	$tmp2561	 %read{4586,4586} %write{4585,4585}
temp	float	$tmp2562	 %read{4589,4589} %write{4588,4588}
temp	float	$tmp2563	 %read{4588,4588} %write{4587,4587}
temp	int	$tmp2564	 %read{4593,4593} %write{4592,4592}
temp	float	$tmp2565	 %read{4600,4600} %write{4596,4596}
temp	float	$tmp2566	 %read{4596,4596} %write{4595,4595}
temp	float	$tmp2567	 %read{4595,4595} %write{4594,4594}
temp	float	$tmp2568	 %read{4600,4600} %write{4599,4599}
temp	float	$tmp2569	 %read{4599,4599} %write{4598,4598}
temp	float	$tmp2570	 %read{4598,4598} %write{4597,4597}
temp	float	$tmp2571	 %read{4604,4604} %write{4600,4600}
temp	float	$tmp2572	 %read{4604,4604} %write{4603,4603}
temp	float	$tmp2573	 %read{4603,4603} %write{4602,4602}
temp	float	$tmp2574	 %read{4602,4602} %write{4601,4601}
temp	int	$tmp2575	 %read{4607,4607} %write{4606,4606}
temp	float	$tmp2576	 %read{4612,4612} %write{4611,4611}
temp	float	$tmp2577	 %read{4611,4611} %write{4610,4610}
temp	vector	$tmp2578	 %read{4610,4610} %write{4608,4608}
temp	vector	$tmp2579	 %read{4610,4610} %write{4609,4609}
temp	int	$tmp2580	 %read{4615,4615} %write{4614,4614}
temp	float	$tmp2581	 %read{4622,4622} %write{4618,4618}
temp	float	$tmp2582	 %read{4618,4618} %write{4617,4617}
temp	float	$tmp2583	 %read{4617,4617} %write{4616,4616}
temp	float	$tmp2584	 %read{4622,4622} %write{4621,4621}
temp	float	$tmp2585	 %read{4621,4621} %write{4620,4620}
temp	float	$tmp2586	 %read{4620,4620} %write{4619,4619}
temp	float	$tmp2587	 %read{4626,4626} %write{4622,4622}
temp	float	$tmp2588	 %read{4626,4626} %write{4625,4625}
temp	float	$tmp2589	 %read{4625,4625} %write{4624,4624}
temp	float	$tmp2590	 %read{4624,4624} %write{4623,4623}
temp	float	$tmp2591	 %read{4628,4628} %write{4626,4626}
temp	float	$tmp2592	 %read{4628,4628} %write{4627,4627}
temp	point	$tmp2593	 %read{4635,4635} %write{4634,4634}
temp	float	$tmp2594	 %read{4634,4634} %write{4631,4631}
temp	float	$tmp2595	 %read{4634,4634} %write{4632,4632}
temp	float	$tmp2596	 %read{4634,4634} %write{4633,4633}
temp	float	$tmp2597	 %read{4637,4637} %write{4636,4636}
temp	int	$tmp2598	 %read{4638,4638} %write{4637,4637}
temp	float	$tmp2599	 %read{4640,4640} %write{4639,4639}
temp	float	$tmp2600	 %read{4642,4642} %write{4641,4641}
temp	float	$tmp2601	 %read{4644,4644} %write{4643,4643}
temp	point	$tmp2602	 %read{4647,4647} %write{4646,4646}
temp	point	$tmp2603	 %read{4649,4649} %write{4648,4648}
temp	point	$tmp2604	 %read{4651,4651} %write{4650,4650}
temp	float	$tmp2605	 %read{4654,4654} %write{4653,4653}
temp	int	$tmp2606	 %read{4655,4655} %write{4654,4654}
temp	float	$tmp2607	 %read{4657,4657} %write{4656,4656}
temp	float	$tmp2608	 %read{4659,4659} %write{4658,4658}
temp	point	$tmp2609	 %read{4662,4662} %write{4661,4661}
temp	point	$tmp2610	 %read{4664,4664} %write{4663,4663}
temp	float	$tmp2611	 %read{4667,4667} %write{4666,4666}
temp	int	$tmp2612	 %read{4668,4668} %write{4667,4667}
temp	float	$tmp2613	 %read{4670,4670} %write{4669,4669}
temp	point	$tmp2614	 %read{4673,4673} %write{4672,4672}
temp	float	$tmp2615	 %read{4676,4676} %write{4675,4675}
temp	int	$tmp2616	 %read{4677,4677} %write{4676,4676}
temp	int	$tmp2617	 %read{2147483647,-1} %write{4680,4680}
temp	int	$tmp2618	 %read{2147483647,-1} %write{4682,4682}
temp	int	$tmp2619	 %read{2147483647,-1} %write{4684,4684}
temp	float	$tmp2620	 %read{4688,4688} %write{4687,4687}
temp	int	$tmp2621	 %read{4691,4691} %write{4690,4690}
temp	float	$tmp2622	 %read{4867,4867} %write{4866,4866}
temp	float	$tmp2623	 %read{4698,4698} %write{4697,4697}
temp	float	$tmp2624	 %read{4697,4697} %write{4696,4696}
temp	float	$tmp2625	 %read{4701,4701} %write{4700,4700}
temp	float	$tmp2626	 %read{4700,4700} %write{4699,4699}
temp	float	$tmp2627	 %read{4704,4704} %write{4703,4703}
temp	float	$tmp2628	 %read{4703,4703} %write{4702,4702}
temp	int	$tmp2629	 %read{4712,4712} %write{4711,4711}
temp	int	$tmp2630	 %read{4709,4865} %write{4709,4865}
temp	int	$tmp2631	 %read{4716,4716} %write{4715,4715}
temp	int	$tmp2632	 %read{4713,4863} %write{4713,4863}
temp	int	$tmp2633	 %read{4720,4720} %write{4719,4719}
temp	int	$tmp2634	 %read{4717,4861} %write{4717,4861}
temp	float	$tmp2635	 %read{4724,4724} %write{4721,4721}
temp	float	$tmp2636	 %read{4724,4724} %write{4722,4722}
temp	float	$tmp2637	 %read{4724,4724} %write{4723,4723}
temp	color	$tmp2638	 %read{4738,4738} %write{4737,4737}
temp	point	$tmp2639	 %read{4731,4731} %write{4730,4730}
temp	float	$tmp2640	 %read{4730,4730} %write{4727,4727}
temp	float	$tmp2641	 %read{4730,4730} %write{4728,4728}
temp	float	$tmp2642	 %read{4730,4730} %write{4729,4729}
temp	point	$tmp2643	 %read{4736,4736} %write{4735,4735}
temp	float	$tmp2644	 %read{4735,4735} %write{4732,4732}
temp	float	$tmp2645	 %read{4735,4735} %write{4733,4733}
temp	float	$tmp2646	 %read{4735,4735} %write{4734,4734}
temp	point	$tmp2647	 %read{4740,4740} %write{4739,4739}
temp	int	$tmp2648	 %read{4743,4743} %write{4742,4742}
temp	int	$tmp2649	 %read{4747,4747} %write{4746,4746}
temp	int	$tmp2650	 %read{4751,4751} %write{4750,4750}
temp	float	$tmp2651	 %read{4756,4756} %write{4753,4753}
temp	float	$tmp2652	 %read{4753,4753} %write{4752,4752}
temp	float	$tmp2653	 %read{4756,4756} %write{4755,4755}
temp	float	$tmp2654	 %read{4755,4755} %write{4754,4754}
temp	float	$tmp2655	 %read{4759,4759} %write{4756,4756}
temp	float	$tmp2656	 %read{4759,4759} %write{4758,4758}
temp	float	$tmp2657	 %read{4758,4758} %write{4757,4757}
temp	int	$tmp2658	 %read{4762,4762} %write{4761,4761}
temp	float	$tmp2659	 %read{4770,4770} %write{4764,4764}
temp	float	$tmp2660	 %read{4764,4764} %write{4763,4763}
temp	float	$tmp2661	 %read{4770,4770} %write{4769,4769}
temp	float	$tmp2662	 %read{4769,4769} %write{4766,4766}
temp	float	$tmp2663	 %read{4766,4766} %write{4765,4765}
temp	float	$tmp2664	 %read{4769,4769} %write{4768,4768}
temp	float	$tmp2665	 %read{4768,4768} %write{4767,4767}
temp	int	$tmp2666	 %read{4773,4773} %write{4772,4772}
temp	float	$tmp2667	 %read{4780,4780} %write{4776,4776}
temp	float	$tmp2668	 %read{4776,4776} %write{4775,4775}
temp	float	$tmp2669	 %read{4775,4775} %write{4774,4774}
temp	float	$tmp2670	 %read{4780,4780} %write{4779,4779}
temp	float	$tmp2671	 %read{4779,4779} %write{4778,4778}
temp	float	$tmp2672	 %read{4778,4778} %write{4777,4777}
temp	float	$tmp2673	 %read{4784,4784} %write{4780,4780}
temp	float	$tmp2674	 %read{4784,4784} %write{4783,4783}
temp	float	$tmp2675	 %read{4783,4783} %write{4782,4782}
temp	float	$tmp2676	 %read{4782,4782} %write{4781,4781}
temp	int	$tmp2677	 %read{4787,4787} %write{4786,4786}
temp	float	$tmp2678	 %read{4792,4792} %write{4791,4791}
temp	float	$tmp2679	 %read{4791,4791} %write{4790,4790}
temp	vector	$tmp2680	 %read{4790,4790} %write{4788,4788}
temp	vector	$tmp2681	 %read{4790,4790} %write{4789,4789}
temp	int	$tmp2682	 %read{4795,4795} %write{4794,4794}
temp	float	$tmp2683	 %read{4802,4802} %write{4798,4798}
temp	float	$tmp2684	 %read{4798,4798} %write{4797,4797}
temp	float	$tmp2685	 %read{4797,4797} %write{4796,4796}
temp	float	$tmp2686	 %read{4802,4802} %write{4801,4801}
temp	float	$tmp2687	 %read{4801,4801} %write{4800,4800}
temp	float	$tmp2688	 %read{4800,4800} %write{4799,4799}
temp	float	$tmp2689	 %read{4806,4806} %write{4802,4802}
temp	float	$tmp2690	 %read{4806,4806} %write{4805,4805}
temp	float	$tmp2691	 %read{4805,4805} %write{4804,4804}
temp	float	$tmp2692	 %read{4804,4804} %write{4803,4803}
temp	float	$tmp2693	 %read{4808,4808} %write{4806,4806}
temp	float	$tmp2694	 %read{4808,4808} %write{4807,4807}
temp	point	$tmp2695	 %read{4815,4815} %write{4814,4814}
temp	float	$tmp2696	 %read{4814,4814} %write{4811,4811}
temp	float	$tmp2697	 %read{4814,4814} %write{4812,4812}
temp	float	$tmp2698	 %read{4814,4814} %write{4813,4813}
temp	float	$tmp2699	 %read{4817,4817} %write{4816,4816}
temp	int	$tmp2700	 %read{4818,4818} %write{4817,4817}
temp	float	$tmp2701	 %read{4820,4820} %write{4819,4819}
temp	float	$tmp2702	 %read{4822,4822} %write{4821,4821}
temp	float	$tmp2703	 %read{4824,4824} %write{4823,4823}
temp	point	$tmp2704	 %read{4827,4827} %write{4826,4826}
temp	point	$tmp2705	 %read{4829,4829} %write{4828,4828}
temp	point	$tmp2706	 %read{4831,4831} %write{4830,4830}
temp	float	$tmp2707	 %read{4834,4834} %write{4833,4833}
temp	int	$tmp2708	 %read{4835,4835} %write{4834,4834}
temp	float	$tmp2709	 %read{4837,4837} %write{4836,4836}
temp	float	$tmp2710	 %read{4839,4839} %write{4838,4838}
temp	point	$tmp2711	 %read{4842,4842} %write{4841,4841}
temp	point	$tmp2712	 %read{4844,4844} %write{4843,4843}
temp	float	$tmp2713	 %read{4847,4847} %write{4846,4846}
temp	int	$tmp2714	 %read{4848,4848} %write{4847,4847}
temp	float	$tmp2715	 %read{4850,4850} %write{4849,4849}
temp	point	$tmp2716	 %read{4853,4853} %write{4852,4852}
temp	float	$tmp2717	 %read{4856,4856} %write{4855,4855}
temp	int	$tmp2718	 %read{4857,4857} %write{4856,4856}
temp	int	$tmp2719	 %read{2147483647,-1} %write{4860,4860}
temp	int	$tmp2720	 %read{2147483647,-1} %write{4862,4862}
temp	int	$tmp2721	 %read{2147483647,-1} %write{4864,4864}
temp	float	$tmp2722	 %read{4868,4868} %write{4867,4867}
temp	int	$tmp2723	 %read{4871,4871} %write{4870,4870}
temp	float	$tmp2724	 %read{5047,5047} %write{5046,5046}
temp	float	$tmp2725	 %read{4878,4878} %write{4877,4877}
temp	float	$tmp2726	 %read{4877,4877} %write{4876,4876}
temp	float	$tmp2727	 %read{4881,4881} %write{4880,4880}
temp	float	$tmp2728	 %read{4880,4880} %write{4879,4879}
temp	float	$tmp2729	 %read{4884,4884} %write{4883,4883}
temp	float	$tmp2730	 %read{4883,4883} %write{4882,4882}
temp	int	$tmp2731	 %read{4892,4892} %write{4891,4891}
temp	int	$tmp2732	 %read{4889,5045} %write{4889,5045}
temp	int	$tmp2733	 %read{4896,4896} %write{4895,4895}
temp	int	$tmp2734	 %read{4893,5043} %write{4893,5043}
temp	int	$tmp2735	 %read{4900,4900} %write{4899,4899}
temp	int	$tmp2736	 %read{4897,5041} %write{4897,5041}
temp	float	$tmp2737	 %read{4904,4904} %write{4901,4901}
temp	float	$tmp2738	 %read{4904,4904} %write{4902,4902}
temp	float	$tmp2739	 %read{4904,4904} %write{4903,4903}
temp	color	$tmp2740	 %read{4918,4918} %write{4917,4917}
temp	point	$tmp2741	 %read{4911,4911} %write{4910,4910}
temp	float	$tmp2742	 %read{4910,4910} %write{4907,4907}
temp	float	$tmp2743	 %read{4910,4910} %write{4908,4908}
temp	float	$tmp2744	 %read{4910,4910} %write{4909,4909}
temp	point	$tmp2745	 %read{4916,4916} %write{4915,4915}
temp	float	$tmp2746	 %read{4915,4915} %write{4912,4912}
temp	float	$tmp2747	 %read{4915,4915} %write{4913,4913}
temp	float	$tmp2748	 %read{4915,4915} %write{4914,4914}
temp	point	$tmp2749	 %read{4920,4920} %write{4919,4919}
temp	int	$tmp2750	 %read{4923,4923} %write{4922,4922}
temp	int	$tmp2751	 %read{4927,4927} %write{4926,4926}
temp	int	$tmp2752	 %read{4931,4931} %write{4930,4930}
temp	float	$tmp2753	 %read{4936,4936} %write{4933,4933}
temp	float	$tmp2754	 %read{4933,4933} %write{4932,4932}
temp	float	$tmp2755	 %read{4936,4936} %write{4935,4935}
temp	float	$tmp2756	 %read{4935,4935} %write{4934,4934}
temp	float	$tmp2757	 %read{4939,4939} %write{4936,4936}
temp	float	$tmp2758	 %read{4939,4939} %write{4938,4938}
temp	float	$tmp2759	 %read{4938,4938} %write{4937,4937}
temp	int	$tmp2760	 %read{4942,4942} %write{4941,4941}
temp	float	$tmp2761	 %read{4950,4950} %write{4944,4944}
temp	float	$tmp2762	 %read{4944,4944} %write{4943,4943}
temp	float	$tmp2763	 %read{4950,4950} %write{4949,4949}
temp	float	$tmp2764	 %read{4949,4949} %write{4946,4946}
temp	float	$tmp2765	 %read{4946,4946} %write{4945,4945}
temp	float	$tmp2766	 %read{4949,4949} %write{4948,4948}
temp	float	$tmp2767	 %read{4948,4948} %write{4947,4947}
temp	int	$tmp2768	 %read{4953,4953} %write{4952,4952}
temp	float	$tmp2769	 %read{4960,4960} %write{4956,4956}
temp	float	$tmp2770	 %read{4956,4956} %write{4955,4955}
temp	float	$tmp2771	 %read{4955,4955} %write{4954,4954}
temp	float	$tmp2772	 %read{4960,4960} %write{4959,4959}
temp	float	$tmp2773	 %read{4959,4959} %write{4958,4958}
temp	float	$tmp2774	 %read{4958,4958} %write{4957,4957}
temp	float	$tmp2775	 %read{4964,4964} %write{4960,4960}
temp	float	$tmp2776	 %read{4964,4964} %write{4963,4963}
temp	float	$tmp2777	 %read{4963,4963} %write{4962,4962}
temp	float	$tmp2778	 %read{4962,4962} %write{4961,4961}
temp	int	$tmp2779	 %read{4967,4967} %write{4966,4966}
temp	float	$tmp2780	 %read{4972,4972} %write{4971,4971}
temp	float	$tmp2781	 %read{4971,4971} %write{4970,4970}
temp	vector	$tmp2782	 %read{4970,4970} %write{4968,4968}
temp	vector	$tmp2783	 %read{4970,4970} %write{4969,4969}
temp	int	$tmp2784	 %read{4975,4975} %write{4974,4974}
temp	float	$tmp2785	 %read{4982,4982} %write{4978,4978}
temp	float	$tmp2786	 %read{4978,4978} %write{4977,4977}
temp	float	$tmp2787	 %read{4977,4977} %write{4976,4976}
temp	float	$tmp2788	 %read{4982,4982} %write{4981,4981}
temp	float	$tmp2789	 %read{4981,4981} %write{4980,4980}
temp	float	$tmp2790	 %read{4980,4980} %write{4979,4979}
temp	float	$tmp2791	 %read{4986,4986} %write{4982,4982}
temp	float	$tmp2792	 %read{4986,4986} %write{4985,4985}
temp	float	$tmp2793	 %read{4985,4985} %write{4984,4984}
temp	float	$tmp2794	 %read{4984,4984} %write{4983,4983}
temp	float	$tmp2795	 %read{4988,4988} %write{4986,4986}
temp	float	$tmp2796	 %read{4988,4988} %write{4987,4987}
temp	point	$tmp2797	 %read{4995,4995} %write{4994,4994}
temp	float	$tmp2798	 %read{4994,4994} %write{4991,4991}
temp	float	$tmp2799	 %read{4994,4994} %write{4992,4992}
temp	float	$tmp2800	 %read{4994,4994} %write{4993,4993}
temp	float	$tmp2801	 %read{4997,4997} %write{4996,4996}
temp	int	$tmp2802	 %read{4998,4998} %write{4997,4997}
temp	float	$tmp2803	 %read{5000,5000} %write{4999,4999}
temp	float	$tmp2804	 %read{5002,5002} %write{5001,5001}
temp	float	$tmp2805	 %read{5004,5004} %write{5003,5003}
temp	point	$tmp2806	 %read{5007,5007} %write{5006,5006}
temp	point	$tmp2807	 %read{5009,5009} %write{5008,5008}
temp	point	$tmp2808	 %read{5011,5011} %write{5010,5010}
temp	float	$tmp2809	 %read{5014,5014} %write{5013,5013}
temp	int	$tmp2810	 %read{5015,5015} %write{5014,5014}
temp	float	$tmp2811	 %read{5017,5017} %write{5016,5016}
temp	float	$tmp2812	 %read{5019,5019} %write{5018,5018}
temp	point	$tmp2813	 %read{5022,5022} %write{5021,5021}
temp	point	$tmp2814	 %read{5024,5024} %write{5023,5023}
temp	float	$tmp2815	 %read{5027,5027} %write{5026,5026}
temp	int	$tmp2816	 %read{5028,5028} %write{5027,5027}
temp	float	$tmp2817	 %read{5030,5030} %write{5029,5029}
temp	point	$tmp2818	 %read{5033,5033} %write{5032,5032}
temp	float	$tmp2819	 %read{5036,5036} %write{5035,5035}
temp	int	$tmp2820	 %read{5037,5037} %write{5036,5036}
temp	int	$tmp2821	 %read{2147483647,-1} %write{5040,5040}
temp	int	$tmp2822	 %read{2147483647,-1} %write{5042,5042}
temp	int	$tmp2823	 %read{2147483647,-1} %write{5044,5044}
temp	float	$tmp2824	 %read{5048,5048} %write{5047,5047}
temp	int	$tmp2825	 %read{5051,5051} %write{5050,5050}
temp	float	$tmp2826	 %read{5227,5227} %write{5226,5226}
temp	float	$tmp2827	 %read{5058,5058} %write{5057,5057}
temp	float	$tmp2828	 %read{5057,5057} %write{5056,5056}
temp	float	$tmp2829	 %read{5061,5061} %write{5060,5060}
temp	float	$tmp2830	 %read{5060,5060} %write{5059,5059}
temp	float	$tmp2831	 %read{5064,5064} %write{5063,5063}
temp	float	$tmp2832	 %read{5063,5063} %write{5062,5062}
temp	int	$tmp2833	 %read{5072,5072} %write{5071,5071}
temp	int	$tmp2834	 %read{5069,5225} %write{5069,5225}
temp	int	$tmp2835	 %read{5076,5076} %write{5075,5075}
temp	int	$tmp2836	 %read{5073,5223} %write{5073,5223}
temp	int	$tmp2837	 %read{5080,5080} %write{5079,5079}
temp	int	$tmp2838	 %read{5077,5221} %write{5077,5221}
temp	float	$tmp2839	 %read{5084,5084} %write{5081,5081}
temp	float	$tmp2840	 %read{5084,5084} %write{5082,5082}
temp	float	$tmp2841	 %read{5084,5084} %write{5083,5083}
temp	color	$tmp2842	 %read{5098,5098} %write{5097,5097}
temp	point	$tmp2843	 %read{5091,5091} %write{5090,5090}
temp	float	$tmp2844	 %read{5090,5090} %write{5087,5087}
temp	float	$tmp2845	 %read{5090,5090} %write{5088,5088}
temp	float	$tmp2846	 %read{5090,5090} %write{5089,5089}
temp	point	$tmp2847	 %read{5096,5096} %write{5095,5095}
temp	float	$tmp2848	 %read{5095,5095} %write{5092,5092}
temp	float	$tmp2849	 %read{5095,5095} %write{5093,5093}
temp	float	$tmp2850	 %read{5095,5095} %write{5094,5094}
temp	point	$tmp2851	 %read{5100,5100} %write{5099,5099}
temp	int	$tmp2852	 %read{5103,5103} %write{5102,5102}
temp	int	$tmp2853	 %read{5107,5107} %write{5106,5106}
temp	int	$tmp2854	 %read{5111,5111} %write{5110,5110}
temp	float	$tmp2855	 %read{5116,5116} %write{5113,5113}
temp	float	$tmp2856	 %read{5113,5113} %write{5112,5112}
temp	float	$tmp2857	 %read{5116,5116} %write{5115,5115}
temp	float	$tmp2858	 %read{5115,5115} %write{5114,5114}
temp	float	$tmp2859	 %read{5119,5119} %write{5116,5116}
temp	float	$tmp2860	 %read{5119,5119} %write{5118,5118}
temp	float	$tmp2861	 %read{5118,5118} %write{5117,5117}
temp	int	$tmp2862	 %read{5122,5122} %write{5121,5121}
temp	float	$tmp2863	 %read{5130,5130} %write{5124,5124}
temp	float	$tmp2864	 %read{5124,5124} %write{5123,5123}
temp	float	$tmp2865	 %read{5130,5130} %write{5129,5129}
temp	float	$tmp2866	 %read{5129,5129} %write{5126,5126}
temp	float	$tmp2867	 %read{5126,5126} %write{5125,5125}
temp	float	$tmp2868	 %read{5129,5129} %write{5128,5128}
temp	float	$tmp2869	 %read{5128,5128} %write{5127,5127}
temp	int	$tmp2870	 %read{5133,5133} %write{5132,5132}
temp	float	$tmp2871	 %read{5140,5140} %write{5136,5136}
temp	float	$tmp2872	 %read{5136,5136} %write{5135,5135}
temp	float	$tmp2873	 %read{5135,5135} %write{5134,5134}
temp	float	$tmp2874	 %read{5140,5140} %write{5139,5139}
temp	float	$tmp2875	 %read{5139,5139} %write{5138,5138}
temp	float	$tmp2876	 %read{5138,5138} %write{5137,5137}
temp	float	$tmp2877	 %read{5144,5144} %write{5140,5140}
temp	float	$tmp2878	 %read{5144,5144} %write{5143,5143}
temp	float	$tmp2879	 %read{5143,5143} %write{5142,5142}
temp	float	$tmp2880	 %read{5142,5142} %write{5141,5141}
temp	int	$tmp2881	 %read{5147,5147} %write{5146,5146}
temp	float	$tmp2882	 %read{5152,5152} %write{5151,5151}
temp	float	$tmp2883	 %read{5151,5151} %write{5150,5150}
temp	vector	$tmp2884	 %read{5150,5150} %write{5148,5148}
temp	vector	$tmp2885	 %read{5150,5150} %write{5149,5149}
temp	int	$tmp2886	 %read{5155,5155} %write{5154,5154}
temp	float	$tmp2887	 %read{5162,5162} %write{5158,5158}
temp	float	$tmp2888	 %read{5158,5158} %write{5157,5157}
temp	float	$tmp2889	 %read{5157,5157} %write{5156,5156}
temp	float	$tmp2890	 %read{5162,5162} %write{5161,5161}
temp	float	$tmp2891	 %read{5161,5161} %write{5160,5160}
temp	float	$tmp2892	 %read{5160,5160} %write{5159,5159}
temp	float	$tmp2893	 %read{5166,5166} %write{5162,5162}
temp	float	$tmp2894	 %read{5166,5166} %write{5165,5165}
temp	float	$tmp2895	 %read{5165,5165} %write{5164,5164}
temp	float	$tmp2896	 %read{5164,5164} %write{5163,5163}
temp	float	$tmp2897	 %read{5168,5168} %write{5166,5166}
temp	float	$tmp2898	 %read{5168,5168} %write{5167,5167}
temp	point	$tmp2899	 %read{5175,5175} %write{5174,5174}
temp	float	$tmp2900	 %read{5174,5174} %write{5171,5171}
temp	float	$tmp2901	 %read{5174,5174} %write{5172,5172}
temp	float	$tmp2902	 %read{5174,5174} %write{5173,5173}
temp	float	$tmp2903	 %read{5177,5177} %write{5176,5176}
temp	int	$tmp2904	 %read{5178,5178} %write{5177,5177}
temp	float	$tmp2905	 %read{5180,5180} %write{5179,5179}
temp	float	$tmp2906	 %read{5182,5182} %write{5181,5181}
temp	float	$tmp2907	 %read{5184,5184} %write{5183,5183}
temp	point	$tmp2908	 %read{5187,5187} %write{5186,5186}
temp	point	$tmp2909	 %read{5189,5189} %write{5188,5188}
temp	point	$tmp2910	 %read{5191,5191} %write{5190,5190}
temp	float	$tmp2911	 %read{5194,5194} %write{5193,5193}
temp	int	$tmp2912	 %read{5195,5195} %write{5194,5194}
temp	float	$tmp2913	 %read{5197,5197} %write{5196,5196}
temp	float	$tmp2914	 %read{5199,5199} %write{5198,5198}
temp	point	$tmp2915	 %read{5202,5202} %write{5201,5201}
temp	point	$tmp2916	 %read{5204,5204} %write{5203,5203}
temp	float	$tmp2917	 %read{5207,5207} %write{5206,5206}
temp	int	$tmp2918	 %read{5208,5208} %write{5207,5207}
temp	float	$tmp2919	 %read{5210,5210} %write{5209,5209}
temp	point	$tmp2920	 %read{5213,5213} %write{5212,5212}
temp	float	$tmp2921	 %read{5216,5216} %write{5215,5215}
temp	int	$tmp2922	 %read{5217,5217} %write{5216,5216}
temp	int	$tmp2923	 %read{2147483647,-1} %write{5220,5220}
temp	int	$tmp2924	 %read{2147483647,-1} %write{5222,5222}
temp	int	$tmp2925	 %read{2147483647,-1} %write{5224,5224}
temp	float	$tmp2926	 %read{5228,5228} %write{5227,5227}
temp	int	$tmp2927	 %read{5231,5231} %write{5230,5230}
temp	float	$tmp2928	 %read{5409,5409} %write{5408,5408}
temp	float	$tmp2929	 %read{5238,5238} %write{5237,5237}
temp	float	$tmp2930	 %read{5237,5237} %write{5236,5236}
temp	float	$tmp2931	 %read{5241,5241} %write{5240,5240}
temp	float	$tmp2932	 %read{5240,5240} %write{5239,5239}
temp	float	$tmp2933	 %read{5244,5244} %write{5243,5243}
temp	float	$tmp2934	 %read{5243,5243} %write{5242,5242}
temp	int	$tmp2935	 %read{5252,5252} %write{5251,5251}
temp	int	$tmp2936	 %read{5249,5405} %write{5249,5405}
temp	int	$tmp2937	 %read{5256,5256} %write{5255,5255}
temp	int	$tmp2938	 %read{5253,5403} %write{5253,5403}
temp	int	$tmp2939	 %read{5260,5260} %write{5259,5259}
temp	int	$tmp2940	 %read{5257,5401} %write{5257,5401}
temp	float	$tmp2941	 %read{5264,5264} %write{5261,5261}
temp	float	$tmp2942	 %read{5264,5264} %write{5262,5262}
temp	float	$tmp2943	 %read{5264,5264} %write{5263,5263}
temp	color	$tmp2944	 %read{5278,5278} %write{5277,5277}
temp	point	$tmp2945	 %read{5271,5271} %write{5270,5270}
temp	float	$tmp2946	 %read{5270,5270} %write{5267,5267}
temp	float	$tmp2947	 %read{5270,5270} %write{5268,5268}
temp	float	$tmp2948	 %read{5270,5270} %write{5269,5269}
temp	point	$tmp2949	 %read{5276,5276} %write{5275,5275}
temp	float	$tmp2950	 %read{5275,5275} %write{5272,5272}
temp	float	$tmp2951	 %read{5275,5275} %write{5273,5273}
temp	float	$tmp2952	 %read{5275,5275} %write{5274,5274}
temp	point	$tmp2953	 %read{5280,5280} %write{5279,5279}
temp	int	$tmp2954	 %read{5283,5283} %write{5282,5282}
temp	int	$tmp2955	 %read{5287,5287} %write{5286,5286}
temp	int	$tmp2956	 %read{5291,5291} %write{5290,5290}
temp	float	$tmp2957	 %read{5296,5296} %write{5293,5293}
temp	float	$tmp2958	 %read{5293,5293} %write{5292,5292}
temp	float	$tmp2959	 %read{5296,5296} %write{5295,5295}
temp	float	$tmp2960	 %read{5295,5295} %write{5294,5294}
temp	float	$tmp2961	 %read{5299,5299} %write{5296,5296}
temp	float	$tmp2962	 %read{5299,5299} %write{5298,5298}
temp	float	$tmp2963	 %read{5298,5298} %write{5297,5297}
temp	int	$tmp2964	 %read{5302,5302} %write{5301,5301}
temp	float	$tmp2965	 %read{5310,5310} %write{5304,5304}
temp	float	$tmp2966	 %read{5304,5304} %write{5303,5303}
temp	float	$tmp2967	 %read{5310,5310} %write{5309,5309}
temp	float	$tmp2968	 %read{5309,5309} %write{5306,5306}
temp	float	$tmp2969	 %read{5306,5306} %write{5305,5305}
temp	float	$tmp2970	 %read{5309,5309} %write{5308,5308}
temp	float	$tmp2971	 %read{5308,5308} %write{5307,5307}
temp	int	$tmp2972	 %read{5313,5313} %write{5312,5312}
temp	float	$tmp2973	 %read{5320,5320} %write{5316,5316}
temp	float	$tmp2974	 %read{5316,5316} %write{5315,5315}
temp	float	$tmp2975	 %read{5315,5315} %write{5314,5314}
temp	float	$tmp2976	 %read{5320,5320} %write{5319,5319}
temp	float	$tmp2977	 %read{5319,5319} %write{5318,5318}
temp	float	$tmp2978	 %read{5318,5318} %write{5317,5317}
temp	float	$tmp2979	 %read{5324,5324} %write{5320,5320}
temp	float	$tmp2980	 %read{5324,5324} %write{5323,5323}
temp	float	$tmp2981	 %read{5323,5323} %write{5322,5322}
temp	float	$tmp2982	 %read{5322,5322} %write{5321,5321}
temp	int	$tmp2983	 %read{5327,5327} %write{5326,5326}
temp	float	$tmp2984	 %read{5332,5332} %write{5331,5331}
temp	float	$tmp2985	 %read{5331,5331} %write{5330,5330}
temp	vector	$tmp2986	 %read{5330,5330} %write{5328,5328}
temp	vector	$tmp2987	 %read{5330,5330} %write{5329,5329}
temp	int	$tmp2988	 %read{5335,5335} %write{5334,5334}
temp	float	$tmp2989	 %read{5342,5342} %write{5338,5338}
temp	float	$tmp2990	 %read{5338,5338} %write{5337,5337}
temp	float	$tmp2991	 %read{5337,5337} %write{5336,5336}
temp	float	$tmp2992	 %read{5342,5342} %write{5341,5341}
temp	float	$tmp2993	 %read{5341,5341} %write{5340,5340}
temp	float	$tmp2994	 %read{5340,5340} %write{5339,5339}
temp	float	$tmp2995	 %read{5346,5346} %write{5342,5342}
temp	float	$tmp2996	 %read{5346,5346} %write{5345,5345}
temp	float	$tmp2997	 %read{5345,5345} %write{5344,5344}
temp	float	$tmp2998	 %read{5344,5344} %write{5343,5343}
temp	float	$tmp2999	 %read{5348,5348} %write{5346,5346}
temp	float	$tmp3000	 %read{5348,5348} %write{5347,5347}
temp	point	$tmp3001	 %read{5355,5355} %write{5354,5354}
temp	float	$tmp3002	 %read{5354,5354} %write{5351,5351}
temp	float	$tmp3003	 %read{5354,5354} %write{5352,5352}
temp	float	$tmp3004	 %read{5354,5354} %write{5353,5353}
temp	float	$tmp3005	 %read{5357,5357} %write{5356,5356}
temp	int	$tmp3006	 %read{5358,5358} %write{5357,5357}
temp	float	$tmp3007	 %read{5360,5360} %write{5359,5359}
temp	float	$tmp3008	 %read{5362,5362} %write{5361,5361}
temp	float	$tmp3009	 %read{5364,5364} %write{5363,5363}
temp	point	$tmp3010	 %read{5367,5367} %write{5366,5366}
temp	point	$tmp3011	 %read{5369,5369} %write{5368,5368}
temp	point	$tmp3012	 %read{5371,5371} %write{5370,5370}
temp	float	$tmp3013	 %read{5374,5374} %write{5373,5373}
temp	int	$tmp3014	 %read{5375,5375} %write{5374,5374}
temp	float	$tmp3015	 %read{5377,5377} %write{5376,5376}
temp	float	$tmp3016	 %read{5379,5379} %write{5378,5378}
temp	point	$tmp3017	 %read{5382,5382} %write{5381,5381}
temp	point	$tmp3018	 %read{5384,5384} %write{5383,5383}
temp	float	$tmp3019	 %read{5387,5387} %write{5386,5386}
temp	int	$tmp3020	 %read{5388,5388} %write{5387,5387}
temp	float	$tmp3021	 %read{5390,5390} %write{5389,5389}
temp	point	$tmp3022	 %read{5393,5393} %write{5392,5392}
temp	float	$tmp3023	 %read{5396,5396} %write{5395,5395}
temp	int	$tmp3024	 %read{5397,5397} %write{5396,5396}
temp	int	$tmp3025	 %read{2147483647,-1} %write{5400,5400}
temp	int	$tmp3026	 %read{2147483647,-1} %write{5402,5402}
temp	int	$tmp3027	 %read{2147483647,-1} %write{5404,5404}
temp	float	$tmp3028	 %read{5408,5408} %write{5406,5406}
temp	float	$tmp3029	 %read{5408,5408} %write{5407,5407}
temp	float	$tmp3030	 %read{5410,5410} %write{5409,5409}
temp	int	$tmp3031	 %read{5413,5413} %write{5412,5412}
temp	float	$tmp3032	 %read{5598,5598} %write{5595,5596}
temp	float	$tmp3033	 %read{5592,5592} %write{5591,5591}
temp	float	$tmp3034	 %read{5421,5421} %write{5420,5420}
temp	float	$tmp3035	 %read{5420,5420} %write{5419,5419}
temp	float	$tmp3036	 %read{5424,5424} %write{5423,5423}
temp	float	$tmp3037	 %read{5423,5423} %write{5422,5422}
temp	float	$tmp3038	 %read{5427,5427} %write{5426,5426}
temp	float	$tmp3039	 %read{5426,5426} %write{5425,5425}
temp	int	$tmp3040	 %read{5435,5435} %write{5434,5434}
temp	int	$tmp3041	 %read{5432,5588} %write{5432,5588}
temp	int	$tmp3042	 %read{5439,5439} %write{5438,5438}
temp	int	$tmp3043	 %read{5436,5586} %write{5436,5586}
temp	int	$tmp3044	 %read{5443,5443} %write{5442,5442}
temp	int	$tmp3045	 %read{5440,5584} %write{5440,5584}
temp	float	$tmp3046	 %read{5447,5447} %write{5444,5444}
temp	float	$tmp3047	 %read{5447,5447} %write{5445,5445}
temp	float	$tmp3048	 %read{5447,5447} %write{5446,5446}
temp	color	$tmp3049	 %read{5461,5461} %write{5460,5460}
temp	point	$tmp3050	 %read{5454,5454} %write{5453,5453}
temp	float	$tmp3051	 %read{5453,5453} %write{5450,5450}
temp	float	$tmp3052	 %read{5453,5453} %write{5451,5451}
temp	float	$tmp3053	 %read{5453,5453} %write{5452,5452}
temp	point	$tmp3054	 %read{5459,5459} %write{5458,5458}
temp	float	$tmp3055	 %read{5458,5458} %write{5455,5455}
temp	float	$tmp3056	 %read{5458,5458} %write{5456,5456}
temp	float	$tmp3057	 %read{5458,5458} %write{5457,5457}
temp	point	$tmp3058	 %read{5463,5463} %write{5462,5462}
temp	int	$tmp3059	 %read{5466,5466} %write{5465,5465}
temp	int	$tmp3060	 %read{5470,5470} %write{5469,5469}
temp	int	$tmp3061	 %read{5474,5474} %write{5473,5473}
temp	float	$tmp3062	 %read{5479,5479} %write{5476,5476}
temp	float	$tmp3063	 %read{5476,5476} %write{5475,5475}
temp	float	$tmp3064	 %read{5479,5479} %write{5478,5478}
temp	float	$tmp3065	 %read{5478,5478} %write{5477,5477}
temp	float	$tmp3066	 %read{5482,5482} %write{5479,5479}
temp	float	$tmp3067	 %read{5482,5482} %write{5481,5481}
temp	float	$tmp3068	 %read{5481,5481} %write{5480,5480}
temp	int	$tmp3069	 %read{5485,5485} %write{5484,5484}
temp	float	$tmp3070	 %read{5493,5493} %write{5487,5487}
temp	float	$tmp3071	 %read{5487,5487} %write{5486,5486}
temp	float	$tmp3072	 %read{5493,5493} %write{5492,5492}
temp	float	$tmp3073	 %read{5492,5492} %write{5489,5489}
temp	float	$tmp3074	 %read{5489,5489} %write{5488,5488}
temp	float	$tmp3075	 %read{5492,5492} %write{5491,5491}
temp	float	$tmp3076	 %read{5491,5491} %write{5490,5490}
temp	int	$tmp3077	 %read{5496,5496} %write{5495,5495}
temp	float	$tmp3078	 %read{5503,5503} %write{5499,5499}
temp	float	$tmp3079	 %read{5499,5499} %write{5498,5498}
temp	float	$tmp3080	 %read{5498,5498} %write{5497,5497}
temp	float	$tmp3081	 %read{5503,5503} %write{5502,5502}
temp	float	$tmp3082	 %read{5502,5502} %write{5501,5501}
temp	float	$tmp3083	 %read{5501,5501} %write{5500,5500}
temp	float	$tmp3084	 %read{5507,5507} %write{5503,5503}
temp	float	$tmp3085	 %read{5507,5507} %write{5506,5506}
temp	float	$tmp3086	 %read{5506,5506} %write{5505,5505}
temp	float	$tmp3087	 %read{5505,5505} %write{5504,5504}
temp	int	$tmp3088	 %read{5510,5510} %write{5509,5509}
temp	float	$tmp3089	 %read{5515,5515} %write{5514,5514}
temp	float	$tmp3090	 %read{5514,5514} %write{5513,5513}
temp	vector	$tmp3091	 %read{5513,5513} %write{5511,5511}
temp	vector	$tmp3092	 %read{5513,5513} %write{5512,5512}
temp	int	$tmp3093	 %read{5518,5518} %write{5517,5517}
temp	float	$tmp3094	 %read{5525,5525} %write{5521,5521}
temp	float	$tmp3095	 %read{5521,5521} %write{5520,5520}
temp	float	$tmp3096	 %read{5520,5520} %write{5519,5519}
temp	float	$tmp3097	 %read{5525,5525} %write{5524,5524}
temp	float	$tmp3098	 %read{5524,5524} %write{5523,5523}
temp	float	$tmp3099	 %read{5523,5523} %write{5522,5522}
temp	float	$tmp3100	 %read{5529,5529} %write{5525,5525}
temp	float	$tmp3101	 %read{5529,5529} %write{5528,5528}
temp	float	$tmp3102	 %read{5528,5528} %write{5527,5527}
temp	float	$tmp3103	 %read{5527,5527} %write{5526,5526}
temp	float	$tmp3104	 %read{5531,5531} %write{5529,5529}
temp	float	$tmp3105	 %read{5531,5531} %write{5530,5530}
temp	point	$tmp3106	 %read{5538,5538} %write{5537,5537}
temp	float	$tmp3107	 %read{5537,5537} %write{5534,5534}
temp	float	$tmp3108	 %read{5537,5537} %write{5535,5535}
temp	float	$tmp3109	 %read{5537,5537} %write{5536,5536}
temp	float	$tmp3110	 %read{5540,5540} %write{5539,5539}
temp	int	$tmp3111	 %read{5541,5541} %write{5540,5540}
temp	float	$tmp3112	 %read{5543,5543} %write{5542,5542}
temp	float	$tmp3113	 %read{5545,5545} %write{5544,5544}
temp	float	$tmp3114	 %read{5547,5547} %write{5546,5546}
temp	point	$tmp3115	 %read{5550,5550} %write{5549,5549}
temp	point	$tmp3116	 %read{5552,5552} %write{5551,5551}
temp	point	$tmp3117	 %read{5554,5554} %write{5553,5553}
temp	float	$tmp3118	 %read{5557,5557} %write{5556,5556}
temp	int	$tmp3119	 %read{5558,5558} %write{5557,5557}
temp	float	$tmp3120	 %read{5560,5560} %write{5559,5559}
temp	float	$tmp3121	 %read{5562,5562} %write{5561,5561}
temp	point	$tmp3122	 %read{5565,5565} %write{5564,5564}
temp	point	$tmp3123	 %read{5567,5567} %write{5566,5566}
temp	float	$tmp3124	 %read{5570,5570} %write{5569,5569}
temp	int	$tmp3125	 %read{5571,5571} %write{5570,5570}
temp	float	$tmp3126	 %read{5573,5573} %write{5572,5572}
temp	point	$tmp3127	 %read{5576,5576} %write{5575,5575}
temp	float	$tmp3128	 %read{5579,5579} %write{5578,5578}
temp	int	$tmp3129	 %read{5580,5580} %write{5579,5579}
temp	int	$tmp3130	 %read{2147483647,-1} %write{5583,5583}
temp	int	$tmp3131	 %read{2147483647,-1} %write{5585,5585}
temp	int	$tmp3132	 %read{2147483647,-1} %write{5587,5587}
temp	float	$tmp3133	 %read{5591,5591} %write{5589,5589}
temp	float	$tmp3134	 %read{5591,5591} %write{5590,5590}
temp	int	$tmp3135	 %read{5594,5594} %write{5593,5593}
temp	float	$tmp3136	 %read{5599,5599} %write{5598,5598}
temp	int	$tmp3137	 %read{5602,5602} %write{5601,5601}
temp	float	$tmp3138	 %read{5608,5608} %write{5607,5607}
temp	float	$tmp3139	 %read{5609,5609} %write{5608,5608}
temp	float	$tmp3140	 %read{5611,5611} %write{5610,5610}
temp	int	$tmp3141	 %read{5613,5613} %write{5612,5612}
temp	float	$tmp3142	 %read{5618,5618} %write{5613,5613}
temp	int	$tmp3143	 %read{5615,5615} %write{5614,5614}
temp	int	$tmp3144	 %read{5616,5616} %write{5615,5615}
temp	int	$tmp3145	 %read{5617,5617} %write{5616,5616}
temp	float	$tmp3146	 %read{5618,5618} %write{5617,5617}
temp	float	$tmp3147	 %read{5619,5619} %write{5618,5618}
temp	int	$tmp3148	 %read{5621,5621} %write{5620,5620}
temp	int	$tmp3149	 %read{5622,5622} %write{5621,5621}
temp	float	$tmp3150	 %read{5627,5627} %write{5622,5622}
temp	int	$tmp3151	 %read{5624,5624} %write{5623,5623}
temp	int	$tmp3152	 %read{5625,5625} %write{5624,5624}
temp	int	$tmp3153	 %read{5626,5626} %write{5625,5625}
temp	float	$tmp3154	 %read{5627,5627} %write{5626,5626}
temp	float	$tmp3155	 %read{5628,5628} %write{5627,5627}
temp	float	$tmp3156	 %read{5630,5630} %write{5629,5629}
temp	float	$tmp3157	 %read{5632,5632} %write{5630,5630}
temp	float	$tmp3158	 %read{5632,5632} %write{5631,5631}
temp	int	$tmp3159	 %read{5635,5635} %write{5634,5634}
temp	float	$tmp3160	 %read{5640,5640} %write{5635,5635}
temp	int	$tmp3161	 %read{5637,5637} %write{5636,5636}
temp	int	$tmp3162	 %read{5638,5638} %write{5637,5637}
temp	int	$tmp3163	 %read{5639,5639} %write{5638,5638}
temp	float	$tmp3164	 %read{5640,5640} %write{5639,5639}
temp	float	$tmp3165	 %read{5641,5641} %write{5640,5640}
temp	float	$tmp3166	 %read{7949,10230} %write{7925,10174}
temp	point	$tmp3167	 %read{5656,6786} %write{5647,6781}
temp	float	$tmp3168	 %read{5647,5647} %write{5644,5644}
temp	float	$tmp3169	 %read{5647,5647} %write{5645,5645}
temp	float	$tmp3170	 %read{5647,5647} %write{5646,5646}
temp	float	$tmp3171	 %read{5654,5654} %write{5653,5653}
temp	int	$tmp3172	 %read{5656,6781} %write{5656,6781}
temp	point	$tmp3173	 %read{5667,6769} %write{5659,6754}
temp	int	$tmp3174	 %read{5662,5662} %write{5661,5661}
temp	int	$tmp3175	 %read{5666,5666} %write{5665,5665}
temp	int	$tmp3176	 %read{5670,5670} %write{5669,5669}
temp	int	$tmp3177	 %read{5671,5671} %write{5670,5670}
temp	int	$tmp3178	 %read{5677,5677} %write{5676,5676}
temp	float	$tmp3179	 %read{5853,5853} %write{5852,5852}
temp	float	$tmp3180	 %read{5684,5684} %write{5683,5683}
temp	float	$tmp3181	 %read{5683,5683} %write{5682,5682}
temp	float	$tmp3182	 %read{5687,5687} %write{5686,5686}
temp	float	$tmp3183	 %read{5686,5686} %write{5685,5685}
temp	float	$tmp3184	 %read{5690,5690} %write{5689,5689}
temp	float	$tmp3185	 %read{5689,5689} %write{5688,5688}
temp	int	$tmp3186	 %read{5698,5698} %write{5697,5697}
temp	int	$tmp3187	 %read{5695,5851} %write{5695,5851}
temp	int	$tmp3188	 %read{5702,5702} %write{5701,5701}
temp	int	$tmp3189	 %read{5699,5849} %write{5699,5849}
temp	int	$tmp3190	 %read{5706,5706} %write{5705,5705}
temp	int	$tmp3191	 %read{5703,5847} %write{5703,5847}
temp	float	$tmp3192	 %read{5710,5710} %write{5707,5707}
temp	float	$tmp3193	 %read{5710,5710} %write{5708,5708}
temp	float	$tmp3194	 %read{5710,5710} %write{5709,5709}
temp	color	$tmp3195	 %read{5724,5724} %write{5723,5723}
temp	point	$tmp3196	 %read{5717,5717} %write{5716,5716}
temp	float	$tmp3197	 %read{5716,5716} %write{5713,5713}
temp	float	$tmp3198	 %read{5716,5716} %write{5714,5714}
temp	float	$tmp3199	 %read{5716,5716} %write{5715,5715}
temp	point	$tmp3200	 %read{5722,5722} %write{5721,5721}
temp	float	$tmp3201	 %read{5721,5721} %write{5718,5718}
temp	float	$tmp3202	 %read{5721,5721} %write{5719,5719}
temp	float	$tmp3203	 %read{5721,5721} %write{5720,5720}
temp	point	$tmp3204	 %read{5726,5726} %write{5725,5725}
temp	int	$tmp3205	 %read{5729,5729} %write{5728,5728}
temp	int	$tmp3206	 %read{5733,5733} %write{5732,5732}
temp	int	$tmp3207	 %read{5737,5737} %write{5736,5736}
temp	float	$tmp3208	 %read{5742,5742} %write{5739,5739}
temp	float	$tmp3209	 %read{5739,5739} %write{5738,5738}
temp	float	$tmp3210	 %read{5742,5742} %write{5741,5741}
temp	float	$tmp3211	 %read{5741,5741} %write{5740,5740}
temp	float	$tmp3212	 %read{5745,5745} %write{5742,5742}
temp	float	$tmp3213	 %read{5745,5745} %write{5744,5744}
temp	float	$tmp3214	 %read{5744,5744} %write{5743,5743}
temp	int	$tmp3215	 %read{5748,5748} %write{5747,5747}
temp	float	$tmp3216	 %read{5756,5756} %write{5750,5750}
temp	float	$tmp3217	 %read{5750,5750} %write{5749,5749}
temp	float	$tmp3218	 %read{5756,5756} %write{5755,5755}
temp	float	$tmp3219	 %read{5755,5755} %write{5752,5752}
temp	float	$tmp3220	 %read{5752,5752} %write{5751,5751}
temp	float	$tmp3221	 %read{5755,5755} %write{5754,5754}
temp	float	$tmp3222	 %read{5754,5754} %write{5753,5753}
temp	int	$tmp3223	 %read{5759,5759} %write{5758,5758}
temp	float	$tmp3224	 %read{5766,5766} %write{5762,5762}
temp	float	$tmp3225	 %read{5762,5762} %write{5761,5761}
temp	float	$tmp3226	 %read{5761,5761} %write{5760,5760}
temp	float	$tmp3227	 %read{5766,5766} %write{5765,5765}
temp	float	$tmp3228	 %read{5765,5765} %write{5764,5764}
temp	float	$tmp3229	 %read{5764,5764} %write{5763,5763}
temp	float	$tmp3230	 %read{5770,5770} %write{5766,5766}
temp	float	$tmp3231	 %read{5770,5770} %write{5769,5769}
temp	float	$tmp3232	 %read{5769,5769} %write{5768,5768}
temp	float	$tmp3233	 %read{5768,5768} %write{5767,5767}
temp	int	$tmp3234	 %read{5773,5773} %write{5772,5772}
temp	float	$tmp3235	 %read{5778,5778} %write{5777,5777}
temp	float	$tmp3236	 %read{5777,5777} %write{5776,5776}
temp	vector	$tmp3237	 %read{5776,5776} %write{5774,5774}
temp	vector	$tmp3238	 %read{5776,5776} %write{5775,5775}
temp	int	$tmp3239	 %read{5781,5781} %write{5780,5780}
temp	float	$tmp3240	 %read{5788,5788} %write{5784,5784}
temp	float	$tmp3241	 %read{5784,5784} %write{5783,5783}
temp	float	$tmp3242	 %read{5783,5783} %write{5782,5782}
temp	float	$tmp3243	 %read{5788,5788} %write{5787,5787}
temp	float	$tmp3244	 %read{5787,5787} %write{5786,5786}
temp	float	$tmp3245	 %read{5786,5786} %write{5785,5785}
temp	float	$tmp3246	 %read{5792,5792} %write{5788,5788}
temp	float	$tmp3247	 %read{5792,5792} %write{5791,5791}
temp	float	$tmp3248	 %read{5791,5791} %write{5790,5790}
temp	float	$tmp3249	 %read{5790,5790} %write{5789,5789}
temp	float	$tmp3250	 %read{5794,5794} %write{5792,5792}
temp	float	$tmp3251	 %read{5794,5794} %write{5793,5793}
temp	point	$tmp3252	 %read{5801,5801} %write{5800,5800}
temp	float	$tmp3253	 %read{5800,5800} %write{5797,5797}
temp	float	$tmp3254	 %read{5800,5800} %write{5798,5798}
temp	float	$tmp3255	 %read{5800,5800} %write{5799,5799}
temp	float	$tmp3256	 %read{5803,5803} %write{5802,5802}
temp	int	$tmp3257	 %read{5804,5804} %write{5803,5803}
temp	float	$tmp3258	 %read{5806,5806} %write{5805,5805}
temp	float	$tmp3259	 %read{5808,5808} %write{5807,5807}
temp	float	$tmp3260	 %read{5810,5810} %write{5809,5809}
temp	point	$tmp3261	 %read{5813,5813} %write{5812,5812}
temp	point	$tmp3262	 %read{5815,5815} %write{5814,5814}
temp	point	$tmp3263	 %read{5817,5817} %write{5816,5816}
temp	float	$tmp3264	 %read{5820,5820} %write{5819,5819}
temp	int	$tmp3265	 %read{5821,5821} %write{5820,5820}
temp	float	$tmp3266	 %read{5823,5823} %write{5822,5822}
temp	float	$tmp3267	 %read{5825,5825} %write{5824,5824}
temp	point	$tmp3268	 %read{5828,5828} %write{5827,5827}
temp	point	$tmp3269	 %read{5830,5830} %write{5829,5829}
temp	float	$tmp3270	 %read{5833,5833} %write{5832,5832}
temp	int	$tmp3271	 %read{5834,5834} %write{5833,5833}
temp	float	$tmp3272	 %read{5836,5836} %write{5835,5835}
temp	point	$tmp3273	 %read{5839,5839} %write{5838,5838}
temp	float	$tmp3274	 %read{5842,5842} %write{5841,5841}
temp	int	$tmp3275	 %read{5843,5843} %write{5842,5842}
temp	int	$tmp3276	 %read{2147483647,-1} %write{5846,5846}
temp	int	$tmp3277	 %read{2147483647,-1} %write{5848,5848}
temp	int	$tmp3278	 %read{2147483647,-1} %write{5850,5850}
temp	float	$tmp3279	 %read{5854,5854} %write{5853,5853}
temp	int	$tmp3280	 %read{5857,5857} %write{5856,5856}
temp	float	$tmp3281	 %read{6033,6033} %write{6032,6032}
temp	float	$tmp3282	 %read{5864,5864} %write{5863,5863}
temp	float	$tmp3283	 %read{5863,5863} %write{5862,5862}
temp	float	$tmp3284	 %read{5867,5867} %write{5866,5866}
temp	float	$tmp3285	 %read{5866,5866} %write{5865,5865}
temp	float	$tmp3286	 %read{5870,5870} %write{5869,5869}
temp	float	$tmp3287	 %read{5869,5869} %write{5868,5868}
temp	int	$tmp3288	 %read{5878,5878} %write{5877,5877}
temp	int	$tmp3289	 %read{5875,6031} %write{5875,6031}
temp	int	$tmp3290	 %read{5882,5882} %write{5881,5881}
temp	int	$tmp3291	 %read{5879,6029} %write{5879,6029}
temp	int	$tmp3292	 %read{5886,5886} %write{5885,5885}
temp	int	$tmp3293	 %read{5883,6027} %write{5883,6027}
temp	float	$tmp3294	 %read{5890,5890} %write{5887,5887}
temp	float	$tmp3295	 %read{5890,5890} %write{5888,5888}
temp	float	$tmp3296	 %read{5890,5890} %write{5889,5889}
temp	color	$tmp3297	 %read{5904,5904} %write{5903,5903}
temp	point	$tmp3298	 %read{5897,5897} %write{5896,5896}
temp	float	$tmp3299	 %read{5896,5896} %write{5893,5893}
temp	float	$tmp3300	 %read{5896,5896} %write{5894,5894}
temp	float	$tmp3301	 %read{5896,5896} %write{5895,5895}
temp	point	$tmp3302	 %read{5902,5902} %write{5901,5901}
temp	float	$tmp3303	 %read{5901,5901} %write{5898,5898}
temp	float	$tmp3304	 %read{5901,5901} %write{5899,5899}
temp	float	$tmp3305	 %read{5901,5901} %write{5900,5900}
temp	point	$tmp3306	 %read{5906,5906} %write{5905,5905}
temp	int	$tmp3307	 %read{5909,5909} %write{5908,5908}
temp	int	$tmp3308	 %read{5913,5913} %write{5912,5912}
temp	int	$tmp3309	 %read{5917,5917} %write{5916,5916}
temp	float	$tmp3310	 %read{5922,5922} %write{5919,5919}
temp	float	$tmp3311	 %read{5919,5919} %write{5918,5918}
temp	float	$tmp3312	 %read{5922,5922} %write{5921,5921}
temp	float	$tmp3313	 %read{5921,5921} %write{5920,5920}
temp	float	$tmp3314	 %read{5925,5925} %write{5922,5922}
temp	float	$tmp3315	 %read{5925,5925} %write{5924,5924}
temp	float	$tmp3316	 %read{5924,5924} %write{5923,5923}
temp	int	$tmp3317	 %read{5928,5928} %write{5927,5927}
temp	float	$tmp3318	 %read{5936,5936} %write{5930,5930}
temp	float	$tmp3319	 %read{5930,5930} %write{5929,5929}
temp	float	$tmp3320	 %read{5936,5936} %write{5935,5935}
temp	float	$tmp3321	 %read{5935,5935} %write{5932,5932}
temp	float	$tmp3322	 %read{5932,5932} %write{5931,5931}
temp	float	$tmp3323	 %read{5935,5935} %write{5934,5934}
temp	float	$tmp3324	 %read{5934,5934} %write{5933,5933}
temp	int	$tmp3325	 %read{5939,5939} %write{5938,5938}
temp	float	$tmp3326	 %read{5946,5946} %write{5942,5942}
temp	float	$tmp3327	 %read{5942,5942} %write{5941,5941}
temp	float	$tmp3328	 %read{5941,5941} %write{5940,5940}
temp	float	$tmp3329	 %read{5946,5946} %write{5945,5945}
temp	float	$tmp3330	 %read{5945,5945} %write{5944,5944}
temp	float	$tmp3331	 %read{5944,5944} %write{5943,5943}
temp	float	$tmp3332	 %read{5950,5950} %write{5946,5946}
temp	float	$tmp3333	 %read{5950,5950} %write{5949,5949}
temp	float	$tmp3334	 %read{5949,5949} %write{5948,5948}
temp	float	$tmp3335	 %read{5948,5948} %write{5947,5947}
temp	int	$tmp3336	 %read{5953,5953} %write{5952,5952}
temp	float	$tmp3337	 %read{5958,5958} %write{5957,5957}
temp	float	$tmp3338	 %read{5957,5957} %write{5956,5956}
temp	vector	$tmp3339	 %read{5956,5956} %write{5954,5954}
temp	vector	$tmp3340	 %read{5956,5956} %write{5955,5955}
temp	int	$tmp3341	 %read{5961,5961} %write{5960,5960}
temp	float	$tmp3342	 %read{5968,5968} %write{5964,5964}
temp	float	$tmp3343	 %read{5964,5964} %write{5963,5963}
temp	float	$tmp3344	 %read{5963,5963} %write{5962,5962}
temp	float	$tmp3345	 %read{5968,5968} %write{5967,5967}
temp	float	$tmp3346	 %read{5967,5967} %write{5966,5966}
temp	float	$tmp3347	 %read{5966,5966} %write{5965,5965}
temp	float	$tmp3348	 %read{5972,5972} %write{5968,5968}
temp	float	$tmp3349	 %read{5972,5972} %write{5971,5971}
temp	float	$tmp3350	 %read{5971,5971} %write{5970,5970}
temp	float	$tmp3351	 %read{5970,5970} %write{5969,5969}
temp	float	$tmp3352	 %read{5974,5974} %write{5972,5972}
temp	float	$tmp3353	 %read{5974,5974} %write{5973,5973}
temp	point	$tmp3354	 %read{5981,5981} %write{5980,5980}
temp	float	$tmp3355	 %read{5980,5980} %write{5977,5977}
temp	float	$tmp3356	 %read{5980,5980} %write{5978,5978}
temp	float	$tmp3357	 %read{5980,5980} %write{5979,5979}
temp	float	$tmp3358	 %read{5983,5983} %write{5982,5982}
temp	int	$tmp3359	 %read{5984,5984} %write{5983,5983}
temp	float	$tmp3360	 %read{5986,5986} %write{5985,5985}
temp	float	$tmp3361	 %read{5988,5988} %write{5987,5987}
temp	float	$tmp3362	 %read{5990,5990} %write{5989,5989}
temp	point	$tmp3363	 %read{5993,5993} %write{5992,5992}
temp	point	$tmp3364	 %read{5995,5995} %write{5994,5994}
temp	point	$tmp3365	 %read{5997,5997} %write{5996,5996}
temp	float	$tmp3366	 %read{6000,6000} %write{5999,5999}
temp	int	$tmp3367	 %read{6001,6001} %write{6000,6000}
temp	float	$tmp3368	 %read{6003,6003} %write{6002,6002}
temp	float	$tmp3369	 %read{6005,6005} %write{6004,6004}
temp	point	$tmp3370	 %read{6008,6008} %write{6007,6007}
temp	point	$tmp3371	 %read{6010,6010} %write{6009,6009}
temp	float	$tmp3372	 %read{6013,6013} %write{6012,6012}
temp	int	$tmp3373	 %read{6014,6014} %write{6013,6013}
temp	float	$tmp3374	 %read{6016,6016} %write{6015,6015}
temp	point	$tmp3375	 %read{6019,6019} %write{6018,6018}
temp	float	$tmp3376	 %read{6022,6022} %write{6021,6021}
temp	int	$tmp3377	 %read{6023,6023} %write{6022,6022}
temp	int	$tmp3378	 %read{2147483647,-1} %write{6026,6026}
temp	int	$tmp3379	 %read{2147483647,-1} %write{6028,6028}
temp	int	$tmp3380	 %read{2147483647,-1} %write{6030,6030}
temp	float	$tmp3381	 %read{6034,6034} %write{6033,6033}
temp	int	$tmp3382	 %read{6037,6037} %write{6036,6036}
temp	float	$tmp3383	 %read{6213,6213} %write{6212,6212}
temp	float	$tmp3384	 %read{6044,6044} %write{6043,6043}
temp	float	$tmp3385	 %read{6043,6043} %write{6042,6042}
temp	float	$tmp3386	 %read{6047,6047} %write{6046,6046}
temp	float	$tmp3387	 %read{6046,6046} %write{6045,6045}
temp	float	$tmp3388	 %read{6050,6050} %write{6049,6049}
temp	float	$tmp3389	 %read{6049,6049} %write{6048,6048}
temp	int	$tmp3390	 %read{6058,6058} %write{6057,6057}
temp	int	$tmp3391	 %read{6055,6211} %write{6055,6211}
temp	int	$tmp3392	 %read{6062,6062} %write{6061,6061}
temp	int	$tmp3393	 %read{6059,6209} %write{6059,6209}
temp	int	$tmp3394	 %read{6066,6066} %write{6065,6065}
temp	int	$tmp3395	 %read{6063,6207} %write{6063,6207}
temp	float	$tmp3396	 %read{6070,6070} %write{6067,6067}
temp	float	$tmp3397	 %read{6070,6070} %write{6068,6068}
temp	float	$tmp3398	 %read{6070,6070} %write{6069,6069}
temp	color	$tmp3399	 %read{6084,6084} %write{6083,6083}
temp	point	$tmp3400	 %read{6077,6077} %write{6076,6076}
temp	float	$tmp3401	 %read{6076,6076} %write{6073,6073}
temp	float	$tmp3402	 %read{6076,6076} %write{6074,6074}
temp	float	$tmp3403	 %read{6076,6076} %write{6075,6075}
temp	point	$tmp3404	 %read{6082,6082} %write{6081,6081}
temp	float	$tmp3405	 %read{6081,6081} %write{6078,6078}
temp	float	$tmp3406	 %read{6081,6081} %write{6079,6079}
temp	float	$tmp3407	 %read{6081,6081} %write{6080,6080}
temp	point	$tmp3408	 %read{6086,6086} %write{6085,6085}
temp	int	$tmp3409	 %read{6089,6089} %write{6088,6088}
temp	int	$tmp3410	 %read{6093,6093} %write{6092,6092}
temp	int	$tmp3411	 %read{6097,6097} %write{6096,6096}
temp	float	$tmp3412	 %read{6102,6102} %write{6099,6099}
temp	float	$tmp3413	 %read{6099,6099} %write{6098,6098}
temp	float	$tmp3414	 %read{6102,6102} %write{6101,6101}
temp	float	$tmp3415	 %read{6101,6101} %write{6100,6100}
temp	float	$tmp3416	 %read{6105,6105} %write{6102,6102}
temp	float	$tmp3417	 %read{6105,6105} %write{6104,6104}
temp	float	$tmp3418	 %read{6104,6104} %write{6103,6103}
temp	int	$tmp3419	 %read{6108,6108} %write{6107,6107}
temp	float	$tmp3420	 %read{6116,6116} %write{6110,6110}
temp	float	$tmp3421	 %read{6110,6110} %write{6109,6109}
temp	float	$tmp3422	 %read{6116,6116} %write{6115,6115}
temp	float	$tmp3423	 %read{6115,6115} %write{6112,6112}
temp	float	$tmp3424	 %read{6112,6112} %write{6111,6111}
temp	float	$tmp3425	 %read{6115,6115} %write{6114,6114}
temp	float	$tmp3426	 %read{6114,6114} %write{6113,6113}
temp	int	$tmp3427	 %read{6119,6119} %write{6118,6118}
temp	float	$tmp3428	 %read{6126,6126} %write{6122,6122}
temp	float	$tmp3429	 %read{6122,6122} %write{6121,6121}
temp	float	$tmp3430	 %read{6121,6121} %write{6120,6120}
temp	float	$tmp3431	 %read{6126,6126} %write{6125,6125}
temp	float	$tmp3432	 %read{6125,6125} %write{6124,6124}
temp	float	$tmp3433	 %read{6124,6124} %write{6123,6123}
temp	float	$tmp3434	 %read{6130,6130} %write{6126,6126}
temp	float	$tmp3435	 %read{6130,6130} %write{6129,6129}
temp	float	$tmp3436	 %read{6129,6129} %write{6128,6128}
temp	float	$tmp3437	 %read{6128,6128} %write{6127,6127}
temp	int	$tmp3438	 %read{6133,6133} %write{6132,6132}
temp	float	$tmp3439	 %read{6138,6138} %write{6137,6137}
temp	float	$tmp3440	 %read{6137,6137} %write{6136,6136}
temp	vector	$tmp3441	 %read{6136,6136} %write{6134,6134}
temp	vector	$tmp3442	 %read{6136,6136} %write{6135,6135}
temp	int	$tmp3443	 %read{6141,6141} %write{6140,6140}
temp	float	$tmp3444	 %read{6148,6148} %write{6144,6144}
temp	float	$tmp3445	 %read{6144,6144} %write{6143,6143}
temp	float	$tmp3446	 %read{6143,6143} %write{6142,6142}
temp	float	$tmp3447	 %read{6148,6148} %write{6147,6147}
temp	float	$tmp3448	 %read{6147,6147} %write{6146,6146}
temp	float	$tmp3449	 %read{6146,6146} %write{6145,6145}
temp	float	$tmp3450	 %read{6152,6152} %write{6148,6148}
temp	float	$tmp3451	 %read{6152,6152} %write{6151,6151}
temp	float	$tmp3452	 %read{6151,6151} %write{6150,6150}
temp	float	$tmp3453	 %read{6150,6150} %write{6149,6149}
temp	float	$tmp3454	 %read{6154,6154} %write{6152,6152}
temp	float	$tmp3455	 %read{6154,6154} %write{6153,6153}
temp	point	$tmp3456	 %read{6161,6161} %write{6160,6160}
temp	float	$tmp3457	 %read{6160,6160} %write{6157,6157}
temp	float	$tmp3458	 %read{6160,6160} %write{6158,6158}
temp	float	$tmp3459	 %read{6160,6160} %write{6159,6159}
temp	float	$tmp3460	 %read{6163,6163} %write{6162,6162}
temp	int	$tmp3461	 %read{6164,6164} %write{6163,6163}
temp	float	$tmp3462	 %read{6166,6166} %write{6165,6165}
temp	float	$tmp3463	 %read{6168,6168} %write{6167,6167}
temp	float	$tmp3464	 %read{6170,6170} %write{6169,6169}
temp	point	$tmp3465	 %read{6173,6173} %write{6172,6172}
temp	point	$tmp3466	 %read{6175,6175} %write{6174,6174}
temp	point	$tmp3467	 %read{6177,6177} %write{6176,6176}
temp	float	$tmp3468	 %read{6180,6180} %write{6179,6179}
temp	int	$tmp3469	 %read{6181,6181} %write{6180,6180}
temp	float	$tmp3470	 %read{6183,6183} %write{6182,6182}
temp	float	$tmp3471	 %read{6185,6185} %write{6184,6184}
temp	point	$tmp3472	 %read{6188,6188} %write{6187,6187}
temp	point	$tmp3473	 %read{6190,6190} %write{6189,6189}
temp	float	$tmp3474	 %read{6193,6193} %write{6192,6192}
temp	int	$tmp3475	 %read{6194,6194} %write{6193,6193}
temp	float	$tmp3476	 %read{6196,6196} %write{6195,6195}
temp	point	$tmp3477	 %read{6199,6199} %write{6198,6198}
temp	float	$tmp3478	 %read{6202,6202} %write{6201,6201}
temp	int	$tmp3479	 %read{6203,6203} %write{6202,6202}
temp	int	$tmp3480	 %read{2147483647,-1} %write{6206,6206}
temp	int	$tmp3481	 %read{2147483647,-1} %write{6208,6208}
temp	int	$tmp3482	 %read{2147483647,-1} %write{6210,6210}
temp	float	$tmp3483	 %read{6214,6214} %write{6213,6213}
temp	int	$tmp3484	 %read{6217,6217} %write{6216,6216}
temp	float	$tmp3485	 %read{6393,6393} %write{6392,6392}
temp	float	$tmp3486	 %read{6224,6224} %write{6223,6223}
temp	float	$tmp3487	 %read{6223,6223} %write{6222,6222}
temp	float	$tmp3488	 %read{6227,6227} %write{6226,6226}
temp	float	$tmp3489	 %read{6226,6226} %write{6225,6225}
temp	float	$tmp3490	 %read{6230,6230} %write{6229,6229}
temp	float	$tmp3491	 %read{6229,6229} %write{6228,6228}
temp	int	$tmp3492	 %read{6238,6238} %write{6237,6237}
temp	int	$tmp3493	 %read{6235,6391} %write{6235,6391}
temp	int	$tmp3494	 %read{6242,6242} %write{6241,6241}
temp	int	$tmp3495	 %read{6239,6389} %write{6239,6389}
temp	int	$tmp3496	 %read{6246,6246} %write{6245,6245}
temp	int	$tmp3497	 %read{6243,6387} %write{6243,6387}
temp	float	$tmp3498	 %read{6250,6250} %write{6247,6247}
temp	float	$tmp3499	 %read{6250,6250} %write{6248,6248}
temp	float	$tmp3500	 %read{6250,6250} %write{6249,6249}
temp	color	$tmp3501	 %read{6264,6264} %write{6263,6263}
temp	point	$tmp3502	 %read{6257,6257} %write{6256,6256}
temp	float	$tmp3503	 %read{6256,6256} %write{6253,6253}
temp	float	$tmp3504	 %read{6256,6256} %write{6254,6254}
temp	float	$tmp3505	 %read{6256,6256} %write{6255,6255}
temp	point	$tmp3506	 %read{6262,6262} %write{6261,6261}
temp	float	$tmp3507	 %read{6261,6261} %write{6258,6258}
temp	float	$tmp3508	 %read{6261,6261} %write{6259,6259}
temp	float	$tmp3509	 %read{6261,6261} %write{6260,6260}
temp	point	$tmp3510	 %read{6266,6266} %write{6265,6265}
temp	int	$tmp3511	 %read{6269,6269} %write{6268,6268}
temp	int	$tmp3512	 %read{6273,6273} %write{6272,6272}
temp	int	$tmp3513	 %read{6277,6277} %write{6276,6276}
temp	float	$tmp3514	 %read{6282,6282} %write{6279,6279}
temp	float	$tmp3515	 %read{6279,6279} %write{6278,6278}
temp	float	$tmp3516	 %read{6282,6282} %write{6281,6281}
temp	float	$tmp3517	 %read{6281,6281} %write{6280,6280}
temp	float	$tmp3518	 %read{6285,6285} %write{6282,6282}
temp	float	$tmp3519	 %read{6285,6285} %write{6284,6284}
temp	float	$tmp3520	 %read{6284,6284} %write{6283,6283}
temp	int	$tmp3521	 %read{6288,6288} %write{6287,6287}
temp	float	$tmp3522	 %read{6296,6296} %write{6290,6290}
temp	float	$tmp3523	 %read{6290,6290} %write{6289,6289}
temp	float	$tmp3524	 %read{6296,6296} %write{6295,6295}
temp	float	$tmp3525	 %read{6295,6295} %write{6292,6292}
temp	float	$tmp3526	 %read{6292,6292} %write{6291,6291}
temp	float	$tmp3527	 %read{6295,6295} %write{6294,6294}
temp	float	$tmp3528	 %read{6294,6294} %write{6293,6293}
temp	int	$tmp3529	 %read{6299,6299} %write{6298,6298}
temp	float	$tmp3530	 %read{6306,6306} %write{6302,6302}
temp	float	$tmp3531	 %read{6302,6302} %write{6301,6301}
temp	float	$tmp3532	 %read{6301,6301} %write{6300,6300}
temp	float	$tmp3533	 %read{6306,6306} %write{6305,6305}
temp	float	$tmp3534	 %read{6305,6305} %write{6304,6304}
temp	float	$tmp3535	 %read{6304,6304} %write{6303,6303}
temp	float	$tmp3536	 %read{6310,6310} %write{6306,6306}
temp	float	$tmp3537	 %read{6310,6310} %write{6309,6309}
temp	float	$tmp3538	 %read{6309,6309} %write{6308,6308}
temp	float	$tmp3539	 %read{6308,6308} %write{6307,6307}
temp	int	$tmp3540	 %read{6313,6313} %write{6312,6312}
temp	float	$tmp3541	 %read{6318,6318} %write{6317,6317}
temp	float	$tmp3542	 %read{6317,6317} %write{6316,6316}
temp	vector	$tmp3543	 %read{6316,6316} %write{6314,6314}
temp	vector	$tmp3544	 %read{6316,6316} %write{6315,6315}
temp	int	$tmp3545	 %read{6321,6321} %write{6320,6320}
temp	float	$tmp3546	 %read{6328,6328} %write{6324,6324}
temp	float	$tmp3547	 %read{6324,6324} %write{6323,6323}
temp	float	$tmp3548	 %read{6323,6323} %write{6322,6322}
temp	float	$tmp3549	 %read{6328,6328} %write{6327,6327}
temp	float	$tmp3550	 %read{6327,6327} %write{6326,6326}
temp	float	$tmp3551	 %read{6326,6326} %write{6325,6325}
temp	float	$tmp3552	 %read{6332,6332} %write{6328,6328}
temp	float	$tmp3553	 %read{6332,6332} %write{6331,6331}
temp	float	$tmp3554	 %read{6331,6331} %write{6330,6330}
temp	float	$tmp3555	 %read{6330,6330} %write{6329,6329}
temp	float	$tmp3556	 %read{6334,6334} %write{6332,6332}
temp	float	$tmp3557	 %read{6334,6334} %write{6333,6333}
temp	point	$tmp3558	 %read{6341,6341} %write{6340,6340}
temp	float	$tmp3559	 %read{6340,6340} %write{6337,6337}
temp	float	$tmp3560	 %read{6340,6340} %write{6338,6338}
temp	float	$tmp3561	 %read{6340,6340} %write{6339,6339}
temp	float	$tmp3562	 %read{6343,6343} %write{6342,6342}
temp	int	$tmp3563	 %read{6344,6344} %write{6343,6343}
temp	float	$tmp3564	 %read{6346,6346} %write{6345,6345}
temp	float	$tmp3565	 %read{6348,6348} %write{6347,6347}
temp	float	$tmp3566	 %read{6350,6350} %write{6349,6349}
temp	point	$tmp3567	 %read{6353,6353} %write{6352,6352}
temp	point	$tmp3568	 %read{6355,6355} %write{6354,6354}
temp	point	$tmp3569	 %read{6357,6357} %write{6356,6356}
temp	float	$tmp3570	 %read{6360,6360} %write{6359,6359}
temp	int	$tmp3571	 %read{6361,6361} %write{6360,6360}
temp	float	$tmp3572	 %read{6363,6363} %write{6362,6362}
temp	float	$tmp3573	 %read{6365,6365} %write{6364,6364}
temp	point	$tmp3574	 %read{6368,6368} %write{6367,6367}
temp	point	$tmp3575	 %read{6370,6370} %write{6369,6369}
temp	float	$tmp3576	 %read{6373,6373} %write{6372,6372}
temp	int	$tmp3577	 %read{6374,6374} %write{6373,6373}
temp	float	$tmp3578	 %read{6376,6376} %write{6375,6375}
temp	point	$tmp3579	 %read{6379,6379} %write{6378,6378}
temp	float	$tmp3580	 %read{6382,6382} %write{6381,6381}
temp	int	$tmp3581	 %read{6383,6383} %write{6382,6382}
temp	int	$tmp3582	 %read{2147483647,-1} %write{6386,6386}
temp	int	$tmp3583	 %read{2147483647,-1} %write{6388,6388}
temp	int	$tmp3584	 %read{2147483647,-1} %write{6390,6390}
temp	float	$tmp3585	 %read{6394,6394} %write{6393,6393}
temp	int	$tmp3586	 %read{6397,6397} %write{6396,6396}
temp	float	$tmp3587	 %read{6575,6575} %write{6574,6574}
temp	float	$tmp3588	 %read{6404,6404} %write{6403,6403}
temp	float	$tmp3589	 %read{6403,6403} %write{6402,6402}
temp	float	$tmp3590	 %read{6407,6407} %write{6406,6406}
temp	float	$tmp3591	 %read{6406,6406} %write{6405,6405}
temp	float	$tmp3592	 %read{6410,6410} %write{6409,6409}
temp	float	$tmp3593	 %read{6409,6409} %write{6408,6408}
temp	int	$tmp3594	 %read{6418,6418} %write{6417,6417}
temp	int	$tmp3595	 %read{6415,6571} %write{6415,6571}
temp	int	$tmp3596	 %read{6422,6422} %write{6421,6421}
temp	int	$tmp3597	 %read{6419,6569} %write{6419,6569}
temp	int	$tmp3598	 %read{6426,6426} %write{6425,6425}
temp	int	$tmp3599	 %read{6423,6567} %write{6423,6567}
temp	float	$tmp3600	 %read{6430,6430} %write{6427,6427}
temp	float	$tmp3601	 %read{6430,6430} %write{6428,6428}
temp	float	$tmp3602	 %read{6430,6430} %write{6429,6429}
temp	color	$tmp3603	 %read{6444,6444} %write{6443,6443}
temp	point	$tmp3604	 %read{6437,6437} %write{6436,6436}
temp	float	$tmp3605	 %read{6436,6436} %write{6433,6433}
temp	float	$tmp3606	 %read{6436,6436} %write{6434,6434}
temp	float	$tmp3607	 %read{6436,6436} %write{6435,6435}
temp	point	$tmp3608	 %read{6442,6442} %write{6441,6441}
temp	float	$tmp3609	 %read{6441,6441} %write{6438,6438}
temp	float	$tmp3610	 %read{6441,6441} %write{6439,6439}
temp	float	$tmp3611	 %read{6441,6441} %write{6440,6440}
temp	point	$tmp3612	 %read{6446,6446} %write{6445,6445}
temp	int	$tmp3613	 %read{6449,6449} %write{6448,6448}
temp	int	$tmp3614	 %read{6453,6453} %write{6452,6452}
temp	int	$tmp3615	 %read{6457,6457} %write{6456,6456}
temp	float	$tmp3616	 %read{6462,6462} %write{6459,6459}
temp	float	$tmp3617	 %read{6459,6459} %write{6458,6458}
temp	float	$tmp3618	 %read{6462,6462} %write{6461,6461}
temp	float	$tmp3619	 %read{6461,6461} %write{6460,6460}
temp	float	$tmp3620	 %read{6465,6465} %write{6462,6462}
temp	float	$tmp3621	 %read{6465,6465} %write{6464,6464}
temp	float	$tmp3622	 %read{6464,6464} %write{6463,6463}
temp	int	$tmp3623	 %read{6468,6468} %write{6467,6467}
temp	float	$tmp3624	 %read{6476,6476} %write{6470,6470}
temp	float	$tmp3625	 %read{6470,6470} %write{6469,6469}
temp	float	$tmp3626	 %read{6476,6476} %write{6475,6475}
temp	float	$tmp3627	 %read{6475,6475} %write{6472,6472}
temp	float	$tmp3628	 %read{6472,6472} %write{6471,6471}
temp	float	$tmp3629	 %read{6475,6475} %write{6474,6474}
temp	float	$tmp3630	 %read{6474,6474} %write{6473,6473}
temp	int	$tmp3631	 %read{6479,6479} %write{6478,6478}
temp	float	$tmp3632	 %read{6486,6486} %write{6482,6482}
temp	float	$tmp3633	 %read{6482,6482} %write{6481,6481}
temp	float	$tmp3634	 %read{6481,6481} %write{6480,6480}
temp	float	$tmp3635	 %read{6486,6486} %write{6485,6485}
temp	float	$tmp3636	 %read{6485,6485} %write{6484,6484}
temp	float	$tmp3637	 %read{6484,6484} %write{6483,6483}
temp	float	$tmp3638	 %read{6490,6490} %write{6486,6486}
temp	float	$tmp3639	 %read{6490,6490} %write{6489,6489}
temp	float	$tmp3640	 %read{6489,6489} %write{6488,6488}
temp	float	$tmp3641	 %read{6488,6488} %write{6487,6487}
temp	int	$tmp3642	 %read{6493,6493} %write{6492,6492}
temp	float	$tmp3643	 %read{6498,6498} %write{6497,6497}
temp	float	$tmp3644	 %read{6497,6497} %write{6496,6496}
temp	vector	$tmp3645	 %read{6496,6496} %write{6494,6494}
temp	vector	$tmp3646	 %read{6496,6496} %write{6495,6495}
temp	int	$tmp3647	 %read{6501,6501} %write{6500,6500}
temp	float	$tmp3648	 %read{6508,6508} %write{6504,6504}
temp	float	$tmp3649	 %read{6504,6504} %write{6503,6503}
temp	float	$tmp3650	 %read{6503,6503} %write{6502,6502}
temp	float	$tmp3651	 %read{6508,6508} %write{6507,6507}
temp	float	$tmp3652	 %read{6507,6507} %write{6506,6506}
temp	float	$tmp3653	 %read{6506,6506} %write{6505,6505}
temp	float	$tmp3654	 %read{6512,6512} %write{6508,6508}
temp	float	$tmp3655	 %read{6512,6512} %write{6511,6511}
temp	float	$tmp3656	 %read{6511,6511} %write{6510,6510}
temp	float	$tmp3657	 %read{6510,6510} %write{6509,6509}
temp	float	$tmp3658	 %read{6514,6514} %write{6512,6512}
temp	float	$tmp3659	 %read{6514,6514} %write{6513,6513}
temp	point	$tmp3660	 %read{6521,6521} %write{6520,6520}
temp	float	$tmp3661	 %read{6520,6520} %write{6517,6517}
temp	float	$tmp3662	 %read{6520,6520} %write{6518,6518}
temp	float	$tmp3663	 %read{6520,6520} %write{6519,6519}
temp	float	$tmp3664	 %read{6523,6523} %write{6522,6522}
temp	int	$tmp3665	 %read{6524,6524} %write{6523,6523}
temp	float	$tmp3666	 %read{6526,6526} %write{6525,6525}
temp	float	$tmp3667	 %read{6528,6528} %write{6527,6527}
temp	float	$tmp3668	 %read{6530,6530} %write{6529,6529}
temp	point	$tmp3669	 %read{6533,6533} %write{6532,6532}
temp	point	$tmp3670	 %read{6535,6535} %write{6534,6534}
temp	point	$tmp3671	 %read{6537,6537} %write{6536,6536}
temp	float	$tmp3672	 %read{6540,6540} %write{6539,6539}
temp	int	$tmp3673	 %read{6541,6541} %write{6540,6540}
temp	float	$tmp3674	 %read{6543,6543} %write{6542,6542}
temp	float	$tmp3675	 %read{6545,6545} %write{6544,6544}
temp	point	$tmp3676	 %read{6548,6548} %write{6547,6547}
temp	point	$tmp3677	 %read{6550,6550} %write{6549,6549}
temp	float	$tmp3678	 %read{6553,6553} %write{6552,6552}
temp	int	$tmp3679	 %read{6554,6554} %write{6553,6553}
temp	float	$tmp3680	 %read{6556,6556} %write{6555,6555}
temp	point	$tmp3681	 %read{6559,6559} %write{6558,6558}
temp	float	$tmp3682	 %read{6562,6562} %write{6561,6561}
temp	int	$tmp3683	 %read{6563,6563} %write{6562,6562}
temp	int	$tmp3684	 %read{2147483647,-1} %write{6566,6566}
temp	int	$tmp3685	 %read{2147483647,-1} %write{6568,6568}
temp	int	$tmp3686	 %read{2147483647,-1} %write{6570,6570}
temp	float	$tmp3687	 %read{6574,6574} %write{6572,6572}
temp	float	$tmp3688	 %read{6574,6574} %write{6573,6573}
temp	float	$tmp3689	 %read{6576,6576} %write{6575,6575}
temp	int	$tmp3690	 %read{6579,6579} %write{6578,6578}
temp	float	$tmp3691	 %read{6764,6764} %write{6761,6762}
temp	float	$tmp3692	 %read{6758,6758} %write{6757,6757}
temp	float	$tmp3693	 %read{6587,6587} %write{6586,6586}
temp	float	$tmp3694	 %read{6586,6586} %write{6585,6585}
temp	float	$tmp3695	 %read{6590,6590} %write{6589,6589}
temp	float	$tmp3696	 %read{6589,6589} %write{6588,6588}
temp	float	$tmp3697	 %read{6593,6593} %write{6592,6592}
temp	float	$tmp3698	 %read{6592,6592} %write{6591,6591}
temp	int	$tmp3699	 %read{6601,6601} %write{6600,6600}
temp	int	$tmp3700	 %read{6598,6754} %write{6598,6754}
temp	int	$tmp3701	 %read{6605,6605} %write{6604,6604}
temp	int	$tmp3702	 %read{6602,6752} %write{6602,6752}
temp	int	$tmp3703	 %read{6609,6609} %write{6608,6608}
temp	int	$tmp3704	 %read{6606,6750} %write{6606,6750}
temp	float	$tmp3705	 %read{6613,6613} %write{6610,6610}
temp	float	$tmp3706	 %read{6613,6613} %write{6611,6611}
temp	float	$tmp3707	 %read{6613,6613} %write{6612,6612}
temp	color	$tmp3708	 %read{6627,6627} %write{6626,6626}
temp	point	$tmp3709	 %read{6620,6620} %write{6619,6619}
temp	float	$tmp3710	 %read{6619,6619} %write{6616,6616}
temp	float	$tmp3711	 %read{6619,6619} %write{6617,6617}
temp	float	$tmp3712	 %read{6619,6619} %write{6618,6618}
temp	point	$tmp3713	 %read{6625,6625} %write{6624,6624}
temp	float	$tmp3714	 %read{6624,6624} %write{6621,6621}
temp	float	$tmp3715	 %read{6624,6624} %write{6622,6622}
temp	float	$tmp3716	 %read{6624,6624} %write{6623,6623}
temp	point	$tmp3717	 %read{6629,6629} %write{6628,6628}
temp	int	$tmp3718	 %read{6632,6632} %write{6631,6631}
temp	int	$tmp3719	 %read{6636,6636} %write{6635,6635}
temp	int	$tmp3720	 %read{6640,6640} %write{6639,6639}
temp	float	$tmp3721	 %read{6645,6645} %write{6642,6642}
temp	float	$tmp3722	 %read{6642,6642} %write{6641,6641}
temp	float	$tmp3723	 %read{6645,6645} %write{6644,6644}
temp	float	$tmp3724	 %read{6644,6644} %write{6643,6643}
temp	float	$tmp3725	 %read{6648,6648} %write{6645,6645}
temp	float	$tmp3726	 %read{6648,6648} %write{6647,6647}
temp	float	$tmp3727	 %read{6647,6647} %write{6646,6646}
temp	int	$tmp3728	 %read{6651,6651} %write{6650,6650}
temp	float	$tmp3729	 %read{6659,6659} %write{6653,6653}
temp	float	$tmp3730	 %read{6653,6653} %write{6652,6652}
temp	float	$tmp3731	 %read{6659,6659} %write{6658,6658}
temp	float	$tmp3732	 %read{6658,6658} %write{6655,6655}
temp	float	$tmp3733	 %read{6655,6655} %write{6654,6654}
temp	float	$tmp3734	 %read{6658,6658} %write{6657,6657}
temp	float	$tmp3735	 %read{6657,6657} %write{6656,6656}
temp	int	$tmp3736	 %read{6662,6662} %write{6661,6661}
temp	float	$tmp3737	 %read{6669,6669} %write{6665,6665}
temp	float	$tmp3738	 %read{6665,6665} %write{6664,6664}
temp	float	$tmp3739	 %read{6664,6664} %write{6663,6663}
temp	float	$tmp3740	 %read{6669,6669} %write{6668,6668}
temp	float	$tmp3741	 %read{6668,6668} %write{6667,6667}
temp	float	$tmp3742	 %read{6667,6667} %write{6666,6666}
temp	float	$tmp3743	 %read{6673,6673} %write{6669,6669}
temp	float	$tmp3744	 %read{6673,6673} %write{6672,6672}
temp	float	$tmp3745	 %read{6672,6672} %write{6671,6671}
temp	float	$tmp3746	 %read{6671,6671} %write{6670,6670}
temp	int	$tmp3747	 %read{6676,6676} %write{6675,6675}
temp	float	$tmp3748	 %read{6681,6681} %write{6680,6680}
temp	float	$tmp3749	 %read{6680,6680} %write{6679,6679}
temp	vector	$tmp3750	 %read{6679,6679} %write{6677,6677}
temp	vector	$tmp3751	 %read{6679,6679} %write{6678,6678}
temp	int	$tmp3752	 %read{6684,6684} %write{6683,6683}
temp	float	$tmp3753	 %read{6691,6691} %write{6687,6687}
temp	float	$tmp3754	 %read{6687,6687} %write{6686,6686}
temp	float	$tmp3755	 %read{6686,6686} %write{6685,6685}
temp	float	$tmp3756	 %read{6691,6691} %write{6690,6690}
temp	float	$tmp3757	 %read{6690,6690} %write{6689,6689}
temp	float	$tmp3758	 %read{6689,6689} %write{6688,6688}
temp	float	$tmp3759	 %read{6695,6695} %write{6691,6691}
temp	float	$tmp3760	 %read{6695,6695} %write{6694,6694}
temp	float	$tmp3761	 %read{6694,6694} %write{6693,6693}
temp	float	$tmp3762	 %read{6693,6693} %write{6692,6692}
temp	float	$tmp3763	 %read{6697,6697} %write{6695,6695}
temp	float	$tmp3764	 %read{6697,6697} %write{6696,6696}
temp	point	$tmp3765	 %read{6704,6704} %write{6703,6703}
temp	float	$tmp3766	 %read{6703,6703} %write{6700,6700}
temp	float	$tmp3767	 %read{6703,6703} %write{6701,6701}
temp	float	$tmp3768	 %read{6703,6703} %write{6702,6702}
temp	float	$tmp3769	 %read{6706,6706} %write{6705,6705}
temp	int	$tmp3770	 %read{6707,6707} %write{6706,6706}
temp	float	$tmp3771	 %read{6709,6709} %write{6708,6708}
temp	float	$tmp3772	 %read{6711,6711} %write{6710,6710}
temp	float	$tmp3773	 %read{6713,6713} %write{6712,6712}
temp	point	$tmp3774	 %read{6716,6716} %write{6715,6715}
temp	point	$tmp3775	 %read{6718,6718} %write{6717,6717}
temp	point	$tmp3776	 %read{6720,6720} %write{6719,6719}
temp	float	$tmp3777	 %read{6723,6723} %write{6722,6722}
temp	int	$tmp3778	 %read{6724,6724} %write{6723,6723}
temp	float	$tmp3779	 %read{6726,6726} %write{6725,6725}
temp	float	$tmp3780	 %read{6728,6728} %write{6727,6727}
temp	point	$tmp3781	 %read{6731,6731} %write{6730,6730}
temp	point	$tmp3782	 %read{6733,6733} %write{6732,6732}
temp	float	$tmp3783	 %read{6736,6736} %write{6735,6735}
temp	int	$tmp3784	 %read{6737,6737} %write{6736,6736}
temp	float	$tmp3785	 %read{6739,6739} %write{6738,6738}
temp	point	$tmp3786	 %read{6742,6742} %write{6741,6741}
temp	float	$tmp3787	 %read{6745,6745} %write{6744,6744}
temp	int	$tmp3788	 %read{6746,6746} %write{6745,6745}
temp	int	$tmp3789	 %read{2147483647,-1} %write{6749,6749}
temp	int	$tmp3790	 %read{2147483647,-1} %write{6751,6751}
temp	int	$tmp3791	 %read{2147483647,-1} %write{6753,6753}
temp	float	$tmp3792	 %read{6757,6757} %write{6755,6755}
temp	float	$tmp3793	 %read{6757,6757} %write{6756,6756}
temp	int	$tmp3794	 %read{6760,6760} %write{6759,6759}
temp	float	$tmp3795	 %read{6765,6765} %write{6764,6764}
temp	int	$tmp3796	 %read{6768,6768} %write{6767,6767}
temp	float	$tmp3797	 %read{6774,6774} %write{6773,6773}
temp	float	$tmp3798	 %read{6775,6775} %write{6774,6774}
temp	float	$tmp3799	 %read{6777,6777} %write{6776,6776}
temp	int	$tmp3800	 %read{2147483647,-1} %write{6780,6780}
temp	float	$tmp3801	 %read{6783,6783} %write{6782,6782}
temp	int	$tmp3802	 %read{6785,6785} %write{6784,6784}
temp	point	$tmp3803	 %read{6794,7896} %write{6786,7881}
temp	int	$tmp3804	 %read{6789,6789} %write{6788,6788}
temp	int	$tmp3805	 %read{6793,6793} %write{6792,6792}
temp	int	$tmp3806	 %read{6797,6797} %write{6796,6796}
temp	int	$tmp3807	 %read{6798,6798} %write{6797,6797}
temp	int	$tmp3808	 %read{6804,6804} %write{6803,6803}
temp	float	$tmp3809	 %read{6980,6980} %write{6979,6979}
temp	float	$tmp3810	 %read{6811,6811} %write{6810,6810}
temp	float	$tmp3811	 %read{6810,6810} %write{6809,6809}
temp	float	$tmp3812	 %read{6814,6814} %write{6813,6813}
temp	float	$tmp3813	 %read{6813,6813} %write{6812,6812}
temp	float	$tmp3814	 %read{6817,6817} %write{6816,6816}
temp	float	$tmp3815	 %read{6816,6816} %write{6815,6815}
temp	int	$tmp3816	 %read{6825,6825} %write{6824,6824}
temp	int	$tmp3817	 %read{6822,6978} %write{6822,6978}
temp	int	$tmp3818	 %read{6829,6829} %write{6828,6828}
temp	int	$tmp3819	 %read{6826,6976} %write{6826,6976}
temp	int	$tmp3820	 %read{6833,6833} %write{6832,6832}
temp	int	$tmp3821	 %read{6830,6974} %write{6830,6974}
temp	float	$tmp3822	 %read{6837,6837} %write{6834,6834}
temp	float	$tmp3823	 %read{6837,6837} %write{6835,6835}
temp	float	$tmp3824	 %read{6837,6837} %write{6836,6836}
temp	color	$tmp3825	 %read{6851,6851} %write{6850,6850}
temp	point	$tmp3826	 %read{6844,6844} %write{6843,6843}
temp	float	$tmp3827	 %read{6843,6843} %write{6840,6840}
temp	float	$tmp3828	 %read{6843,6843} %write{6841,6841}
temp	float	$tmp3829	 %read{6843,6843} %write{6842,6842}
temp	point	$tmp3830	 %read{6849,6849} %write{6848,6848}
temp	float	$tmp3831	 %read{6848,6848} %write{6845,6845}
temp	float	$tmp3832	 %read{6848,6848} %write{6846,6846}
temp	float	$tmp3833	 %read{6848,6848} %write{6847,6847}
temp	point	$tmp3834	 %read{6853,6853} %write{6852,6852}
temp	int	$tmp3835	 %read{6856,6856} %write{6855,6855}
temp	int	$tmp3836	 %read{6860,6860} %write{6859,6859}
temp	int	$tmp3837	 %read{6864,6864} %write{6863,6863}
temp	float	$tmp3838	 %read{6869,6869} %write{6866,6866}
temp	float	$tmp3839	 %read{6866,6866} %write{6865,6865}
temp	float	$tmp3840	 %read{6869,6869} %write{6868,6868}
temp	float	$tmp3841	 %read{6868,6868} %write{6867,6867}
temp	float	$tmp3842	 %read{6872,6872} %write{6869,6869}
temp	float	$tmp3843	 %read{6872,6872} %write{6871,6871}
temp	float	$tmp3844	 %read{6871,6871} %write{6870,6870}
temp	int	$tmp3845	 %read{6875,6875} %write{6874,6874}
temp	float	$tmp3846	 %read{6883,6883} %write{6877,6877}
temp	float	$tmp3847	 %read{6877,6877} %write{6876,6876}
temp	float	$tmp3848	 %read{6883,6883} %write{6882,6882}
temp	float	$tmp3849	 %read{6882,6882} %write{6879,6879}
temp	float	$tmp3850	 %read{6879,6879} %write{6878,6878}
temp	float	$tmp3851	 %read{6882,6882} %write{6881,6881}
temp	float	$tmp3852	 %read{6881,6881} %write{6880,6880}
temp	int	$tmp3853	 %read{6886,6886} %write{6885,6885}
temp	float	$tmp3854	 %read{6893,6893} %write{6889,6889}
temp	float	$tmp3855	 %read{6889,6889} %write{6888,6888}
temp	float	$tmp3856	 %read{6888,6888} %write{6887,6887}
temp	float	$tmp3857	 %read{6893,6893} %write{6892,6892}
temp	float	$tmp3858	 %read{6892,6892} %write{6891,6891}
temp	float	$tmp3859	 %read{6891,6891} %write{6890,6890}
temp	float	$tmp3860	 %read{6897,6897} %write{6893,6893}
temp	float	$tmp3861	 %read{6897,6897} %write{6896,6896}
temp	float	$tmp3862	 %read{6896,6896} %write{6895,6895}
temp	float	$tmp3863	 %read{6895,6895} %write{6894,6894}
temp	int	$tmp3864	 %read{6900,6900} %write{6899,6899}
temp	float	$tmp3865	 %read{6905,6905} %write{6904,6904}
temp	float	$tmp3866	 %read{6904,6904} %write{6903,6903}
temp	vector	$tmp3867	 %read{6903,6903} %write{6901,6901}
temp	vector	$tmp3868	 %read{6903,6903} %write{6902,6902}
temp	int	$tmp3869	 %read{6908,6908} %write{6907,6907}
temp	float	$tmp3870	 %read{6915,6915} %write{6911,6911}
temp	float	$tmp3871	 %read{6911,6911} %write{6910,6910}
temp	float	$tmp3872	 %read{6910,6910} %write{6909,6909}
temp	float	$tmp3873	 %read{6915,6915} %write{6914,6914}
temp	float	$tmp3874	 %read{6914,6914} %write{6913,6913}
temp	float	$tmp3875	 %read{6913,6913} %write{6912,6912}
temp	float	$tmp3876	 %read{6919,6919} %write{6915,6915}
temp	float	$tmp3877	 %read{6919,6919} %write{6918,6918}
temp	float	$tmp3878	 %read{6918,6918} %write{6917,6917}
temp	float	$tmp3879	 %read{6917,6917} %write{6916,6916}
temp	float	$tmp3880	 %read{6921,6921} %write{6919,6919}
temp	float	$tmp3881	 %read{6921,6921} %write{6920,6920}
temp	point	$tmp3882	 %read{6928,6928} %write{6927,6927}
temp	float	$tmp3883	 %read{6927,6927} %write{6924,6924}
temp	float	$tmp3884	 %read{6927,6927} %write{6925,6925}
temp	float	$tmp3885	 %read{6927,6927} %write{6926,6926}
temp	float	$tmp3886	 %read{6930,6930} %write{6929,6929}
temp	int	$tmp3887	 %read{6931,6931} %write{6930,6930}
temp	float	$tmp3888	 %read{6933,6933} %write{6932,6932}
temp	float	$tmp3889	 %read{6935,6935} %write{6934,6934}
temp	float	$tmp3890	 %read{6937,6937} %write{6936,6936}
temp	point	$tmp3891	 %read{6940,6940} %write{6939,6939}
temp	point	$tmp3892	 %read{6942,6942} %write{6941,6941}
temp	point	$tmp3893	 %read{6944,6944} %write{6943,6943}
temp	float	$tmp3894	 %read{6947,6947} %write{6946,6946}
temp	int	$tmp3895	 %read{6948,6948} %write{6947,6947}
temp	float	$tmp3896	 %read{6950,6950} %write{6949,6949}
temp	float	$tmp3897	 %read{6952,6952} %write{6951,6951}
temp	point	$tmp3898	 %read{6955,6955} %write{6954,6954}
temp	point	$tmp3899	 %read{6957,6957} %write{6956,6956}
temp	float	$tmp3900	 %read{6960,6960} %write{6959,6959}
temp	int	$tmp3901	 %read{6961,6961} %write{6960,6960}
temp	float	$tmp3902	 %read{6963,6963} %write{6962,6962}
temp	point	$tmp3903	 %read{6966,6966} %write{6965,6965}
temp	float	$tmp3904	 %read{6969,6969} %write{6968,6968}
temp	int	$tmp3905	 %read{6970,6970} %write{6969,6969}
temp	int	$tmp3906	 %read{2147483647,-1} %write{6973,6973}
temp	int	$tmp3907	 %read{2147483647,-1} %write{6975,6975}
temp	int	$tmp3908	 %read{2147483647,-1} %write{6977,6977}
temp	float	$tmp3909	 %read{6981,6981} %write{6980,6980}
temp	int	$tmp3910	 %read{6984,6984} %write{6983,6983}
temp	float	$tmp3911	 %read{7160,7160} %write{7159,7159}
temp	float	$tmp3912	 %read{6991,6991} %write{6990,6990}
temp	float	$tmp3913	 %read{6990,6990} %write{6989,6989}
temp	float	$tmp3914	 %read{6994,6994} %write{6993,6993}
temp	float	$tmp3915	 %read{6993,6993} %write{6992,6992}
temp	float	$tmp3916	 %read{6997,6997} %write{6996,6996}
temp	float	$tmp3917	 %read{6996,6996} %write{6995,6995}
temp	int	$tmp3918	 %read{7005,7005} %write{7004,7004}
temp	int	$tmp3919	 %read{7002,7158} %write{7002,7158}
temp	int	$tmp3920	 %read{7009,7009} %write{7008,7008}
temp	int	$tmp3921	 %read{7006,7156} %write{7006,7156}
temp	int	$tmp3922	 %read{7013,7013} %write{7012,7012}
temp	int	$tmp3923	 %read{7010,7154} %write{7010,7154}
temp	float	$tmp3924	 %read{7017,7017} %write{7014,7014}
temp	float	$tmp3925	 %read{7017,7017} %write{7015,7015}
temp	float	$tmp3926	 %read{7017,7017} %write{7016,7016}
temp	color	$tmp3927	 %read{7031,7031} %write{7030,7030}
temp	point	$tmp3928	 %read{7024,7024} %write{7023,7023}
temp	float	$tmp3929	 %read{7023,7023} %write{7020,7020}
temp	float	$tmp3930	 %read{7023,7023} %write{7021,7021}
temp	float	$tmp3931	 %read{7023,7023} %write{7022,7022}
temp	point	$tmp3932	 %read{7029,7029} %write{7028,7028}
temp	float	$tmp3933	 %read{7028,7028} %write{7025,7025}
temp	float	$tmp3934	 %read{7028,7028} %write{7026,7026}
temp	float	$tmp3935	 %read{7028,7028} %write{7027,7027}
temp	point	$tmp3936	 %read{7033,7033} %write{7032,7032}
temp	int	$tmp3937	 %read{7036,7036} %write{7035,7035}
temp	int	$tmp3938	 %read{7040,7040} %write{7039,7039}
temp	int	$tmp3939	 %read{7044,7044} %write{7043,7043}
temp	float	$tmp3940	 %read{7049,7049} %write{7046,7046}
temp	float	$tmp3941	 %read{7046,7046} %write{7045,7045}
temp	float	$tmp3942	 %read{7049,7049} %write{7048,7048}
temp	float	$tmp3943	 %read{7048,7048} %write{7047,7047}
temp	float	$tmp3944	 %read{7052,7052} %write{7049,7049}
temp	float	$tmp3945	 %read{7052,7052} %write{7051,7051}
temp	float	$tmp3946	 %read{7051,7051} %write{7050,7050}
temp	int	$tmp3947	 %read{7055,7055} %write{7054,7054}
temp	float	$tmp3948	 %read{7063,7063} %write{7057,7057}
temp	float	$tmp3949	 %read{7057,7057} %write{7056,7056}
temp	float	$tmp3950	 %read{7063,7063} %write{7062,7062}
temp	float	$tmp3951	 %read{7062,7062} %write{7059,7059}
temp	float	$tmp3952	 %read{7059,7059} %write{7058,7058}
temp	float	$tmp3953	 %read{7062,7062} %write{7061,7061}
temp	float	$tmp3954	 %read{7061,7061} %write{7060,7060}
temp	int	$tmp3955	 %read{7066,7066} %write{7065,7065}
temp	float	$tmp3956	 %read{7073,7073} %write{7069,7069}
temp	float	$tmp3957	 %read{7069,7069} %write{7068,7068}
temp	float	$tmp3958	 %read{7068,7068} %write{7067,7067}
temp	float	$tmp3959	 %read{7073,7073} %write{7072,7072}
temp	float	$tmp3960	 %read{7072,7072} %write{7071,7071}
temp	float	$tmp3961	 %read{7071,7071} %write{7070,7070}
temp	float	$tmp3962	 %read{7077,7077} %write{7073,7073}
temp	float	$tmp3963	 %read{7077,7077} %write{7076,7076}
temp	float	$tmp3964	 %read{7076,7076} %write{7075,7075}
temp	float	$tmp3965	 %read{7075,7075} %write{7074,7074}
temp	int	$tmp3966	 %read{7080,7080} %write{7079,7079}
temp	float	$tmp3967	 %read{7085,7085} %write{7084,7084}
temp	float	$tmp3968	 %read{7084,7084} %write{7083,7083}
temp	vector	$tmp3969	 %read{7083,7083} %write{7081,7081}
temp	vector	$tmp3970	 %read{7083,7083} %write{7082,7082}
temp	int	$tmp3971	 %read{7088,7088} %write{7087,7087}
temp	float	$tmp3972	 %read{7095,7095} %write{7091,7091}
temp	float	$tmp3973	 %read{7091,7091} %write{7090,7090}
temp	float	$tmp3974	 %read{7090,7090} %write{7089,7089}
temp	float	$tmp3975	 %read{7095,7095} %write{7094,7094}
temp	float	$tmp3976	 %read{7094,7094} %write{7093,7093}
temp	float	$tmp3977	 %read{7093,7093} %write{7092,7092}
temp	float	$tmp3978	 %read{7099,7099} %write{7095,7095}
temp	float	$tmp3979	 %read{7099,7099} %write{7098,7098}
temp	float	$tmp3980	 %read{7098,7098} %write{7097,7097}
temp	float	$tmp3981	 %read{7097,7097} %write{7096,7096}
temp	float	$tmp3982	 %read{7101,7101} %write{7099,7099}
temp	float	$tmp3983	 %read{7101,7101} %write{7100,7100}
temp	point	$tmp3984	 %read{7108,7108} %write{7107,7107}
temp	float	$tmp3985	 %read{7107,7107} %write{7104,7104}
temp	float	$tmp3986	 %read{7107,7107} %write{7105,7105}
temp	float	$tmp3987	 %read{7107,7107} %write{7106,7106}
temp	float	$tmp3988	 %read{7110,7110} %write{7109,7109}
temp	int	$tmp3989	 %read{7111,7111} %write{7110,7110}
temp	float	$tmp3990	 %read{7113,7113} %write{7112,7112}
temp	float	$tmp3991	 %read{7115,7115} %write{7114,7114}
temp	float	$tmp3992	 %read{7117,7117} %write{7116,7116}
temp	point	$tmp3993	 %read{7120,7120} %write{7119,7119}
temp	point	$tmp3994	 %read{7122,7122} %write{7121,7121}
temp	point	$tmp3995	 %read{7124,7124} %write{7123,7123}
temp	float	$tmp3996	 %read{7127,7127} %write{7126,7126}
temp	int	$tmp3997	 %read{7128,7128} %write{7127,7127}
temp	float	$tmp3998	 %read{7130,7130} %write{7129,7129}
temp	float	$tmp3999	 %read{7132,7132} %write{7131,7131}
temp	point	$tmp4000	 %read{7135,7135} %write{7134,7134}
temp	point	$tmp4001	 %read{7137,7137} %write{7136,7136}
temp	float	$tmp4002	 %read{7140,7140} %write{7139,7139}
temp	int	$tmp4003	 %read{7141,7141} %write{7140,7140}
temp	float	$tmp4004	 %read{7143,7143} %write{7142,7142}
temp	point	$tmp4005	 %read{7146,7146} %write{7145,7145}
temp	float	$tmp4006	 %read{7149,7149} %write{7148,7148}
temp	int	$tmp4007	 %read{7150,7150} %write{7149,7149}
temp	int	$tmp4008	 %read{2147483647,-1} %write{7153,7153}
temp	int	$tmp4009	 %read{2147483647,-1} %write{7155,7155}
temp	int	$tmp4010	 %read{2147483647,-1} %write{7157,7157}
temp	float	$tmp4011	 %read{7161,7161} %write{7160,7160}
temp	int	$tmp4012	 %read{7164,7164} %write{7163,7163}
temp	float	$tmp4013	 %read{7340,7340} %write{7339,7339}
temp	float	$tmp4014	 %read{7171,7171} %write{7170,7170}
temp	float	$tmp4015	 %read{7170,7170} %write{7169,7169}
temp	float	$tmp4016	 %read{7174,7174} %write{7173,7173}
temp	float	$tmp4017	 %read{7173,7173} %write{7172,7172}
temp	float	$tmp4018	 %read{7177,7177} %write{7176,7176}
temp	float	$tmp4019	 %read{7176,7176} %write{7175,7175}
temp	int	$tmp4020	 %read{7185,7185} %write{7184,7184}
temp	int	$tmp4021	 %read{7182,7338} %write{7182,7338}
temp	int	$tmp4022	 %read{7189,7189} %write{7188,7188}
temp	int	$tmp4023	 %read{7186,7336} %write{7186,7336}
temp	int	$tmp4024	 %read{7193,7193} %write{7192,7192}
temp	int	$tmp4025	 %read{7190,7334} %write{7190,7334}
temp	float	$tmp4026	 %read{7197,7197} %write{7194,7194}
temp	float	$tmp4027	 %read{7197,7197} %write{7195,7195}
temp	float	$tmp4028	 %read{7197,7197} %write{7196,7196}
temp	color	$tmp4029	 %read{7211,7211} %write{7210,7210}
temp	point	$tmp4030	 %read{7204,7204} %write{7203,7203}
temp	float	$tmp4031	 %read{7203,7203} %write{7200,7200}
temp	float	$tmp4032	 %read{7203,7203} %write{7201,7201}
temp	float	$tmp4033	 %read{7203,7203} %write{7202,7202}
temp	point	$tmp4034	 %read{7209,7209} %write{7208,7208}
temp	float	$tmp4035	 %read{7208,7208} %write{7205,7205}
temp	float	$tmp4036	 %read{7208,7208} %write{7206,7206}
temp	float	$tmp4037	 %read{7208,7208} %write{7207,7207}
temp	point	$tmp4038	 %read{7213,7213} %write{7212,7212}
temp	int	$tmp4039	 %read{7216,7216} %write{7215,7215}
temp	int	$tmp4040	 %read{7220,7220} %write{7219,7219}
temp	int	$tmp4041	 %read{7224,7224} %write{7223,7223}
temp	float	$tmp4042	 %read{7229,7229} %write{7226,7226}
temp	float	$tmp4043	 %read{7226,7226} %write{7225,7225}
temp	float	$tmp4044	 %read{7229,7229} %write{7228,7228}
temp	float	$tmp4045	 %read{7228,7228} %write{7227,7227}
temp	float	$tmp4046	 %read{7232,7232} %write{7229,7229}
temp	float	$tmp4047	 %read{7232,7232} %write{7231,7231}
temp	float	$tmp4048	 %read{7231,7231} %write{7230,7230}
temp	int	$tmp4049	 %read{7235,7235} %write{7234,7234}
temp	float	$tmp4050	 %read{7243,7243} %write{7237,7237}
temp	float	$tmp4051	 %read{7237,7237} %write{7236,7236}
temp	float	$tmp4052	 %read{7243,7243} %write{7242,7242}
temp	float	$tmp4053	 %read{7242,7242} %write{7239,7239}
temp	float	$tmp4054	 %read{7239,7239} %write{7238,7238}
temp	float	$tmp4055	 %read{7242,7242} %write{7241,7241}
temp	float	$tmp4056	 %read{7241,7241} %write{7240,7240}
temp	int	$tmp4057	 %read{7246,7246} %write{7245,7245}
temp	float	$tmp4058	 %read{7253,7253} %write{7249,7249}
temp	float	$tmp4059	 %read{7249,7249} %write{7248,7248}
temp	float	$tmp4060	 %read{7248,7248} %write{7247,7247}
temp	float	$tmp4061	 %read{7253,7253} %write{7252,7252}
temp	float	$tmp4062	 %read{7252,7252} %write{7251,7251}
temp	float	$tmp4063	 %read{7251,7251} %write{7250,7250}
temp	float	$tmp4064	 %read{7257,7257} %write{7253,7253}
temp	float	$tmp4065	 %read{7257,7257} %write{7256,7256}
temp	float	$tmp4066	 %read{7256,7256} %write{7255,7255}
temp	float	$tmp4067	 %read{7255,7255} %write{7254,7254}
temp	int	$tmp4068	 %read{7260,7260} %write{7259,7259}
temp	float	$tmp4069	 %read{7265,7265} %write{7264,7264}
temp	float	$tmp4070	 %read{7264,7264} %write{7263,7263}
temp	vector	$tmp4071	 %read{7263,7263} %write{7261,7261}
temp	vector	$tmp4072	 %read{7263,7263} %write{7262,7262}
temp	int	$tmp4073	 %read{7268,7268} %write{7267,7267}
temp	float	$tmp4074	 %read{7275,7275} %write{7271,7271}
temp	float	$tmp4075	 %read{7271,7271} %write{7270,7270}
temp	float	$tmp4076	 %read{7270,7270} %write{7269,7269}
temp	float	$tmp4077	 %read{7275,7275} %write{7274,7274}
temp	float	$tmp4078	 %read{7274,7274} %write{7273,7273}
temp	float	$tmp4079	 %read{7273,7273} %write{7272,7272}
temp	float	$tmp4080	 %read{7279,7279} %write{7275,7275}
temp	float	$tmp4081	 %read{7279,7279} %write{7278,7278}
temp	float	$tmp4082	 %read{7278,7278} %write{7277,7277}
temp	float	$tmp4083	 %read{7277,7277} %write{7276,7276}
temp	float	$tmp4084	 %read{7281,7281} %write{7279,7279}
temp	float	$tmp4085	 %read{7281,7281} %write{7280,7280}
temp	point	$tmp4086	 %read{7288,7288} %write{7287,7287}
temp	float	$tmp4087	 %read{7287,7287} %write{7284,7284}
temp	float	$tmp4088	 %read{7287,7287} %write{7285,7285}
temp	float	$tmp4089	 %read{7287,7287} %write{7286,7286}
temp	float	$tmp4090	 %read{7290,7290} %write{7289,7289}
temp	int	$tmp4091	 %read{7291,7291} %write{7290,7290}
temp	float	$tmp4092	 %read{7293,7293} %write{7292,7292}
temp	float	$tmp4093	 %read{7295,7295} %write{7294,7294}
temp	float	$tmp4094	 %read{7297,7297} %write{7296,7296}
temp	point	$tmp4095	 %read{7300,7300} %write{7299,7299}
temp	point	$tmp4096	 %read{7302,7302} %write{7301,7301}
temp	point	$tmp4097	 %read{7304,7304} %write{7303,7303}
temp	float	$tmp4098	 %read{7307,7307} %write{7306,7306}
temp	int	$tmp4099	 %read{7308,7308} %write{7307,7307}
temp	float	$tmp4100	 %read{7310,7310} %write{7309,7309}
temp	float	$tmp4101	 %read{7312,7312} %write{7311,7311}
temp	point	$tmp4102	 %read{7315,7315} %write{7314,7314}
temp	point	$tmp4103	 %read{7317,7317} %write{7316,7316}
temp	float	$tmp4104	 %read{7320,7320} %write{7319,7319}
temp	int	$tmp4105	 %read{7321,7321} %write{7320,7320}
temp	float	$tmp4106	 %read{7323,7323} %write{7322,7322}
temp	point	$tmp4107	 %read{7326,7326} %write{7325,7325}
temp	float	$tmp4108	 %read{7329,7329} %write{7328,7328}
temp	int	$tmp4109	 %read{7330,7330} %write{7329,7329}
temp	int	$tmp4110	 %read{2147483647,-1} %write{7333,7333}
temp	int	$tmp4111	 %read{2147483647,-1} %write{7335,7335}
temp	int	$tmp4112	 %read{2147483647,-1} %write{7337,7337}
temp	float	$tmp4113	 %read{7341,7341} %write{7340,7340}
temp	int	$tmp4114	 %read{7344,7344} %write{7343,7343}
temp	float	$tmp4115	 %read{7520,7520} %write{7519,7519}
temp	float	$tmp4116	 %read{7351,7351} %write{7350,7350}
temp	float	$tmp4117	 %read{7350,7350} %write{7349,7349}
temp	float	$tmp4118	 %read{7354,7354} %write{7353,7353}
temp	float	$tmp4119	 %read{7353,7353} %write{7352,7352}
temp	float	$tmp4120	 %read{7357,7357} %write{7356,7356}
temp	float	$tmp4121	 %read{7356,7356} %write{7355,7355}
temp	int	$tmp4122	 %read{7365,7365} %write{7364,7364}
temp	int	$tmp4123	 %read{7362,7518} %write{7362,7518}
temp	int	$tmp4124	 %read{7369,7369} %write{7368,7368}
temp	int	$tmp4125	 %read{7366,7516} %write{7366,7516}
temp	int	$tmp4126	 %read{7373,7373} %write{7372,7372}
temp	int	$tmp4127	 %read{7370,7514} %write{7370,7514}
temp	float	$tmp4128	 %read{7377,7377} %write{7374,7374}
temp	float	$tmp4129	 %read{7377,7377} %write{7375,7375}
temp	float	$tmp4130	 %read{7377,7377} %write{7376,7376}
temp	color	$tmp4131	 %read{7391,7391} %write{7390,7390}
temp	point	$tmp4132	 %read{7384,7384} %write{7383,7383}
temp	float	$tmp4133	 %read{7383,7383} %write{7380,7380}
temp	float	$tmp4134	 %read{7383,7383} %write{7381,7381}
temp	float	$tmp4135	 %read{7383,7383} %write{7382,7382}
temp	point	$tmp4136	 %read{7389,7389} %write{7388,7388}
temp	float	$tmp4137	 %read{7388,7388} %write{7385,7385}
temp	float	$tmp4138	 %read{7388,7388} %write{7386,7386}
temp	float	$tmp4139	 %read{7388,7388} %write{7387,7387}
temp	point	$tmp4140	 %read{7393,7393} %write{7392,7392}
temp	int	$tmp4141	 %read{7396,7396} %write{7395,7395}
temp	int	$tmp4142	 %read{7400,7400} %write{7399,7399}
temp	int	$tmp4143	 %read{7404,7404} %write{7403,7403}
temp	float	$tmp4144	 %read{7409,7409} %write{7406,7406}
temp	float	$tmp4145	 %read{7406,7406} %write{7405,7405}
temp	float	$tmp4146	 %read{7409,7409} %write{7408,7408}
temp	float	$tmp4147	 %read{7408,7408} %write{7407,7407}
temp	float	$tmp4148	 %read{7412,7412} %write{7409,7409}
temp	float	$tmp4149	 %read{7412,7412} %write{7411,7411}
temp	float	$tmp4150	 %read{7411,7411} %write{7410,7410}
temp	int	$tmp4151	 %read{7415,7415} %write{7414,7414}
temp	float	$tmp4152	 %read{7423,7423} %write{7417,7417}
temp	float	$tmp4153	 %read{7417,7417} %write{7416,7416}
temp	float	$tmp4154	 %read{7423,7423} %write{7422,7422}
temp	float	$tmp4155	 %read{7422,7422} %write{7419,7419}
temp	float	$tmp4156	 %read{7419,7419} %write{7418,7418}
temp	float	$tmp4157	 %read{7422,7422} %write{7421,7421}
temp	float	$tmp4158	 %read{7421,7421} %write{7420,7420}
temp	int	$tmp4159	 %read{7426,7426} %write{7425,7425}
temp	float	$tmp4160	 %read{7433,7433} %write{7429,7429}
temp	float	$tmp4161	 %read{7429,7429} %write{7428,7428}
temp	float	$tmp4162	 %read{7428,7428} %write{7427,7427}
temp	float	$tmp4163	 %read{7433,7433} %write{7432,7432}
temp	float	$tmp4164	 %read{7432,7432} %write{7431,7431}
temp	float	$tmp4165	 %read{7431,7431} %write{7430,7430}
temp	float	$tmp4166	 %read{7437,7437} %write{7433,7433}
temp	float	$tmp4167	 %read{7437,7437} %write{7436,7436}
temp	float	$tmp4168	 %read{7436,7436} %write{7435,7435}
temp	float	$tmp4169	 %read{7435,7435} %write{7434,7434}
temp	int	$tmp4170	 %read{7440,7440} %write{7439,7439}
temp	float	$tmp4171	 %read{7445,7445} %write{7444,7444}
temp	float	$tmp4172	 %read{7444,7444} %write{7443,7443}
temp	vector	$tmp4173	 %read{7443,7443} %write{7441,7441}
temp	vector	$tmp4174	 %read{7443,7443} %write{7442,7442}
temp	int	$tmp4175	 %read{7448,7448} %write{7447,7447}
temp	float	$tmp4176	 %read{7455,7455} %write{7451,7451}
temp	float	$tmp4177	 %read{7451,7451} %write{7450,7450}
temp	float	$tmp4178	 %read{7450,7450} %write{7449,7449}
temp	float	$tmp4179	 %read{7455,7455} %write{7454,7454}
temp	float	$tmp4180	 %read{7454,7454} %write{7453,7453}
temp	float	$tmp4181	 %read{7453,7453} %write{7452,7452}
temp	float	$tmp4182	 %read{7459,7459} %write{7455,7455}
temp	float	$tmp4183	 %read{7459,7459} %write{7458,7458}
temp	float	$tmp4184	 %read{7458,7458} %write{7457,7457}
temp	float	$tmp4185	 %read{7457,7457} %write{7456,7456}
temp	float	$tmp4186	 %read{7461,7461} %write{7459,7459}
temp	float	$tmp4187	 %read{7461,7461} %write{7460,7460}
temp	point	$tmp4188	 %read{7468,7468} %write{7467,7467}
temp	float	$tmp4189	 %read{7467,7467} %write{7464,7464}
temp	float	$tmp4190	 %read{7467,7467} %write{7465,7465}
temp	float	$tmp4191	 %read{7467,7467} %write{7466,7466}
temp	float	$tmp4192	 %read{7470,7470} %write{7469,7469}
temp	int	$tmp4193	 %read{7471,7471} %write{7470,7470}
temp	float	$tmp4194	 %read{7473,7473} %write{7472,7472}
temp	float	$tmp4195	 %read{7475,7475} %write{7474,7474}
temp	float	$tmp4196	 %read{7477,7477} %write{7476,7476}
temp	point	$tmp4197	 %read{7480,7480} %write{7479,7479}
temp	point	$tmp4198	 %read{7482,7482} %write{7481,7481}
temp	point	$tmp4199	 %read{7484,7484} %write{7483,7483}
temp	float	$tmp4200	 %read{7487,7487} %write{7486,7486}
temp	int	$tmp4201	 %read{7488,7488} %write{7487,7487}
temp	float	$tmp4202	 %read{7490,7490} %write{7489,7489}
temp	float	$tmp4203	 %read{7492,7492} %write{7491,7491}
temp	point	$tmp4204	 %read{7495,7495} %write{7494,7494}
temp	point	$tmp4205	 %read{7497,7497} %write{7496,7496}
temp	float	$tmp4206	 %read{7500,7500} %write{7499,7499}
temp	int	$tmp4207	 %read{7501,7501} %write{7500,7500}
temp	float	$tmp4208	 %read{7503,7503} %write{7502,7502}
temp	point	$tmp4209	 %read{7506,7506} %write{7505,7505}
temp	float	$tmp4210	 %read{7509,7509} %write{7508,7508}
temp	int	$tmp4211	 %read{7510,7510} %write{7509,7509}
temp	int	$tmp4212	 %read{2147483647,-1} %write{7513,7513}
temp	int	$tmp4213	 %read{2147483647,-1} %write{7515,7515}
temp	int	$tmp4214	 %read{2147483647,-1} %write{7517,7517}
temp	float	$tmp4215	 %read{7521,7521} %write{7520,7520}
temp	int	$tmp4216	 %read{7524,7524} %write{7523,7523}
temp	float	$tmp4217	 %read{7702,7702} %write{7701,7701}
temp	float	$tmp4218	 %read{7531,7531} %write{7530,7530}
temp	float	$tmp4219	 %read{7530,7530} %write{7529,7529}
temp	float	$tmp4220	 %read{7534,7534} %write{7533,7533}
temp	float	$tmp4221	 %read{7533,7533} %write{7532,7532}
temp	float	$tmp4222	 %read{7537,7537} %write{7536,7536}
temp	float	$tmp4223	 %read{7536,7536} %write{7535,7535}
temp	int	$tmp4224	 %read{7545,7545} %write{7544,7544}
temp	int	$tmp4225	 %read{7542,7698} %write{7542,7698}
temp	int	$tmp4226	 %read{7549,7549} %write{7548,7548}
temp	int	$tmp4227	 %read{7546,7696} %write{7546,7696}
temp	int	$tmp4228	 %read{7553,7553} %write{7552,7552}
temp	int	$tmp4229	 %read{7550,7694} %write{7550,7694}
temp	float	$tmp4230	 %read{7557,7557} %write{7554,7554}
temp	float	$tmp4231	 %read{7557,7557} %write{7555,7555}
temp	float	$tmp4232	 %read{7557,7557} %write{7556,7556}
temp	color	$tmp4233	 %read{7571,7571} %write{7570,7570}
temp	point	$tmp4234	 %read{7564,7564} %write{7563,7563}
temp	float	$tmp4235	 %read{7563,7563} %write{7560,7560}
temp	float	$tmp4236	 %read{7563,7563} %write{7561,7561}
temp	float	$tmp4237	 %read{7563,7563} %write{7562,7562}
temp	point	$tmp4238	 %read{7569,7569} %write{7568,7568}
temp	float	$tmp4239	 %read{7568,7568} %write{7565,7565}
temp	float	$tmp4240	 %read{7568,7568} %write{7566,7566}
temp	float	$tmp4241	 %read{7568,7568} %write{7567,7567}
temp	point	$tmp4242	 %read{7573,7573} %write{7572,7572}
temp	int	$tmp4243	 %read{7576,7576} %write{7575,7575}
temp	int	$tmp4244	 %read{7580,7580} %write{7579,7579}
temp	int	$tmp4245	 %read{7584,7584} %write{7583,7583}
temp	float	$tmp4246	 %read{7589,7589} %write{7586,7586}
temp	float	$tmp4247	 %read{7586,7586} %write{7585,7585}
temp	float	$tmp4248	 %read{7589,7589} %write{7588,7588}
temp	float	$tmp4249	 %read{7588,7588} %write{7587,7587}
temp	float	$tmp4250	 %read{7592,7592} %write{7589,7589}
temp	float	$tmp4251	 %read{7592,7592} %write{7591,7591}
temp	float	$tmp4252	 %read{7591,7591} %write{7590,7590}
temp	int	$tmp4253	 %read{7595,7595} %write{7594,7594}
temp	float	$tmp4254	 %read{7603,7603} %write{7597,7597}
temp	float	$tmp4255	 %read{7597,7597} %write{7596,7596}
temp	float	$tmp4256	 %read{7603,7603} %write{7602,7602}
temp	float	$tmp4257	 %read{7602,7602} %write{7599,7599}
temp	float	$tmp4258	 %read{7599,7599} %write{7598,7598}
temp	float	$tmp4259	 %read{7602,7602} %write{7601,7601}
temp	float	$tmp4260	 %read{7601,7601} %write{7600,7600}
temp	int	$tmp4261	 %read{7606,7606} %write{7605,7605}
temp	float	$tmp4262	 %read{7613,7613} %write{7609,7609}
temp	float	$tmp4263	 %read{7609,7609} %write{7608,7608}
temp	float	$tmp4264	 %read{7608,7608} %write{7607,7607}
temp	float	$tmp4265	 %read{7613,7613} %write{7612,7612}
temp	float	$tmp4266	 %read{7612,7612} %write{7611,7611}
temp	float	$tmp4267	 %read{7611,7611} %write{7610,7610}
temp	float	$tmp4268	 %read{7617,7617} %write{7613,7613}
temp	float	$tmp4269	 %read{7617,7617} %write{7616,7616}
temp	float	$tmp4270	 %read{7616,7616} %write{7615,7615}
temp	float	$tmp4271	 %read{7615,7615} %write{7614,7614}
temp	int	$tmp4272	 %read{7620,7620} %write{7619,7619}
temp	float	$tmp4273	 %read{7625,7625} %write{7624,7624}
temp	float	$tmp4274	 %read{7624,7624} %write{7623,7623}
temp	vector	$tmp4275	 %read{7623,7623} %write{7621,7621}
temp	vector	$tmp4276	 %read{7623,7623} %write{7622,7622}
temp	int	$tmp4277	 %read{7628,7628} %write{7627,7627}
temp	float	$tmp4278	 %read{7635,7635} %write{7631,7631}
temp	float	$tmp4279	 %read{7631,7631} %write{7630,7630}
temp	float	$tmp4280	 %read{7630,7630} %write{7629,7629}
temp	float	$tmp4281	 %read{7635,7635} %write{7634,7634}
temp	float	$tmp4282	 %read{7634,7634} %write{7633,7633}
temp	float	$tmp4283	 %read{7633,7633} %write{7632,7632}
temp	float	$tmp4284	 %read{7639,7639} %write{7635,7635}
temp	float	$tmp4285	 %read{7639,7639} %write{7638,7638}
temp	float	$tmp4286	 %read{7638,7638} %write{7637,7637}
temp	float	$tmp4287	 %read{7637,7637} %write{7636,7636}
temp	float	$tmp4288	 %read{7641,7641} %write{7639,7639}
temp	float	$tmp4289	 %read{7641,7641} %write{7640,7640}
temp	point	$tmp4290	 %read{7648,7648} %write{7647,7647}
temp	float	$tmp4291	 %read{7647,7647} %write{7644,7644}
temp	float	$tmp4292	 %read{7647,7647} %write{7645,7645}
temp	float	$tmp4293	 %read{7647,7647} %write{7646,7646}
temp	float	$tmp4294	 %read{7650,7650} %write{7649,7649}
temp	int	$tmp4295	 %read{7651,7651} %write{7650,7650}
temp	float	$tmp4296	 %read{7653,7653} %write{7652,7652}
temp	float	$tmp4297	 %read{7655,7655} %write{7654,7654}
temp	float	$tmp4298	 %read{7657,7657} %write{7656,7656}
temp	point	$tmp4299	 %read{7660,7660} %write{7659,7659}
temp	point	$tmp4300	 %read{7662,7662} %write{7661,7661}
temp	point	$tmp4301	 %read{7664,7664} %write{7663,7663}
temp	float	$tmp4302	 %read{7667,7667} %write{7666,7666}
temp	int	$tmp4303	 %read{7668,7668} %write{7667,7667}
temp	float	$tmp4304	 %read{7670,7670} %write{7669,7669}
temp	float	$tmp4305	 %read{7672,7672} %write{7671,7671}
temp	point	$tmp4306	 %read{7675,7675} %write{7674,7674}
temp	point	$tmp4307	 %read{7677,7677} %write{7676,7676}
temp	float	$tmp4308	 %read{7680,7680} %write{7679,7679}
temp	int	$tmp4309	 %read{7681,7681} %write{7680,7680}
temp	float	$tmp4310	 %read{7683,7683} %write{7682,7682}
temp	point	$tmp4311	 %read{7686,7686} %write{7685,7685}
temp	float	$tmp4312	 %read{7689,7689} %write{7688,7688}
temp	int	$tmp4313	 %read{7690,7690} %write{7689,7689}
temp	int	$tmp4314	 %read{2147483647,-1} %write{7693,7693}
temp	int	$tmp4315	 %read{2147483647,-1} %write{7695,7695}
temp	int	$tmp4316	 %read{2147483647,-1} %write{7697,7697}
temp	float	$tmp4317	 %read{7701,7701} %write{7699,7699}
temp	float	$tmp4318	 %read{7701,7701} %write{7700,7700}
temp	float	$tmp4319	 %read{7703,7703} %write{7702,7702}
temp	int	$tmp4320	 %read{7706,7706} %write{7705,7705}
temp	float	$tmp4321	 %read{7891,7891} %write{7888,7889}
temp	float	$tmp4322	 %read{7885,7885} %write{7884,7884}
temp	float	$tmp4323	 %read{7714,7714} %write{7713,7713}
temp	float	$tmp4324	 %read{7713,7713} %write{7712,7712}
temp	float	$tmp4325	 %read{7717,7717} %write{7716,7716}
temp	float	$tmp4326	 %read{7716,7716} %write{7715,7715}
temp	float	$tmp4327	 %read{7720,7720} %write{7719,7719}
temp	float	$tmp4328	 %read{7719,7719} %write{7718,7718}
temp	int	$tmp4329	 %read{7728,7728} %write{7727,7727}
temp	int	$tmp4330	 %read{7725,7881} %write{7725,7881}
temp	int	$tmp4331	 %read{7732,7732} %write{7731,7731}
temp	int	$tmp4332	 %read{7729,7879} %write{7729,7879}
temp	int	$tmp4333	 %read{7736,7736} %write{7735,7735}
temp	int	$tmp4334	 %read{7733,7877} %write{7733,7877}
temp	float	$tmp4335	 %read{7740,7740} %write{7737,7737}
temp	float	$tmp4336	 %read{7740,7740} %write{7738,7738}
temp	float	$tmp4337	 %read{7740,7740} %write{7739,7739}
temp	color	$tmp4338	 %read{7754,7754} %write{7753,7753}
temp	point	$tmp4339	 %read{7747,7747} %write{7746,7746}
temp	float	$tmp4340	 %read{7746,7746} %write{7743,7743}
temp	float	$tmp4341	 %read{7746,7746} %write{7744,7744}
temp	float	$tmp4342	 %read{7746,7746} %write{7745,7745}
temp	point	$tmp4343	 %read{7752,7752} %write{7751,7751}
temp	float	$tmp4344	 %read{7751,7751} %write{7748,7748}
temp	float	$tmp4345	 %read{7751,7751} %write{7749,7749}
temp	float	$tmp4346	 %read{7751,7751} %write{7750,7750}
temp	point	$tmp4347	 %read{7756,7756} %write{7755,7755}
temp	int	$tmp4348	 %read{7759,7759} %write{7758,7758}
temp	int	$tmp4349	 %read{7763,7763} %write{7762,7762}
temp	int	$tmp4350	 %read{7767,7767} %write{7766,7766}
temp	float	$tmp4351	 %read{7772,7772} %write{7769,7769}
temp	float	$tmp4352	 %read{7769,7769} %write{7768,7768}
temp	float	$tmp4353	 %read{7772,7772} %write{7771,7771}
temp	float	$tmp4354	 %read{7771,7771} %write{7770,7770}
temp	float	$tmp4355	 %read{7775,7775} %write{7772,7772}
temp	float	$tmp4356	 %read{7775,7775} %write{7774,7774}
temp	float	$tmp4357	 %read{7774,7774} %write{7773,7773}
temp	int	$tmp4358	 %read{7778,7778} %write{7777,7777}
temp	float	$tmp4359	 %read{7786,7786} %write{7780,7780}
temp	float	$tmp4360	 %read{7780,7780} %write{7779,7779}
temp	float	$tmp4361	 %read{7786,7786} %write{7785,7785}
temp	float	$tmp4362	 %read{7785,7785} %write{7782,7782}
temp	float	$tmp4363	 %read{7782,7782} %write{7781,7781}
temp	float	$tmp4364	 %read{7785,7785} %write{7784,7784}
temp	float	$tmp4365	 %read{7784,7784} %write{7783,7783}
temp	int	$tmp4366	 %read{7789,7789} %write{7788,7788}
temp	float	$tmp4367	 %read{7796,7796} %write{7792,7792}
temp	float	$tmp4368	 %read{7792,7792} %write{7791,7791}
temp	float	$tmp4369	 %read{7791,7791} %write{7790,7790}
temp	float	$tmp4370	 %read{7796,7796} %write{7795,7795}
temp	float	$tmp4371	 %read{7795,7795} %write{7794,7794}
temp	float	$tmp4372	 %read{7794,7794} %write{7793,7793}
temp	float	$tmp4373	 %read{7800,7800} %write{7796,7796}
temp	float	$tmp4374	 %read{7800,7800} %write{7799,7799}
temp	float	$tmp4375	 %read{7799,7799} %write{7798,7798}
temp	float	$tmp4376	 %read{7798,7798} %write{7797,7797}
temp	int	$tmp4377	 %read{7803,7803} %write{7802,7802}
temp	float	$tmp4378	 %read{7808,7808} %write{7807,7807}
temp	float	$tmp4379	 %read{7807,7807} %write{7806,7806}
temp	vector	$tmp4380	 %read{7806,7806} %write{7804,7804}
temp	vector	$tmp4381	 %read{7806,7806} %write{7805,7805}
temp	int	$tmp4382	 %read{7811,7811} %write{7810,7810}
temp	float	$tmp4383	 %read{7818,7818} %write{7814,7814}
temp	float	$tmp4384	 %read{7814,7814} %write{7813,7813}
temp	float	$tmp4385	 %read{7813,7813} %write{7812,7812}
temp	float	$tmp4386	 %read{7818,7818} %write{7817,7817}
temp	float	$tmp4387	 %read{7817,7817} %write{7816,7816}
temp	float	$tmp4388	 %read{7816,7816} %write{7815,7815}
temp	float	$tmp4389	 %read{7822,7822} %write{7818,7818}
temp	float	$tmp4390	 %read{7822,7822} %write{7821,7821}
temp	float	$tmp4391	 %read{7821,7821} %write{7820,7820}
temp	float	$tmp4392	 %read{7820,7820} %write{7819,7819}
temp	float	$tmp4393	 %read{7824,7824} %write{7822,7822}
temp	float	$tmp4394	 %read{7824,7824} %write{7823,7823}
temp	point	$tmp4395	 %read{7831,7831} %write{7830,7830}
temp	float	$tmp4396	 %read{7830,7830} %write{7827,7827}
temp	float	$tmp4397	 %read{7830,7830} %write{7828,7828}
temp	float	$tmp4398	 %read{7830,7830} %write{7829,7829}
temp	float	$tmp4399	 %read{7833,7833} %write{7832,7832}
temp	int	$tmp4400	 %read{7834,7834} %write{7833,7833}
temp	float	$tmp4401	 %read{7836,7836} %write{7835,7835}
temp	float	$tmp4402	 %read{7838,7838} %write{7837,7837}
temp	float	$tmp4403	 %read{7840,7840} %write{7839,7839}
temp	point	$tmp4404	 %read{7843,7843} %write{7842,7842}
temp	point	$tmp4405	 %read{7845,7845} %write{7844,7844}
temp	point	$tmp4406	 %read{7847,7847} %write{7846,7846}
temp	float	$tmp4407	 %read{7850,7850} %write{7849,7849}
temp	int	$tmp4408	 %read{7851,7851} %write{7850,7850}
temp	float	$tmp4409	 %read{7853,7853} %write{7852,7852}
temp	float	$tmp4410	 %read{7855,7855} %write{7854,7854}
temp	point	$tmp4411	 %read{7858,7858} %write{7857,7857}
temp	point	$tmp4412	 %read{7860,7860} %write{7859,7859}
temp	float	$tmp4413	 %read{7863,7863} %write{7862,7862}
temp	int	$tmp4414	 %read{7864,7864} %write{7863,7863}
temp	float	$tmp4415	 %read{7866,7866} %write{7865,7865}
temp	point	$tmp4416	 %read{7869,7869} %write{7868,7868}
temp	float	$tmp4417	 %read{7872,7872} %write{7871,7871}
temp	int	$tmp4418	 %read{7873,7873} %write{7872,7872}
temp	int	$tmp4419	 %read{2147483647,-1} %write{7876,7876}
temp	int	$tmp4420	 %read{2147483647,-1} %write{7878,7878}
temp	int	$tmp4421	 %read{2147483647,-1} %write{7880,7880}
temp	float	$tmp4422	 %read{7884,7884} %write{7882,7882}
temp	float	$tmp4423	 %read{7884,7884} %write{7883,7883}
temp	int	$tmp4424	 %read{7887,7887} %write{7886,7886}
temp	float	$tmp4425	 %read{7892,7892} %write{7891,7891}
temp	int	$tmp4426	 %read{7895,7895} %write{7894,7894}
temp	float	$tmp4427	 %read{7901,7901} %write{7900,7900}
temp	float	$tmp4428	 %read{7902,7902} %write{7901,7901}
temp	float	$tmp4429	 %read{7904,7904} %write{7903,7903}
temp	int	$tmp4430	 %read{7906,7906} %write{7905,7905}
temp	float	$tmp4431	 %read{7911,7911} %write{7906,7906}
temp	int	$tmp4432	 %read{7908,7908} %write{7907,7907}
temp	int	$tmp4433	 %read{7909,7909} %write{7908,7908}
temp	int	$tmp4434	 %read{7910,7910} %write{7909,7909}
temp	float	$tmp4435	 %read{7911,7911} %write{7910,7910}
temp	float	$tmp4436	 %read{7912,7912} %write{7911,7911}
temp	int	$tmp4437	 %read{7914,7914} %write{7913,7913}
temp	int	$tmp4438	 %read{7915,7915} %write{7914,7914}
temp	float	$tmp4439	 %read{7920,7920} %write{7915,7915}
temp	int	$tmp4440	 %read{7917,7917} %write{7916,7916}
temp	int	$tmp4441	 %read{7918,7918} %write{7917,7917}
temp	int	$tmp4442	 %read{7919,7919} %write{7918,7918}
temp	float	$tmp4443	 %read{7920,7920} %write{7919,7919}
temp	float	$tmp4444	 %read{7921,7921} %write{7920,7920}
temp	float	$tmp4445	 %read{7923,7923} %write{7922,7922}
temp	float	$tmp4446	 %read{7925,7925} %write{7923,7923}
temp	float	$tmp4447	 %read{7925,7925} %write{7924,7924}
temp	int	$tmp4448	 %read{7928,7928} %write{7927,7927}
temp	float	$tmp4449	 %read{7933,7933} %write{7928,7928}
temp	int	$tmp4450	 %read{7930,7930} %write{7929,7929}
temp	int	$tmp4451	 %read{7931,7931} %write{7930,7930}
temp	int	$tmp4452	 %read{7932,7932} %write{7931,7931}
temp	float	$tmp4453	 %read{7933,7933} %write{7932,7932}
temp	float	$tmp4454	 %read{7934,7934} %write{7933,7933}
temp	float	$tmp4455	 %read{10230,10230} %write{10218,10228}
temp	point	$tmp4456	 %read{7949,9079} %write{7940,9074}
temp	float	$tmp4457	 %read{7940,7940} %write{7937,7937}
temp	float	$tmp4458	 %read{7940,7940} %write{7938,7938}
temp	float	$tmp4459	 %read{7940,7940} %write{7939,7939}
temp	float	$tmp4460	 %read{7947,7947} %write{7946,7946}
temp	int	$tmp4461	 %read{7949,9074} %write{7949,9074}
temp	point	$tmp4462	 %read{7960,9062} %write{7952,9047}
temp	int	$tmp4463	 %read{7955,7955} %write{7954,7954}
temp	int	$tmp4464	 %read{7959,7959} %write{7958,7958}
temp	int	$tmp4465	 %read{7963,7963} %write{7962,7962}
temp	int	$tmp4466	 %read{7964,7964} %write{7963,7963}
temp	int	$tmp4467	 %read{7970,7970} %write{7969,7969}
temp	float	$tmp4468	 %read{8146,8146} %write{8145,8145}
temp	float	$tmp4469	 %read{7977,7977} %write{7976,7976}
temp	float	$tmp4470	 %read{7976,7976} %write{7975,7975}
temp	float	$tmp4471	 %read{7980,7980} %write{7979,7979}
temp	float	$tmp4472	 %read{7979,7979} %write{7978,7978}
temp	float	$tmp4473	 %read{7983,7983} %write{7982,7982}
temp	float	$tmp4474	 %read{7982,7982} %write{7981,7981}
temp	int	$tmp4475	 %read{7991,7991} %write{7990,7990}
temp	int	$tmp4476	 %read{7988,8144} %write{7988,8144}
temp	int	$tmp4477	 %read{7995,7995} %write{7994,7994}
temp	int	$tmp4478	 %read{7992,8142} %write{7992,8142}
temp	int	$tmp4479	 %read{7999,7999} %write{7998,7998}
temp	int	$tmp4480	 %read{7996,8140} %write{7996,8140}
temp	float	$tmp4481	 %read{8003,8003} %write{8000,8000}
temp	float	$tmp4482	 %read{8003,8003} %write{8001,8001}
temp	float	$tmp4483	 %read{8003,8003} %write{8002,8002}
temp	color	$tmp4484	 %read{8017,8017} %write{8016,8016}
temp	point	$tmp4485	 %read{8010,8010} %write{8009,8009}
temp	float	$tmp4486	 %read{8009,8009} %write{8006,8006}
temp	float	$tmp4487	 %read{8009,8009} %write{8007,8007}
temp	float	$tmp4488	 %read{8009,8009} %write{8008,8008}
temp	point	$tmp4489	 %read{8015,8015} %write{8014,8014}
temp	float	$tmp4490	 %read{8014,8014} %write{8011,8011}
temp	float	$tmp4491	 %read{8014,8014} %write{8012,8012}
temp	float	$tmp4492	 %read{8014,8014} %write{8013,8013}
temp	point	$tmp4493	 %read{8019,8019} %write{8018,8018}
temp	int	$tmp4494	 %read{8022,8022} %write{8021,8021}
temp	int	$tmp4495	 %read{8026,8026} %write{8025,8025}
temp	int	$tmp4496	 %read{8030,8030} %write{8029,8029}
temp	float	$tmp4497	 %read{8035,8035} %write{8032,8032}
temp	float	$tmp4498	 %read{8032,8032} %write{8031,8031}
temp	float	$tmp4499	 %read{8035,8035} %write{8034,8034}
temp	float	$tmp4500	 %read{8034,8034} %write{8033,8033}
temp	float	$tmp4501	 %read{8038,8038} %write{8035,8035}
temp	float	$tmp4502	 %read{8038,8038} %write{8037,8037}
temp	float	$tmp4503	 %read{8037,8037} %write{8036,8036}
temp	int	$tmp4504	 %read{8041,8041} %write{8040,8040}
temp	float	$tmp4505	 %read{8049,8049} %write{8043,8043}
temp	float	$tmp4506	 %read{8043,8043} %write{8042,8042}
temp	float	$tmp4507	 %read{8049,8049} %write{8048,8048}
temp	float	$tmp4508	 %read{8048,8048} %write{8045,8045}
temp	float	$tmp4509	 %read{8045,8045} %write{8044,8044}
temp	float	$tmp4510	 %read{8048,8048} %write{8047,8047}
temp	float	$tmp4511	 %read{8047,8047} %write{8046,8046}
temp	int	$tmp4512	 %read{8052,8052} %write{8051,8051}
temp	float	$tmp4513	 %read{8059,8059} %write{8055,8055}
temp	float	$tmp4514	 %read{8055,8055} %write{8054,8054}
temp	float	$tmp4515	 %read{8054,8054} %write{8053,8053}
temp	float	$tmp4516	 %read{8059,8059} %write{8058,8058}
temp	float	$tmp4517	 %read{8058,8058} %write{8057,8057}
temp	float	$tmp4518	 %read{8057,8057} %write{8056,8056}
temp	float	$tmp4519	 %read{8063,8063} %write{8059,8059}
temp	float	$tmp4520	 %read{8063,8063} %write{8062,8062}
temp	float	$tmp4521	 %read{8062,8062} %write{8061,8061}
temp	float	$tmp4522	 %read{8061,8061} %write{8060,8060}
temp	int	$tmp4523	 %read{8066,8066} %write{8065,8065}
temp	float	$tmp4524	 %read{8071,8071} %write{8070,8070}
temp	float	$tmp4525	 %read{8070,8070} %write{8069,8069}
temp	vector	$tmp4526	 %read{8069,8069} %write{8067,8067}
temp	vector	$tmp4527	 %read{8069,8069} %write{8068,8068}
temp	int	$tmp4528	 %read{8074,8074} %write{8073,8073}
temp	float	$tmp4529	 %read{8081,8081} %write{8077,8077}
temp	float	$tmp4530	 %read{8077,8077} %write{8076,8076}
temp	float	$tmp4531	 %read{8076,8076} %write{8075,8075}
temp	float	$tmp4532	 %read{8081,8081} %write{8080,8080}
temp	float	$tmp4533	 %read{8080,8080} %write{8079,8079}
temp	float	$tmp4534	 %read{8079,8079} %write{8078,8078}
temp	float	$tmp4535	 %read{8085,8085} %write{8081,8081}
temp	float	$tmp4536	 %read{8085,8085} %write{8084,8084}
temp	float	$tmp4537	 %read{8084,8084} %write{8083,8083}
temp	float	$tmp4538	 %read{8083,8083} %write{8082,8082}
temp	float	$tmp4539	 %read{8087,8087} %write{8085,8085}
temp	float	$tmp4540	 %read{8087,8087} %write{8086,8086}
temp	point	$tmp4541	 %read{8094,8094} %write{8093,8093}
temp	float	$tmp4542	 %read{8093,8093} %write{8090,8090}
temp	float	$tmp4543	 %read{8093,8093} %write{8091,8091}
temp	float	$tmp4544	 %read{8093,8093} %write{8092,8092}
temp	float	$tmp4545	 %read{8096,8096} %write{8095,8095}
temp	int	$tmp4546	 %read{8097,8097} %write{8096,8096}
temp	float	$tmp4547	 %read{8099,8099} %write{8098,8098}
temp	float	$tmp4548	 %read{8101,8101} %write{8100,8100}
temp	float	$tmp4549	 %read{8103,8103} %write{8102,8102}
temp	point	$tmp4550	 %read{8106,8106} %write{8105,8105}
temp	point	$tmp4551	 %read{8108,8108} %write{8107,8107}
temp	point	$tmp4552	 %read{8110,8110} %write{8109,8109}
temp	float	$tmp4553	 %read{8113,8113} %write{8112,8112}
temp	int	$tmp4554	 %read{8114,8114} %write{8113,8113}
temp	float	$tmp4555	 %read{8116,8116} %write{8115,8115}
temp	float	$tmp4556	 %read{8118,8118} %write{8117,8117}
temp	point	$tmp4557	 %read{8121,8121} %write{8120,8120}
temp	point	$tmp4558	 %read{8123,8123} %write{8122,8122}
temp	float	$tmp4559	 %read{8126,8126} %write{8125,8125}
temp	int	$tmp4560	 %read{8127,8127} %write{8126,8126}
temp	float	$tmp4561	 %read{8129,8129} %write{8128,8128}
temp	point	$tmp4562	 %read{8132,8132} %write{8131,8131}
temp	float	$tmp4563	 %read{8135,8135} %write{8134,8134}
temp	int	$tmp4564	 %read{8136,8136} %write{8135,8135}
temp	int	$tmp4565	 %read{2147483647,-1} %write{8139,8139}
temp	int	$tmp4566	 %read{2147483647,-1} %write{8141,8141}
temp	int	$tmp4567	 %read{2147483647,-1} %write{8143,8143}
temp	float	$tmp4568	 %read{8147,8147} %write{8146,8146}
temp	int	$tmp4569	 %read{8150,8150} %write{8149,8149}
temp	float	$tmp4570	 %read{8326,8326} %write{8325,8325}
temp	float	$tmp4571	 %read{8157,8157} %write{8156,8156}
temp	float	$tmp4572	 %read{8156,8156} %write{8155,8155}
temp	float	$tmp4573	 %read{8160,8160} %write{8159,8159}
temp	float	$tmp4574	 %read{8159,8159} %write{8158,8158}
temp	float	$tmp4575	 %read{8163,8163} %write{8162,8162}
temp	float	$tmp4576	 %read{8162,8162} %write{8161,8161}
temp	int	$tmp4577	 %read{8171,8171} %write{8170,8170}
temp	int	$tmp4578	 %read{8168,8324} %write{8168,8324}
temp	int	$tmp4579	 %read{8175,8175} %write{8174,8174}
temp	int	$tmp4580	 %read{8172,8322} %write{8172,8322}
temp	int	$tmp4581	 %read{8179,8179} %write{8178,8178}
temp	int	$tmp4582	 %read{8176,8320} %write{8176,8320}
temp	float	$tmp4583	 %read{8183,8183} %write{8180,8180}
temp	float	$tmp4584	 %read{8183,8183} %write{8181,8181}
temp	float	$tmp4585	 %read{8183,8183} %write{8182,8182}
temp	color	$tmp4586	 %read{8197,8197} %write{8196,8196}
temp	point	$tmp4587	 %read{8190,8190} %write{8189,8189}
temp	float	$tmp4588	 %read{8189,8189} %write{8186,8186}
temp	float	$tmp4589	 %read{8189,8189} %write{8187,8187}
temp	float	$tmp4590	 %read{8189,8189} %write{8188,8188}
temp	point	$tmp4591	 %read{8195,8195} %write{8194,8194}
temp	float	$tmp4592	 %read{8194,8194} %write{8191,8191}
temp	float	$tmp4593	 %read{8194,8194} %write{8192,8192}
temp	float	$tmp4594	 %read{8194,8194} %write{8193,8193}
temp	point	$tmp4595	 %read{8199,8199} %write{8198,8198}
temp	int	$tmp4596	 %read{8202,8202} %write{8201,8201}
temp	int	$tmp4597	 %read{8206,8206} %write{8205,8205}
temp	int	$tmp4598	 %read{8210,8210} %write{8209,8209}
temp	float	$tmp4599	 %read{8215,8215} %write{8212,8212}
temp	float	$tmp4600	 %read{8212,8212} %write{8211,8211}
temp	float	$tmp4601	 %read{8215,8215} %write{8214,8214}
temp	float	$tmp4602	 %read{8214,8214} %write{8213,8213}
temp	float	$tmp4603	 %read{8218,8218} %write{8215,8215}
temp	float	$tmp4604	 %read{8218,8218} %write{8217,8217}
temp	float	$tmp4605	 %read{8217,8217} %write{8216,8216}
temp	int	$tmp4606	 %read{8221,8221} %write{8220,8220}
temp	float	$tmp4607	 %read{8229,8229} %write{8223,8223}
temp	float	$tmp4608	 %read{8223,8223} %write{8222,8222}
temp	float	$tmp4609	 %read{8229,8229} %write{8228,8228}
temp	float	$tmp4610	 %read{8228,8228} %write{8225,8225}
temp	float	$tmp4611	 %read{8225,8225} %write{8224,8224}
temp	float	$tmp4612	 %read{8228,8228} %write{8227,8227}
temp	float	$tmp4613	 %read{8227,8227} %write{8226,8226}
temp	int	$tmp4614	 %read{8232,8232} %write{8231,8231}
temp	float	$tmp4615	 %read{8239,8239} %write{8235,8235}
temp	float	$tmp4616	 %read{8235,8235} %write{8234,8234}
temp	float	$tmp4617	 %read{8234,8234} %write{8233,8233}
temp	float	$tmp4618	 %read{8239,8239} %write{8238,8238}
temp	float	$tmp4619	 %read{8238,8238} %write{8237,8237}
temp	float	$tmp4620	 %read{8237,8237} %write{8236,8236}
temp	float	$tmp4621	 %read{8243,8243} %write{8239,8239}
temp	float	$tmp4622	 %read{8243,8243} %write{8242,8242}
temp	float	$tmp4623	 %read{8242,8242} %write{8241,8241}
temp	float	$tmp4624	 %read{8241,8241} %write{8240,8240}
temp	int	$tmp4625	 %read{8246,8246} %write{8245,8245}
temp	float	$tmp4626	 %read{8251,8251} %write{8250,8250}
temp	float	$tmp4627	 %read{8250,8250} %write{8249,8249}
temp	vector	$tmp4628	 %read{8249,8249} %write{8247,8247}
temp	vector	$tmp4629	 %read{8249,8249} %write{8248,8248}
temp	int	$tmp4630	 %read{8254,8254} %write{8253,8253}
temp	float	$tmp4631	 %read{8261,8261} %write{8257,8257}
temp	float	$tmp4632	 %read{8257,8257} %write{8256,8256}
temp	float	$tmp4633	 %read{8256,8256} %write{8255,8255}
temp	float	$tmp4634	 %read{8261,8261} %write{8260,8260}
temp	float	$tmp4635	 %read{8260,8260} %write{8259,8259}
temp	float	$tmp4636	 %read{8259,8259} %write{8258,8258}
temp	float	$tmp4637	 %read{8265,8265} %write{8261,8261}
temp	float	$tmp4638	 %read{8265,8265} %write{8264,8264}
temp	float	$tmp4639	 %read{8264,8264} %write{8263,8263}
temp	float	$tmp4640	 %read{8263,8263} %write{8262,8262}
temp	float	$tmp4641	 %read{8267,8267} %write{8265,8265}
temp	float	$tmp4642	 %read{8267,8267} %write{8266,8266}
temp	point	$tmp4643	 %read{8274,8274} %write{8273,8273}
temp	float	$tmp4644	 %read{8273,8273} %write{8270,8270}
temp	float	$tmp4645	 %read{8273,8273} %write{8271,8271}
temp	float	$tmp4646	 %read{8273,8273} %write{8272,8272}
temp	float	$tmp4647	 %read{8276,8276} %write{8275,8275}
temp	int	$tmp4648	 %read{8277,8277} %write{8276,8276}
temp	float	$tmp4649	 %read{8279,8279} %write{8278,8278}
temp	float	$tmp4650	 %read{8281,8281} %write{8280,8280}
temp	float	$tmp4651	 %read{8283,8283} %write{8282,8282}
temp	point	$tmp4652	 %read{8286,8286} %write{8285,8285}
temp	point	$tmp4653	 %read{8288,8288} %write{8287,8287}
temp	point	$tmp4654	 %read{8290,8290} %write{8289,8289}
temp	float	$tmp4655	 %read{8293,8293} %write{8292,8292}
temp	int	$tmp4656	 %read{8294,8294} %write{8293,8293}
temp	float	$tmp4657	 %read{8296,8296} %write{8295,8295}
temp	float	$tmp4658	 %read{8298,8298} %write{8297,8297}
temp	point	$tmp4659	 %read{8301,8301} %write{8300,8300}
temp	point	$tmp4660	 %read{8303,8303} %write{8302,8302}
temp	float	$tmp4661	 %read{8306,8306} %write{8305,8305}
temp	int	$tmp4662	 %read{8307,8307} %write{8306,8306}
temp	float	$tmp4663	 %read{8309,8309} %write{8308,8308}
temp	point	$tmp4664	 %read{8312,8312} %write{8311,8311}
temp	float	$tmp4665	 %read{8315,8315} %write{8314,8314}
temp	int	$tmp4666	 %read{8316,8316} %write{8315,8315}
temp	int	$tmp4667	 %read{2147483647,-1} %write{8319,8319}
temp	int	$tmp4668	 %read{2147483647,-1} %write{8321,8321}
temp	int	$tmp4669	 %read{2147483647,-1} %write{8323,8323}
temp	float	$tmp4670	 %read{8327,8327} %write{8326,8326}
temp	int	$tmp4671	 %read{8330,8330} %write{8329,8329}
temp	float	$tmp4672	 %read{8506,8506} %write{8505,8505}
temp	float	$tmp4673	 %read{8337,8337} %write{8336,8336}
temp	float	$tmp4674	 %read{8336,8336} %write{8335,8335}
temp	float	$tmp4675	 %read{8340,8340} %write{8339,8339}
temp	float	$tmp4676	 %read{8339,8339} %write{8338,8338}
temp	float	$tmp4677	 %read{8343,8343} %write{8342,8342}
temp	float	$tmp4678	 %read{8342,8342} %write{8341,8341}
temp	int	$tmp4679	 %read{8351,8351} %write{8350,8350}
temp	int	$tmp4680	 %read{8348,8504} %write{8348,8504}
temp	int	$tmp4681	 %read{8355,8355} %write{8354,8354}
temp	int	$tmp4682	 %read{8352,8502} %write{8352,8502}
temp	int	$tmp4683	 %read{8359,8359} %write{8358,8358}
temp	int	$tmp4684	 %read{8356,8500} %write{8356,8500}
temp	float	$tmp4685	 %read{8363,8363} %write{8360,8360}
temp	float	$tmp4686	 %read{8363,8363} %write{8361,8361}
temp	float	$tmp4687	 %read{8363,8363} %write{8362,8362}
temp	color	$tmp4688	 %read{8377,8377} %write{8376,8376}
temp	point	$tmp4689	 %read{8370,8370} %write{8369,8369}
temp	float	$tmp4690	 %read{8369,8369} %write{8366,8366}
temp	float	$tmp4691	 %read{8369,8369} %write{8367,8367}
temp	float	$tmp4692	 %read{8369,8369} %write{8368,8368}
temp	point	$tmp4693	 %read{8375,8375} %write{8374,8374}
temp	float	$tmp4694	 %read{8374,8374} %write{8371,8371}
temp	float	$tmp4695	 %read{8374,8374} %write{8372,8372}
temp	float	$tmp4696	 %read{8374,8374} %write{8373,8373}
temp	point	$tmp4697	 %read{8379,8379} %write{8378,8378}
temp	int	$tmp4698	 %read{8382,8382} %write{8381,8381}
temp	int	$tmp4699	 %read{8386,8386} %write{8385,8385}
temp	int	$tmp4700	 %read{8390,8390} %write{8389,8389}
temp	float	$tmp4701	 %read{8395,8395} %write{8392,8392}
temp	float	$tmp4702	 %read{8392,8392} %write{8391,8391}
temp	float	$tmp4703	 %read{8395,8395} %write{8394,8394}
temp	float	$tmp4704	 %read{8394,8394} %write{8393,8393}
temp	float	$tmp4705	 %read{8398,8398} %write{8395,8395}
temp	float	$tmp4706	 %read{8398,8398} %write{8397,8397}
temp	float	$tmp4707	 %read{8397,8397} %write{8396,8396}
temp	int	$tmp4708	 %read{8401,8401} %write{8400,8400}
temp	float	$tmp4709	 %read{8409,8409} %write{8403,8403}
temp	float	$tmp4710	 %read{8403,8403} %write{8402,8402}
temp	float	$tmp4711	 %read{8409,8409} %write{8408,8408}
temp	float	$tmp4712	 %read{8408,8408} %write{8405,8405}
temp	float	$tmp4713	 %read{8405,8405} %write{8404,8404}
temp	float	$tmp4714	 %read{8408,8408} %write{8407,8407}
temp	float	$tmp4715	 %read{8407,8407} %write{8406,8406}
temp	int	$tmp4716	 %read{8412,8412} %write{8411,8411}
temp	float	$tmp4717	 %read{8419,8419} %write{8415,8415}
temp	float	$tmp4718	 %read{8415,8415} %write{8414,8414}
temp	float	$tmp4719	 %read{8414,8414} %write{8413,8413}
temp	float	$tmp4720	 %read{8419,8419} %write{8418,8418}
temp	float	$tmp4721	 %read{8418,8418} %write{8417,8417}
temp	float	$tmp4722	 %read{8417,8417} %write{8416,8416}
temp	float	$tmp4723	 %read{8423,8423} %write{8419,8419}
temp	float	$tmp4724	 %read{8423,8423} %write{8422,8422}
temp	float	$tmp4725	 %read{8422,8422} %write{8421,8421}
temp	float	$tmp4726	 %read{8421,8421} %write{8420,8420}
temp	int	$tmp4727	 %read{8426,8426} %write{8425,8425}
temp	float	$tmp4728	 %read{8431,8431} %write{8430,8430}
temp	float	$tmp4729	 %read{8430,8430} %write{8429,8429}
temp	vector	$tmp4730	 %read{8429,8429} %write{8427,8427}
temp	vector	$tmp4731	 %read{8429,8429} %write{8428,8428}
temp	int	$tmp4732	 %read{8434,8434} %write{8433,8433}
temp	float	$tmp4733	 %read{8441,8441} %write{8437,8437}
temp	float	$tmp4734	 %read{8437,8437} %write{8436,8436}
temp	float	$tmp4735	 %read{8436,8436} %write{8435,8435}
temp	float	$tmp4736	 %read{8441,8441} %write{8440,8440}
temp	float	$tmp4737	 %read{8440,8440} %write{8439,8439}
temp	float	$tmp4738	 %read{8439,8439} %write{8438,8438}
temp	float	$tmp4739	 %read{8445,8445} %write{8441,8441}
temp	float	$tmp4740	 %read{8445,8445} %write{8444,8444}
temp	float	$tmp4741	 %read{8444,8444} %write{8443,8443}
temp	float	$tmp4742	 %read{8443,8443} %write{8442,8442}
temp	float	$tmp4743	 %read{8447,8447} %write{8445,8445}
temp	float	$tmp4744	 %read{8447,8447} %write{8446,8446}
temp	point	$tmp4745	 %read{8454,8454} %write{8453,8453}
temp	float	$tmp4746	 %read{8453,8453} %write{8450,8450}
temp	float	$tmp4747	 %read{8453,8453} %write{8451,8451}
temp	float	$tmp4748	 %read{8453,8453} %write{8452,8452}
temp	float	$tmp4749	 %read{8456,8456} %write{8455,8455}
temp	int	$tmp4750	 %read{8457,8457} %write{8456,8456}
temp	float	$tmp4751	 %read{8459,8459} %write{8458,8458}
temp	float	$tmp4752	 %read{8461,8461} %write{8460,8460}
temp	float	$tmp4753	 %read{8463,8463} %write{8462,8462}
temp	point	$tmp4754	 %read{8466,8466} %write{8465,8465}
temp	point	$tmp4755	 %read{8468,8468} %write{8467,8467}
temp	point	$tmp4756	 %read{8470,8470} %write{8469,8469}
temp	float	$tmp4757	 %read{8473,8473} %write{8472,8472}
temp	int	$tmp4758	 %read{8474,8474} %write{8473,8473}
temp	float	$tmp4759	 %read{8476,8476} %write{8475,8475}
temp	float	$tmp4760	 %read{8478,8478} %write{8477,8477}
temp	point	$tmp4761	 %read{8481,8481} %write{8480,8480}
temp	point	$tmp4762	 %read{8483,8483} %write{8482,8482}
temp	float	$tmp4763	 %read{8486,8486} %write{8485,8485}
temp	int	$tmp4764	 %read{8487,8487} %write{8486,8486}
temp	float	$tmp4765	 %read{8489,8489} %write{8488,8488}
temp	point	$tmp4766	 %read{8492,8492} %write{8491,8491}
temp	float	$tmp4767	 %read{8495,8495} %write{8494,8494}
temp	int	$tmp4768	 %read{8496,8496} %write{8495,8495}
temp	int	$tmp4769	 %read{2147483647,-1} %write{8499,8499}
temp	int	$tmp4770	 %read{2147483647,-1} %write{8501,8501}
temp	int	$tmp4771	 %read{2147483647,-1} %write{8503,8503}
temp	float	$tmp4772	 %read{8507,8507} %write{8506,8506}
temp	int	$tmp4773	 %read{8510,8510} %write{8509,8509}
temp	float	$tmp4774	 %read{8686,8686} %write{8685,8685}
temp	float	$tmp4775	 %read{8517,8517} %write{8516,8516}
temp	float	$tmp4776	 %read{8516,8516} %write{8515,8515}
temp	float	$tmp4777	 %read{8520,8520} %write{8519,8519}
temp	float	$tmp4778	 %read{8519,8519} %write{8518,8518}
temp	float	$tmp4779	 %read{8523,8523} %write{8522,8522}
temp	float	$tmp4780	 %read{8522,8522} %write{8521,8521}
temp	int	$tmp4781	 %read{8531,8531} %write{8530,8530}
temp	int	$tmp4782	 %read{8528,8684} %write{8528,8684}
temp	int	$tmp4783	 %read{8535,8535} %write{8534,8534}
temp	int	$tmp4784	 %read{8532,8682} %write{8532,8682}
temp	int	$tmp4785	 %read{8539,8539} %write{8538,8538}
temp	int	$tmp4786	 %read{8536,8680} %write{8536,8680}
temp	float	$tmp4787	 %read{8543,8543} %write{8540,8540}
temp	float	$tmp4788	 %read{8543,8543} %write{8541,8541}
temp	float	$tmp4789	 %read{8543,8543} %write{8542,8542}
temp	color	$tmp4790	 %read{8557,8557} %write{8556,8556}
temp	point	$tmp4791	 %read{8550,8550} %write{8549,8549}
temp	float	$tmp4792	 %read{8549,8549} %write{8546,8546}
temp	float	$tmp4793	 %read{8549,8549} %write{8547,8547}
temp	float	$tmp4794	 %read{8549,8549} %write{8548,8548}
temp	point	$tmp4795	 %read{8555,8555} %write{8554,8554}
temp	float	$tmp4796	 %read{8554,8554} %write{8551,8551}
temp	float	$tmp4797	 %read{8554,8554} %write{8552,8552}
temp	float	$tmp4798	 %read{8554,8554} %write{8553,8553}
temp	point	$tmp4799	 %read{8559,8559} %write{8558,8558}
temp	int	$tmp4800	 %read{8562,8562} %write{8561,8561}
temp	int	$tmp4801	 %read{8566,8566} %write{8565,8565}
temp	int	$tmp4802	 %read{8570,8570} %write{8569,8569}
temp	float	$tmp4803	 %read{8575,8575} %write{8572,8572}
temp	float	$tmp4804	 %read{8572,8572} %write{8571,8571}
temp	float	$tmp4805	 %read{8575,8575} %write{8574,8574}
temp	float	$tmp4806	 %read{8574,8574} %write{8573,8573}
temp	float	$tmp4807	 %read{8578,8578} %write{8575,8575}
temp	float	$tmp4808	 %read{8578,8578} %write{8577,8577}
temp	float	$tmp4809	 %read{8577,8577} %write{8576,8576}
temp	int	$tmp4810	 %read{8581,8581} %write{8580,8580}
temp	float	$tmp4811	 %read{8589,8589} %write{8583,8583}
temp	float	$tmp4812	 %read{8583,8583} %write{8582,8582}
temp	float	$tmp4813	 %read{8589,8589} %write{8588,8588}
temp	float	$tmp4814	 %read{8588,8588} %write{8585,8585}
temp	float	$tmp4815	 %read{8585,8585} %write{8584,8584}
temp	float	$tmp4816	 %read{8588,8588} %write{8587,8587}
temp	float	$tmp4817	 %read{8587,8587} %write{8586,8586}
temp	int	$tmp4818	 %read{8592,8592} %write{8591,8591}
temp	float	$tmp4819	 %read{8599,8599} %write{8595,8595}
temp	float	$tmp4820	 %read{8595,8595} %write{8594,8594}
temp	float	$tmp4821	 %read{8594,8594} %write{8593,8593}
temp	float	$tmp4822	 %read{8599,8599} %write{8598,8598}
temp	float	$tmp4823	 %read{8598,8598} %write{8597,8597}
temp	float	$tmp4824	 %read{8597,8597} %write{8596,8596}
temp	float	$tmp4825	 %read{8603,8603} %write{8599,8599}
temp	float	$tmp4826	 %read{8603,8603} %write{8602,8602}
temp	float	$tmp4827	 %read{8602,8602} %write{8601,8601}
temp	float	$tmp4828	 %read{8601,8601} %write{8600,8600}
temp	int	$tmp4829	 %read{8606,8606} %write{8605,8605}
temp	float	$tmp4830	 %read{8611,8611} %write{8610,8610}
temp	float	$tmp4831	 %read{8610,8610} %write{8609,8609}
temp	vector	$tmp4832	 %read{8609,8609} %write{8607,8607}
temp	vector	$tmp4833	 %read{8609,8609} %write{8608,8608}
temp	int	$tmp4834	 %read{8614,8614} %write{8613,8613}
temp	float	$tmp4835	 %read{8621,8621} %write{8617,8617}
temp	float	$tmp4836	 %read{8617,8617} %write{8616,8616}
temp	float	$tmp4837	 %read{8616,8616} %write{8615,8615}
temp	float	$tmp4838	 %read{8621,8621} %write{8620,8620}
temp	float	$tmp4839	 %read{8620,8620} %write{8619,8619}
temp	float	$tmp4840	 %read{8619,8619} %write{8618,8618}
temp	float	$tmp4841	 %read{8625,8625} %write{8621,8621}
temp	float	$tmp4842	 %read{8625,8625} %write{8624,8624}
temp	float	$tmp4843	 %read{8624,8624} %write{8623,8623}
temp	float	$tmp4844	 %read{8623,8623} %write{8622,8622}
temp	float	$tmp4845	 %read{8627,8627} %write{8625,8625}
temp	float	$tmp4846	 %read{8627,8627} %write{8626,8626}
temp	point	$tmp4847	 %read{8634,8634} %write{8633,8633}
temp	float	$tmp4848	 %read{8633,8633} %write{8630,8630}
temp	float	$tmp4849	 %read{8633,8633} %write{8631,8631}
temp	float	$tmp4850	 %read{8633,8633} %write{8632,8632}
temp	float	$tmp4851	 %read{8636,8636} %write{8635,8635}
temp	int	$tmp4852	 %read{8637,8637} %write{8636,8636}
temp	float	$tmp4853	 %read{8639,8639} %write{8638,8638}
temp	float	$tmp4854	 %read{8641,8641} %write{8640,8640}
temp	float	$tmp4855	 %read{8643,8643} %write{8642,8642}
temp	point	$tmp4856	 %read{8646,8646} %write{8645,8645}
temp	point	$tmp4857	 %read{8648,8648} %write{8647,8647}
temp	point	$tmp4858	 %read{8650,8650} %write{8649,8649}
temp	float	$tmp4859	 %read{8653,8653} %write{8652,8652}
temp	int	$tmp4860	 %read{8654,8654} %write{8653,8653}
temp	float	$tmp4861	 %read{8656,8656} %write{8655,8655}
temp	float	$tmp4862	 %read{8658,8658} %write{8657,8657}
temp	point	$tmp4863	 %read{8661,8661} %write{8660,8660}
temp	point	$tmp4864	 %read{8663,8663} %write{8662,8662}
temp	float	$tmp4865	 %read{8666,8666} %write{8665,8665}
temp	int	$tmp4866	 %read{8667,8667} %write{8666,8666}
temp	float	$tmp4867	 %read{8669,8669} %write{8668,8668}
temp	point	$tmp4868	 %read{8672,8672} %write{8671,8671}
temp	float	$tmp4869	 %read{8675,8675} %write{8674,8674}
temp	int	$tmp4870	 %read{8676,8676} %write{8675,8675}
temp	int	$tmp4871	 %read{2147483647,-1} %write{8679,8679}
temp	int	$tmp4872	 %read{2147483647,-1} %write{8681,8681}
temp	int	$tmp4873	 %read{2147483647,-1} %write{8683,8683}
temp	float	$tmp4874	 %read{8687,8687} %write{8686,8686}
temp	int	$tmp4875	 %read{8690,8690} %write{8689,8689}
temp	float	$tmp4876	 %read{8868,8868} %write{8867,8867}
temp	float	$tmp4877	 %read{8697,8697} %write{8696,8696}
temp	float	$tmp4878	 %read{8696,8696} %write{8695,8695}
temp	float	$tmp4879	 %read{8700,8700} %write{8699,8699}
temp	float	$tmp4880	 %read{8699,8699} %write{8698,8698}
temp	float	$tmp4881	 %read{8703,8703} %write{8702,8702}
temp	float	$tmp4882	 %read{8702,8702} %write{8701,8701}
temp	int	$tmp4883	 %read{8711,8711} %write{8710,8710}
temp	int	$tmp4884	 %read{8708,8864} %write{8708,8864}
temp	int	$tmp4885	 %read{8715,8715} %write{8714,8714}
temp	int	$tmp4886	 %read{8712,8862} %write{8712,8862}
temp	int	$tmp4887	 %read{8719,8719} %write{8718,8718}
temp	int	$tmp4888	 %read{8716,8860} %write{8716,8860}
temp	float	$tmp4889	 %read{8723,8723} %write{8720,8720}
temp	float	$tmp4890	 %read{8723,8723} %write{8721,8721}
temp	float	$tmp4891	 %read{8723,8723} %write{8722,8722}
temp	color	$tmp4892	 %read{8737,8737} %write{8736,8736}
temp	point	$tmp4893	 %read{8730,8730} %write{8729,8729}
temp	float	$tmp4894	 %read{8729,8729} %write{8726,8726}
temp	float	$tmp4895	 %read{8729,8729} %write{8727,8727}
temp	float	$tmp4896	 %read{8729,8729} %write{8728,8728}
temp	point	$tmp4897	 %read{8735,8735} %write{8734,8734}
temp	float	$tmp4898	 %read{8734,8734} %write{8731,8731}
temp	float	$tmp4899	 %read{8734,8734} %write{8732,8732}
temp	float	$tmp4900	 %read{8734,8734} %write{8733,8733}
temp	point	$tmp4901	 %read{8739,8739} %write{8738,8738}
temp	int	$tmp4902	 %read{8742,8742} %write{8741,8741}
temp	int	$tmp4903	 %read{8746,8746} %write{8745,8745}
temp	int	$tmp4904	 %read{8750,8750} %write{8749,8749}
temp	float	$tmp4905	 %read{8755,8755} %write{8752,8752}
temp	float	$tmp4906	 %read{8752,8752} %write{8751,8751}
temp	float	$tmp4907	 %read{8755,8755} %write{8754,8754}
temp	float	$tmp4908	 %read{8754,8754} %write{8753,8753}
temp	float	$tmp4909	 %read{8758,8758} %write{8755,8755}
temp	float	$tmp4910	 %read{8758,8758} %write{8757,8757}
temp	float	$tmp4911	 %read{8757,8757} %write{8756,8756}
temp	int	$tmp4912	 %read{8761,8761} %write{8760,8760}
temp	float	$tmp4913	 %read{8769,8769} %write{8763,8763}
temp	float	$tmp4914	 %read{8763,8763} %write{8762,8762}
temp	float	$tmp4915	 %read{8769,8769} %write{8768,8768}
temp	float	$tmp4916	 %read{8768,8768} %write{8765,8765}
temp	float	$tmp4917	 %read{8765,8765} %write{8764,8764}
temp	float	$tmp4918	 %read{8768,8768} %write{8767,8767}
temp	float	$tmp4919	 %read{8767,8767} %write{8766,8766}
temp	int	$tmp4920	 %read{8772,8772} %write{8771,8771}
temp	float	$tmp4921	 %read{8779,8779} %write{8775,8775}
temp	float	$tmp4922	 %read{8775,8775} %write{8774,8774}
temp	float	$tmp4923	 %read{8774,8774} %write{8773,8773}
temp	float	$tmp4924	 %read{8779,8779} %write{8778,8778}
temp	float	$tmp4925	 %read{8778,8778} %write{8777,8777}
temp	float	$tmp4926	 %read{8777,8777} %write{8776,8776}
temp	float	$tmp4927	 %read{8783,8783} %write{8779,8779}
temp	float	$tmp4928	 %read{8783,8783} %write{8782,8782}
temp	float	$tmp4929	 %read{8782,8782} %write{8781,8781}
temp	float	$tmp4930	 %read{8781,8781} %write{8780,8780}
temp	int	$tmp4931	 %read{8786,8786} %write{8785,8785}
temp	float	$tmp4932	 %read{8791,8791} %write{8790,8790}
temp	float	$tmp4933	 %read{8790,8790} %write{8789,8789}
temp	vector	$tmp4934	 %read{8789,8789} %write{8787,8787}
temp	vector	$tmp4935	 %read{8789,8789} %write{8788,8788}
temp	int	$tmp4936	 %read{8794,8794} %write{8793,8793}
temp	float	$tmp4937	 %read{8801,8801} %write{8797,8797}
temp	float	$tmp4938	 %read{8797,8797} %write{8796,8796}
temp	float	$tmp4939	 %read{8796,8796} %write{8795,8795}
temp	float	$tmp4940	 %read{8801,8801} %write{8800,8800}
temp	float	$tmp4941	 %read{8800,8800} %write{8799,8799}
temp	float	$tmp4942	 %read{8799,8799} %write{8798,8798}
temp	float	$tmp4943	 %read{8805,8805} %write{8801,8801}
temp	float	$tmp4944	 %read{8805,8805} %write{8804,8804}
temp	float	$tmp4945	 %read{8804,8804} %write{8803,8803}
temp	float	$tmp4946	 %read{8803,8803} %write{8802,8802}
temp	float	$tmp4947	 %read{8807,8807} %write{8805,8805}
temp	float	$tmp4948	 %read{8807,8807} %write{8806,8806}
temp	point	$tmp4949	 %read{8814,8814} %write{8813,8813}
temp	float	$tmp4950	 %read{8813,8813} %write{8810,8810}
temp	float	$tmp4951	 %read{8813,8813} %write{8811,8811}
temp	float	$tmp4952	 %read{8813,8813} %write{8812,8812}
temp	float	$tmp4953	 %read{8816,8816} %write{8815,8815}
temp	int	$tmp4954	 %read{8817,8817} %write{8816,8816}
temp	float	$tmp4955	 %read{8819,8819} %write{8818,8818}
temp	float	$tmp4956	 %read{8821,8821} %write{8820,8820}
temp	float	$tmp4957	 %read{8823,8823} %write{8822,8822}
temp	point	$tmp4958	 %read{8826,8826} %write{8825,8825}
temp	point	$tmp4959	 %read{8828,8828} %write{8827,8827}
temp	point	$tmp4960	 %read{8830,8830} %write{8829,8829}
temp	float	$tmp4961	 %read{8833,8833} %write{8832,8832}
temp	int	$tmp4962	 %read{8834,8834} %write{8833,8833}
temp	float	$tmp4963	 %read{8836,8836} %write{8835,8835}
temp	float	$tmp4964	 %read{8838,8838} %write{8837,8837}
temp	point	$tmp4965	 %read{8841,8841} %write{8840,8840}
temp	point	$tmp4966	 %read{8843,8843} %write{8842,8842}
temp	float	$tmp4967	 %read{8846,8846} %write{8845,8845}
temp	int	$tmp4968	 %read{8847,8847} %write{8846,8846}
temp	float	$tmp4969	 %read{8849,8849} %write{8848,8848}
temp	point	$tmp4970	 %read{8852,8852} %write{8851,8851}
temp	float	$tmp4971	 %read{8855,8855} %write{8854,8854}
temp	int	$tmp4972	 %read{8856,8856} %write{8855,8855}
temp	int	$tmp4973	 %read{2147483647,-1} %write{8859,8859}
temp	int	$tmp4974	 %read{2147483647,-1} %write{8861,8861}
temp	int	$tmp4975	 %read{2147483647,-1} %write{8863,8863}
temp	float	$tmp4976	 %read{8867,8867} %write{8865,8865}
temp	float	$tmp4977	 %read{8867,8867} %write{8866,8866}
temp	float	$tmp4978	 %read{8869,8869} %write{8868,8868}
temp	int	$tmp4979	 %read{8872,8872} %write{8871,8871}
temp	float	$tmp4980	 %read{9057,9057} %write{9054,9055}
temp	float	$tmp4981	 %read{9051,9051} %write{9050,9050}
temp	float	$tmp4982	 %read{8880,8880} %write{8879,8879}
temp	float	$tmp4983	 %read{8879,8879} %write{8878,8878}
temp	float	$tmp4984	 %read{8883,8883} %write{8882,8882}
temp	float	$tmp4985	 %read{8882,8882} %write{8881,8881}
temp	float	$tmp4986	 %read{8886,8886} %write{8885,8885}
temp	float	$tmp4987	 %read{8885,8885} %write{8884,8884}
temp	int	$tmp4988	 %read{8894,8894} %write{8893,8893}
temp	int	$tmp4989	 %read{8891,9047} %write{8891,9047}
temp	int	$tmp4990	 %read{8898,8898} %write{8897,8897}
temp	int	$tmp4991	 %read{8895,9045} %write{8895,9045}
temp	int	$tmp4992	 %read{8902,8902} %write{8901,8901}
temp	int	$tmp4993	 %read{8899,9043} %write{8899,9043}
temp	float	$tmp4994	 %read{8906,8906} %write{8903,8903}
temp	float	$tmp4995	 %read{8906,8906} %write{8904,8904}
temp	float	$tmp4996	 %read{8906,8906} %write{8905,8905}
temp	color	$tmp4997	 %read{8920,8920} %write{8919,8919}
temp	point	$tmp4998	 %read{8913,8913} %write{8912,8912}
temp	float	$tmp4999	 %read{8912,8912} %write{8909,8909}
temp	float	$tmp5000	 %read{8912,8912} %write{8910,8910}
temp	float	$tmp5001	 %read{8912,8912} %write{8911,8911}
temp	point	$tmp5002	 %read{8918,8918} %write{8917,8917}
temp	float	$tmp5003	 %read{8917,8917} %write{8914,8914}
temp	float	$tmp5004	 %read{8917,8917} %write{8915,8915}
temp	float	$tmp5005	 %read{8917,8917} %write{8916,8916}
temp	point	$tmp5006	 %read{8922,8922} %write{8921,8921}
temp	int	$tmp5007	 %read{8925,8925} %write{8924,8924}
temp	int	$tmp5008	 %read{8929,8929} %write{8928,8928}
temp	int	$tmp5009	 %read{8933,8933} %write{8932,8932}
temp	float	$tmp5010	 %read{8938,8938} %write{8935,8935}
temp	float	$tmp5011	 %read{8935,8935} %write{8934,8934}
temp	float	$tmp5012	 %read{8938,8938} %write{8937,8937}
temp	float	$tmp5013	 %read{8937,8937} %write{8936,8936}
temp	float	$tmp5014	 %read{8941,8941} %write{8938,8938}
temp	float	$tmp5015	 %read{8941,8941} %write{8940,8940}
temp	float	$tmp5016	 %read{8940,8940} %write{8939,8939}
temp	int	$tmp5017	 %read{8944,8944} %write{8943,8943}
temp	float	$tmp5018	 %read{8952,8952} %write{8946,8946}
temp	float	$tmp5019	 %read{8946,8946} %write{8945,8945}
temp	float	$tmp5020	 %read{8952,8952} %write{8951,8951}
temp	float	$tmp5021	 %read{8951,8951} %write{8948,8948}
temp	float	$tmp5022	 %read{8948,8948} %write{8947,8947}
temp	float	$tmp5023	 %read{8951,8951} %write{8950,8950}
temp	float	$tmp5024	 %read{8950,8950} %write{8949,8949}
temp	int	$tmp5025	 %read{8955,8955} %write{8954,8954}
temp	float	$tmp5026	 %read{8962,8962} %write{8958,8958}
temp	float	$tmp5027	 %read{8958,8958} %write{8957,8957}
temp	float	$tmp5028	 %read{8957,8957} %write{8956,8956}
temp	float	$tmp5029	 %read{8962,8962} %write{8961,8961}
temp	float	$tmp5030	 %read{8961,8961} %write{8960,8960}
temp	float	$tmp5031	 %read{8960,8960} %write{8959,8959}
temp	float	$tmp5032	 %read{8966,8966} %write{8962,8962}
temp	float	$tmp5033	 %read{8966,8966} %write{8965,8965}
temp	float	$tmp5034	 %read{8965,8965} %write{8964,8964}
temp	float	$tmp5035	 %read{8964,8964} %write{8963,8963}
temp	int	$tmp5036	 %read{8969,8969} %write{8968,8968}
temp	float	$tmp5037	 %read{8974,8974} %write{8973,8973}
temp	float	$tmp5038	 %read{8973,8973} %write{8972,8972}
temp	vector	$tmp5039	 %read{8972,8972} %write{8970,8970}
temp	vector	$tmp5040	 %read{8972,8972} %write{8971,8971}
temp	int	$tmp5041	 %read{8977,8977} %write{8976,8976}
temp	float	$tmp5042	 %read{8984,8984} %write{8980,8980}
temp	float	$tmp5043	 %read{8980,8980} %write{8979,8979}
temp	float	$tmp5044	 %read{8979,8979} %write{8978,8978}
temp	float	$tmp5045	 %read{8984,8984} %write{8983,8983}
temp	float	$tmp5046	 %read{8983,8983} %write{8982,8982}
temp	float	$tmp5047	 %read{8982,8982} %write{8981,8981}
temp	float	$tmp5048	 %read{8988,8988} %write{8984,8984}
temp	float	$tmp5049	 %read{8988,8988} %write{8987,8987}
temp	float	$tmp5050	 %read{8987,8987} %write{8986,8986}
temp	float	$tmp5051	 %read{8986,8986} %write{8985,8985}
temp	float	$tmp5052	 %read{8990,8990} %write{8988,8988}
temp	float	$tmp5053	 %read{8990,8990} %write{8989,8989}
temp	point	$tmp5054	 %read{8997,8997} %write{8996,8996}
temp	float	$tmp5055	 %read{8996,8996} %write{8993,8993}
temp	float	$tmp5056	 %read{8996,8996} %write{8994,8994}
temp	float	$tmp5057	 %read{8996,8996} %write{8995,8995}
temp	float	$tmp5058	 %read{8999,8999} %write{8998,8998}
temp	int	$tmp5059	 %read{9000,9000} %write{8999,8999}
temp	float	$tmp5060	 %read{9002,9002} %write{9001,9001}
temp	float	$tmp5061	 %read{9004,9004} %write{9003,9003}
temp	float	$tmp5062	 %read{9006,9006} %write{9005,9005}
temp	point	$tmp5063	 %read{9009,9009} %write{9008,9008}
temp	point	$tmp5064	 %read{9011,9011} %write{9010,9010}
temp	point	$tmp5065	 %read{9013,9013} %write{9012,9012}
temp	float	$tmp5066	 %read{9016,9016} %write{9015,9015}
temp	int	$tmp5067	 %read{9017,9017} %write{9016,9016}
temp	float	$tmp5068	 %read{9019,9019} %write{9018,9018}
temp	float	$tmp5069	 %read{9021,9021} %write{9020,9020}
temp	point	$tmp5070	 %read{9024,9024} %write{9023,9023}
temp	point	$tmp5071	 %read{9026,9026} %write{9025,9025}
temp	float	$tmp5072	 %read{9029,9029} %write{9028,9028}
temp	int	$tmp5073	 %read{9030,9030} %write{9029,9029}
temp	float	$tmp5074	 %read{9032,9032} %write{9031,9031}
temp	point	$tmp5075	 %read{9035,9035} %write{9034,9034}
temp	float	$tmp5076	 %read{9038,9038} %write{9037,9037}
temp	int	$tmp5077	 %read{9039,9039} %write{9038,9038}
temp	int	$tmp5078	 %read{2147483647,-1} %write{9042,9042}
temp	int	$tmp5079	 %read{2147483647,-1} %write{9044,9044}
temp	int	$tmp5080	 %read{2147483647,-1} %write{9046,9046}
temp	float	$tmp5081	 %read{9050,9050} %write{9048,9048}
temp	float	$tmp5082	 %read{9050,9050} %write{9049,9049}
temp	int	$tmp5083	 %read{9053,9053} %write{9052,9052}
temp	float	$tmp5084	 %read{9058,9058} %write{9057,9057}
temp	int	$tmp5085	 %read{9061,9061} %write{9060,9060}
temp	float	$tmp5086	 %read{9067,9067} %write{9066,9066}
temp	float	$tmp5087	 %read{9068,9068} %write{9067,9067}
temp	float	$tmp5088	 %read{9070,9070} %write{9069,9069}
temp	int	$tmp5089	 %read{2147483647,-1} %write{9073,9073}
temp	float	$tmp5090	 %read{9076,9076} %write{9075,9075}
temp	int	$tmp5091	 %read{9078,9078} %write{9077,9077}
temp	point	$tmp5092	 %read{9087,10189} %write{9079,10174}
temp	int	$tmp5093	 %read{9082,9082} %write{9081,9081}
temp	int	$tmp5094	 %read{9086,9086} %write{9085,9085}
temp	int	$tmp5095	 %read{9090,9090} %write{9089,9089}
temp	int	$tmp5096	 %read{9091,9091} %write{9090,9090}
temp	int	$tmp5097	 %read{9097,9097} %write{9096,9096}
temp	float	$tmp5098	 %read{9273,9273} %write{9272,9272}
temp	float	$tmp5099	 %read{9104,9104} %write{9103,9103}
temp	float	$tmp5100	 %read{9103,9103} %write{9102,9102}
temp	float	$tmp5101	 %read{9107,9107} %write{9106,9106}
temp	float	$tmp5102	 %read{9106,9106} %write{9105,9105}
temp	float	$tmp5103	 %read{9110,9110} %write{9109,9109}
temp	float	$tmp5104	 %read{9109,9109} %write{9108,9108}
temp	int	$tmp5105	 %read{9118,9118} %write{9117,9117}
temp	int	$tmp5106	 %read{9115,9271} %write{9115,9271}
temp	int	$tmp5107	 %read{9122,9122} %write{9121,9121}
temp	int	$tmp5108	 %read{9119,9269} %write{9119,9269}
temp	int	$tmp5109	 %read{9126,9126} %write{9125,9125}
temp	int	$tmp5110	 %read{9123,9267} %write{9123,9267}
temp	float	$tmp5111	 %read{9130,9130} %write{9127,9127}
temp	float	$tmp5112	 %read{9130,9130} %write{9128,9128}
temp	float	$tmp5113	 %read{9130,9130} %write{9129,9129}
temp	color	$tmp5114	 %read{9144,9144} %write{9143,9143}
temp	point	$tmp5115	 %read{9137,9137} %write{9136,9136}
temp	float	$tmp5116	 %read{9136,9136} %write{9133,9133}
temp	float	$tmp5117	 %read{9136,9136} %write{9134,9134}
temp	float	$tmp5118	 %read{9136,9136} %write{9135,9135}
temp	point	$tmp5119	 %read{9142,9142} %write{9141,9141}
temp	float	$tmp5120	 %read{9141,9141} %write{9138,9138}
temp	float	$tmp5121	 %read{9141,9141} %write{9139,9139}
temp	float	$tmp5122	 %read{9141,9141} %write{9140,9140}
temp	point	$tmp5123	 %read{9146,9146} %write{9145,9145}
temp	int	$tmp5124	 %read{9149,9149} %write{9148,9148}
temp	int	$tmp5125	 %read{9153,9153} %write{9152,9152}
temp	int	$tmp5126	 %read{9157,9157} %write{9156,9156}
temp	float	$tmp5127	 %read{9162,9162} %write{9159,9159}
temp	float	$tmp5128	 %read{9159,9159} %write{9158,9158}
temp	float	$tmp5129	 %read{9162,9162} %write{9161,9161}
temp	float	$tmp5130	 %read{9161,9161} %write{9160,9160}
temp	float	$tmp5131	 %read{9165,9165} %write{9162,9162}
temp	float	$tmp5132	 %read{9165,9165} %write{9164,9164}
temp	float	$tmp5133	 %read{9164,9164} %write{9163,9163}
temp	int	$tmp5134	 %read{9168,9168} %write{9167,9167}
temp	float	$tmp5135	 %read{9176,9176} %write{9170,9170}
temp	float	$tmp5136	 %read{9170,9170} %write{9169,9169}
temp	float	$tmp5137	 %read{9176,9176} %write{9175,9175}
temp	float	$tmp5138	 %read{9175,9175} %write{9172,9172}
temp	float	$tmp5139	 %read{9172,9172} %write{9171,9171}
temp	float	$tmp5140	 %read{9175,9175} %write{9174,9174}
temp	float	$tmp5141	 %read{9174,9174} %write{9173,9173}
temp	int	$tmp5142	 %read{9179,9179} %write{9178,9178}
temp	float	$tmp5143	 %read{9186,9186} %write{9182,9182}
temp	float	$tmp5144	 %read{9182,9182} %write{9181,9181}
temp	float	$tmp5145	 %read{9181,9181} %write{9180,9180}
temp	float	$tmp5146	 %read{9186,9186} %write{9185,9185}
temp	float	$tmp5147	 %read{9185,9185} %write{9184,9184}
temp	float	$tmp5148	 %read{9184,9184} %write{9183,9183}
temp	float	$tmp5149	 %read{9190,9190} %write{9186,9186}
temp	float	$tmp5150	 %read{9190,9190} %write{9189,9189}
temp	float	$tmp5151	 %read{9189,9189} %write{9188,9188}
temp	float	$tmp5152	 %read{9188,9188} %write{9187,9187}
temp	int	$tmp5153	 %read{9193,9193} %write{9192,9192}
temp	float	$tmp5154	 %read{9198,9198} %write{9197,9197}
temp	float	$tmp5155	 %read{9197,9197} %write{9196,9196}
temp	vector	$tmp5156	 %read{9196,9196} %write{9194,9194}
temp	vector	$tmp5157	 %read{9196,9196} %write{9195,9195}
temp	int	$tmp5158	 %read{9201,9201} %write{9200,9200}
temp	float	$tmp5159	 %read{9208,9208} %write{9204,9204}
temp	float	$tmp5160	 %read{9204,9204} %write{9203,9203}
temp	float	$tmp5161	 %read{9203,9203} %write{9202,9202}
temp	float	$tmp5162	 %read{9208,9208} %write{9207,9207}
temp	float	$tmp5163	 %read{9207,9207} %write{9206,9206}
temp	float	$tmp5164	 %read{9206,9206} %write{9205,9205}
temp	float	$tmp5165	 %read{9212,9212} %write{9208,9208}
temp	float	$tmp5166	 %read{9212,9212} %write{9211,9211}
temp	float	$tmp5167	 %read{9211,9211} %write{9210,9210}
temp	float	$tmp5168	 %read{9210,9210} %write{9209,9209}
temp	float	$tmp5169	 %read{9214,9214} %write{9212,9212}
temp	float	$tmp5170	 %read{9214,9214} %write{9213,9213}
temp	point	$tmp5171	 %read{9221,9221} %write{9220,9220}
temp	float	$tmp5172	 %read{9220,9220} %write{9217,9217}
temp	float	$tmp5173	 %read{9220,9220} %write{9218,9218}
temp	float	$tmp5174	 %read{9220,9220} %write{9219,9219}
temp	float	$tmp5175	 %read{9223,9223} %write{9222,9222}
temp	int	$tmp5176	 %read{9224,9224} %write{9223,9223}
temp	float	$tmp5177	 %read{9226,9226} %write{9225,9225}
temp	float	$tmp5178	 %read{9228,9228} %write{9227,9227}
temp	float	$tmp5179	 %read{9230,9230} %write{9229,9229}
temp	point	$tmp5180	 %read{9233,9233} %write{9232,9232}
temp	point	$tmp5181	 %read{9235,9235} %write{9234,9234}
temp	point	$tmp5182	 %read{9237,9237} %write{9236,9236}
temp	float	$tmp5183	 %read{9240,9240} %write{9239,9239}
temp	int	$tmp5184	 %read{9241,9241} %write{9240,9240}
temp	float	$tmp5185	 %read{9243,9243} %write{9242,9242}
temp	float	$tmp5186	 %read{9245,9245} %write{9244,9244}
temp	point	$tmp5187	 %read{9248,9248} %write{9247,9247}
temp	point	$tmp5188	 %read{9250,9250} %write{9249,9249}
temp	float	$tmp5189	 %read{9253,9253} %write{9252,9252}
temp	int	$tmp5190	 %read{9254,9254} %write{9253,9253}
temp	float	$tmp5191	 %read{9256,9256} %write{9255,9255}
temp	point	$tmp5192	 %read{9259,9259} %write{9258,9258}
temp	float	$tmp5193	 %read{9262,9262} %write{9261,9261}
temp	int	$tmp5194	 %read{9263,9263} %write{9262,9262}
temp	int	$tmp5195	 %read{2147483647,-1} %write{9266,9266}
temp	int	$tmp5196	 %read{2147483647,-1} %write{9268,9268}
temp	int	$tmp5197	 %read{2147483647,-1} %write{9270,9270}
temp	float	$tmp5198	 %read{9274,9274} %write{9273,9273}
temp	int	$tmp5199	 %read{9277,9277} %write{9276,9276}
temp	float	$tmp5200	 %read{9453,9453} %write{9452,9452}
temp	float	$tmp5201	 %read{9284,9284} %write{9283,9283}
temp	float	$tmp5202	 %read{9283,9283} %write{9282,9282}
temp	float	$tmp5203	 %read{9287,9287} %write{9286,9286}
temp	float	$tmp5204	 %read{9286,9286} %write{9285,9285}
temp	float	$tmp5205	 %read{9290,9290} %write{9289,9289}
temp	float	$tmp5206	 %read{9289,9289} %write{9288,9288}
temp	int	$tmp5207	 %read{9298,9298} %write{9297,9297}
temp	int	$tmp5208	 %read{9295,9451} %write{9295,9451}
temp	int	$tmp5209	 %read{9302,9302} %write{9301,9301}
temp	int	$tmp5210	 %read{9299,9449} %write{9299,9449}
temp	int	$tmp5211	 %read{9306,9306} %write{9305,9305}
temp	int	$tmp5212	 %read{9303,9447} %write{9303,9447}
temp	float	$tmp5213	 %read{9310,9310} %write{9307,9307}
temp	float	$tmp5214	 %read{9310,9310} %write{9308,9308}
temp	float	$tmp5215	 %read{9310,9310} %write{9309,9309}
temp	color	$tmp5216	 %read{9324,9324} %write{9323,9323}
temp	point	$tmp5217	 %read{9317,9317} %write{9316,9316}
temp	float	$tmp5218	 %read{9316,9316} %write{9313,9313}
temp	float	$tmp5219	 %read{9316,9316} %write{9314,9314}
temp	float	$tmp5220	 %read{9316,9316} %write{9315,9315}
temp	point	$tmp5221	 %read{9322,9322} %write{9321,9321}
temp	float	$tmp5222	 %read{9321,9321} %write{9318,9318}
temp	float	$tmp5223	 %read{9321,9321} %write{9319,9319}
temp	float	$tmp5224	 %read{9321,9321} %write{9320,9320}
temp	point	$tmp5225	 %read{9326,9326} %write{9325,9325}
temp	int	$tmp5226	 %read{9329,9329} %write{9328,9328}
temp	int	$tmp5227	 %read{9333,9333} %write{9332,9332}
temp	int	$tmp5228	 %read{9337,9337} %write{9336,9336}
temp	float	$tmp5229	 %read{9342,9342} %write{9339,9339}
temp	float	$tmp5230	 %read{9339,9339} %write{9338,9338}
temp	float	$tmp5231	 %read{9342,9342} %write{9341,9341}
temp	float	$tmp5232	 %read{9341,9341} %write{9340,9340}
temp	float	$tmp5233	 %read{9345,9345} %write{9342,9342}
temp	float	$tmp5234	 %read{9345,9345} %write{9344,9344}
temp	float	$tmp5235	 %read{9344,9344} %write{9343,9343}
temp	int	$tmp5236	 %read{9348,9348} %write{9347,9347}
temp	float	$tmp5237	 %read{9356,9356} %write{9350,9350}
temp	float	$tmp5238	 %read{9350,9350} %write{9349,9349}
temp	float	$tmp5239	 %read{9356,9356} %write{9355,9355}
temp	float	$tmp5240	 %read{9355,9355} %write{9352,9352}
temp	float	$tmp5241	 %read{9352,9352} %write{9351,9351}
temp	float	$tmp5242	 %read{9355,9355} %write{9354,9354}
temp	float	$tmp5243	 %read{9354,9354} %write{9353,9353}
temp	int	$tmp5244	 %read{9359,9359} %write{9358,9358}
temp	float	$tmp5245	 %read{9366,9366} %write{9362,9362}
temp	float	$tmp5246	 %read{9362,9362} %write{9361,9361}
temp	float	$tmp5247	 %read{9361,9361} %write{9360,9360}
temp	float	$tmp5248	 %read{9366,9366} %write{9365,9365}
temp	float	$tmp5249	 %read{9365,9365} %write{9364,9364}
temp	float	$tmp5250	 %read{9364,9364} %write{9363,9363}
temp	float	$tmp5251	 %read{9370,9370} %write{9366,9366}
temp	float	$tmp5252	 %read{9370,9370} %write{9369,9369}
temp	float	$tmp5253	 %read{9369,9369} %write{9368,9368}
temp	float	$tmp5254	 %read{9368,9368} %write{9367,9367}
temp	int	$tmp5255	 %read{9373,9373} %write{9372,9372}
temp	float	$tmp5256	 %read{9378,9378} %write{9377,9377}
temp	float	$tmp5257	 %read{9377,9377} %write{9376,9376}
temp	vector	$tmp5258	 %read{9376,9376} %write{9374,9374}
temp	vector	$tmp5259	 %read{9376,9376} %write{9375,9375}
temp	int	$tmp5260	 %read{9381,9381} %write{9380,9380}
temp	float	$tmp5261	 %read{9388,9388} %write{9384,9384}
temp	float	$tmp5262	 %read{9384,9384} %write{9383,9383}
temp	float	$tmp5263	 %read{9383,9383} %write{9382,9382}
temp	float	$tmp5264	 %read{9388,9388} %write{9387,9387}
temp	float	$tmp5265	 %read{9387,9387} %write{9386,9386}
temp	float	$tmp5266	 %read{9386,9386} %write{9385,9385}
temp	float	$tmp5267	 %read{9392,9392} %write{9388,9388}
temp	float	$tmp5268	 %read{9392,9392} %write{9391,9391}
temp	float	$tmp5269	 %read{9391,9391} %write{9390,9390}
temp	float	$tmp5270	 %read{9390,9390} %write{9389,9389}
temp	float	$tmp5271	 %read{9394,9394} %write{9392,9392}
temp	float	$tmp5272	 %read{9394,9394} %write{9393,9393}
temp	point	$tmp5273	 %read{9401,9401} %write{9400,9400}
temp	float	$tmp5274	 %read{9400,9400} %write{9397,9397}
temp	float	$tmp5275	 %read{9400,9400} %write{9398,9398}
temp	float	$tmp5276	 %read{9400,9400} %write{9399,9399}
temp	float	$tmp5277	 %read{9403,9403} %write{9402,9402}
temp	int	$tmp5278	 %read{9404,9404} %write{9403,9403}
temp	float	$tmp5279	 %read{9406,9406} %write{9405,9405}
temp	float	$tmp5280	 %read{9408,9408} %write{9407,9407}
temp	float	$tmp5281	 %read{9410,9410} %write{9409,9409}
temp	point	$tmp5282	 %read{9413,9413} %write{9412,9412}
temp	point	$tmp5283	 %read{9415,9415} %write{9414,9414}
temp	point	$tmp5284	 %read{9417,9417} %write{9416,9416}
temp	float	$tmp5285	 %read{9420,9420} %write{9419,9419}
temp	int	$tmp5286	 %read{9421,9421} %write{9420,9420}
temp	float	$tmp5287	 %read{9423,9423} %write{9422,9422}
temp	float	$tmp5288	 %read{9425,9425} %write{9424,9424}
temp	point	$tmp5289	 %read{9428,9428} %write{9427,9427}
temp	point	$tmp5290	 %read{9430,9430} %write{9429,9429}
temp	float	$tmp5291	 %read{9433,9433} %write{9432,9432}
temp	int	$tmp5292	 %read{9434,9434} %write{9433,9433}
temp	float	$tmp5293	 %read{9436,9436} %write{9435,9435}
temp	point	$tmp5294	 %read{9439,9439} %write{9438,9438}
temp	float	$tmp5295	 %read{9442,9442} %write{9441,9441}
temp	int	$tmp5296	 %read{9443,9443} %write{9442,9442}
temp	int	$tmp5297	 %read{2147483647,-1} %write{9446,9446}
temp	int	$tmp5298	 %read{2147483647,-1} %write{9448,9448}
temp	int	$tmp5299	 %read{2147483647,-1} %write{9450,9450}
temp	float	$tmp5300	 %read{9454,9454} %write{9453,9453}
temp	int	$tmp5301	 %read{9457,9457} %write{9456,9456}
temp	float	$tmp5302	 %read{9633,9633} %write{9632,9632}
temp	float	$tmp5303	 %read{9464,9464} %write{9463,9463}
temp	float	$tmp5304	 %read{9463,9463} %write{9462,9462}
temp	float	$tmp5305	 %read{9467,9467} %write{9466,9466}
temp	float	$tmp5306	 %read{9466,9466} %write{9465,9465}
temp	float	$tmp5307	 %read{9470,9470} %write{9469,9469}
temp	float	$tmp5308	 %read{9469,9469} %write{9468,9468}
temp	int	$tmp5309	 %read{9478,9478} %write{9477,9477}
temp	int	$tmp5310	 %read{9475,9631} %write{9475,9631}
temp	int	$tmp5311	 %read{9482,9482} %write{9481,9481}
temp	int	$tmp5312	 %read{9479,9629} %write{9479,9629}
temp	int	$tmp5313	 %read{9486,9486} %write{9485,9485}
temp	int	$tmp5314	 %read{9483,9627} %write{9483,9627}
temp	float	$tmp5315	 %read{9490,9490} %write{9487,9487}
temp	float	$tmp5316	 %read{9490,9490} %write{9488,9488}
temp	float	$tmp5317	 %read{9490,9490} %write{9489,9489}
temp	color	$tmp5318	 %read{9504,9504} %write{9503,9503}
temp	point	$tmp5319	 %read{9497,9497} %write{9496,9496}
temp	float	$tmp5320	 %read{9496,9496} %write{9493,9493}
temp	float	$tmp5321	 %read{9496,9496} %write{9494,9494}
temp	float	$tmp5322	 %read{9496,9496} %write{9495,9495}
temp	point	$tmp5323	 %read{9502,9502} %write{9501,9501}
temp	float	$tmp5324	 %read{9501,9501} %write{9498,9498}
temp	float	$tmp5325	 %read{9501,9501} %write{9499,9499}
temp	float	$tmp5326	 %read{9501,9501} %write{9500,9500}
temp	point	$tmp5327	 %read{9506,9506} %write{9505,9505}
temp	int	$tmp5328	 %read{9509,9509} %write{9508,9508}
temp	int	$tmp5329	 %read{9513,9513} %write{9512,9512}
temp	int	$tmp5330	 %read{9517,9517} %write{9516,9516}
temp	float	$tmp5331	 %read{9522,9522} %write{9519,9519}
temp	float	$tmp5332	 %read{9519,9519} %write{9518,9518}
temp	float	$tmp5333	 %read{9522,9522} %write{9521,9521}
temp	float	$tmp5334	 %read{9521,9521} %write{9520,9520}
temp	float	$tmp5335	 %read{9525,9525} %write{9522,9522}
temp	float	$tmp5336	 %read{9525,9525} %write{9524,9524}
temp	float	$tmp5337	 %read{9524,9524} %write{9523,9523}
temp	int	$tmp5338	 %read{9528,9528} %write{9527,9527}
temp	float	$tmp5339	 %read{9536,9536} %write{9530,9530}
temp	float	$tmp5340	 %read{9530,9530} %write{9529,9529}
temp	float	$tmp5341	 %read{9536,9536} %write{9535,9535}
temp	float	$tmp5342	 %read{9535,9535} %write{9532,9532}
temp	float	$tmp5343	 %read{9532,9532} %write{9531,9531}
temp	float	$tmp5344	 %read{9535,9535} %write{9534,9534}
temp	float	$tmp5345	 %read{9534,9534} %write{9533,9533}
temp	int	$tmp5346	 %read{9539,9539} %write{9538,9538}
temp	float	$tmp5347	 %read{9546,9546} %write{9542,9542}
temp	float	$tmp5348	 %read{9542,9542} %write{9541,9541}
temp	float	$tmp5349	 %read{9541,9541} %write{9540,9540}
temp	float	$tmp5350	 %read{9546,9546} %write{9545,9545}
temp	float	$tmp5351	 %read{9545,9545} %write{9544,9544}
temp	float	$tmp5352	 %read{9544,9544} %write{9543,9543}
temp	float	$tmp5353	 %read{9550,9550} %write{9546,9546}
temp	float	$tmp5354	 %read{9550,9550} %write{9549,9549}
temp	float	$tmp5355	 %read{9549,9549} %write{9548,9548}
temp	float	$tmp5356	 %read{9548,9548} %write{9547,9547}
temp	int	$tmp5357	 %read{9553,9553} %write{9552,9552}
temp	float	$tmp5358	 %read{9558,9558} %write{9557,9557}
temp	float	$tmp5359	 %read{9557,9557} %write{9556,9556}
temp	vector	$tmp5360	 %read{9556,9556} %write{9554,9554}
temp	vector	$tmp5361	 %read{9556,9556} %write{9555,9555}
temp	int	$tmp5362	 %read{9561,9561} %write{9560,9560}
temp	float	$tmp5363	 %read{9568,9568} %write{9564,9564}
temp	float	$tmp5364	 %read{9564,9564} %write{9563,9563}
temp	float	$tmp5365	 %read{9563,9563} %write{9562,9562}
temp	float	$tmp5366	 %read{9568,9568} %write{9567,9567}
temp	float	$tmp5367	 %read{9567,9567} %write{9566,9566}
temp	float	$tmp5368	 %read{9566,9566} %write{9565,9565}
temp	float	$tmp5369	 %read{9572,9572} %write{9568,9568}
temp	float	$tmp5370	 %read{9572,9572} %write{9571,9571}
temp	float	$tmp5371	 %read{9571,9571} %write{9570,9570}
temp	float	$tmp5372	 %read{9570,9570} %write{9569,9569}
temp	float	$tmp5373	 %read{9574,9574} %write{9572,9572}
temp	float	$tmp5374	 %read{9574,9574} %write{9573,9573}
temp	point	$tmp5375	 %read{9581,9581} %write{9580,9580}
temp	float	$tmp5376	 %read{9580,9580} %write{9577,9577}
temp	float	$tmp5377	 %read{9580,9580} %write{9578,9578}
temp	float	$tmp5378	 %read{9580,9580} %write{9579,9579}
temp	float	$tmp5379	 %read{9583,9583} %write{9582,9582}
temp	int	$tmp5380	 %read{9584,9584} %write{9583,9583}
temp	float	$tmp5381	 %read{9586,9586} %write{9585,9585}
temp	float	$tmp5382	 %read{9588,9588} %write{9587,9587}
temp	float	$tmp5383	 %read{9590,9590} %write{9589,9589}
temp	point	$tmp5384	 %read{9593,9593} %write{9592,9592}
temp	point	$tmp5385	 %read{9595,9595} %write{9594,9594}
temp	point	$tmp5386	 %read{9597,9597} %write{9596,9596}
temp	float	$tmp5387	 %read{9600,9600} %write{9599,9599}
temp	int	$tmp5388	 %read{9601,9601} %write{9600,9600}
temp	float	$tmp5389	 %read{9603,9603} %write{9602,9602}
temp	float	$tmp5390	 %read{9605,9605} %write{9604,9604}
temp	point	$tmp5391	 %read{9608,9608} %write{9607,9607}
temp	point	$tmp5392	 %read{9610,9610} %write{9609,9609}
temp	float	$tmp5393	 %read{9613,9613} %write{9612,9612}
temp	int	$tmp5394	 %read{9614,9614} %write{9613,9613}
temp	float	$tmp5395	 %read{9616,9616} %write{9615,9615}
temp	point	$tmp5396	 %read{9619,9619} %write{9618,9618}
temp	float	$tmp5397	 %read{9622,9622} %write{9621,9621}
temp	int	$tmp5398	 %read{9623,9623} %write{9622,9622}
temp	int	$tmp5399	 %read{2147483647,-1} %write{9626,9626}
temp	int	$tmp5400	 %read{2147483647,-1} %write{9628,9628}
temp	int	$tmp5401	 %read{2147483647,-1} %write{9630,9630}
temp	float	$tmp5402	 %read{9634,9634} %write{9633,9633}
temp	int	$tmp5403	 %read{9637,9637} %write{9636,9636}
temp	float	$tmp5404	 %read{9813,9813} %write{9812,9812}
temp	float	$tmp5405	 %read{9644,9644} %write{9643,9643}
temp	float	$tmp5406	 %read{9643,9643} %write{9642,9642}
temp	float	$tmp5407	 %read{9647,9647} %write{9646,9646}
temp	float	$tmp5408	 %read{9646,9646} %write{9645,9645}
temp	float	$tmp5409	 %read{9650,9650} %write{9649,9649}
temp	float	$tmp5410	 %read{9649,9649} %write{9648,9648}
temp	int	$tmp5411	 %read{9658,9658} %write{9657,9657}
temp	int	$tmp5412	 %read{9655,9811} %write{9655,9811}
temp	int	$tmp5413	 %read{9662,9662} %write{9661,9661}
temp	int	$tmp5414	 %read{9659,9809} %write{9659,9809}
temp	int	$tmp5415	 %read{9666,9666} %write{9665,9665}
temp	int	$tmp5416	 %read{9663,9807} %write{9663,9807}
temp	float	$tmp5417	 %read{9670,9670} %write{9667,9667}
temp	float	$tmp5418	 %read{9670,9670} %write{9668,9668}
temp	float	$tmp5419	 %read{9670,9670} %write{9669,9669}
temp	color	$tmp5420	 %read{9684,9684} %write{9683,9683}
temp	point	$tmp5421	 %read{9677,9677} %write{9676,9676}
temp	float	$tmp5422	 %read{9676,9676} %write{9673,9673}
temp	float	$tmp5423	 %read{9676,9676} %write{9674,9674}
temp	float	$tmp5424	 %read{9676,9676} %write{9675,9675}
temp	point	$tmp5425	 %read{9682,9682} %write{9681,9681}
temp	float	$tmp5426	 %read{9681,9681} %write{9678,9678}
temp	float	$tmp5427	 %read{9681,9681} %write{9679,9679}
temp	float	$tmp5428	 %read{9681,9681} %write{9680,9680}
temp	point	$tmp5429	 %read{9686,9686} %write{9685,9685}
temp	int	$tmp5430	 %read{9689,9689} %write{9688,9688}
temp	int	$tmp5431	 %read{9693,9693} %write{9692,9692}
temp	int	$tmp5432	 %read{9697,9697} %write{9696,9696}
temp	float	$tmp5433	 %read{9702,9702} %write{9699,9699}
temp	float	$tmp5434	 %read{9699,9699} %write{9698,9698}
temp	float	$tmp5435	 %read{9702,9702} %write{9701,9701}
temp	float	$tmp5436	 %read{9701,9701} %write{9700,9700}
temp	float	$tmp5437	 %read{9705,9705} %write{9702,9702}
temp	float	$tmp5438	 %read{9705,9705} %write{9704,9704}
temp	float	$tmp5439	 %read{9704,9704} %write{9703,9703}
temp	int	$tmp5440	 %read{9708,9708} %write{9707,9707}
temp	float	$tmp5441	 %read{9716,9716} %write{9710,9710}
temp	float	$tmp5442	 %read{9710,9710} %write{9709,9709}
temp	float	$tmp5443	 %read{9716,9716} %write{9715,9715}
temp	float	$tmp5444	 %read{9715,9715} %write{9712,9712}
temp	float	$tmp5445	 %read{9712,9712} %write{9711,9711}
temp	float	$tmp5446	 %read{9715,9715} %write{9714,9714}
temp	float	$tmp5447	 %read{9714,9714} %write{9713,9713}
temp	int	$tmp5448	 %read{9719,9719} %write{9718,9718}
temp	float	$tmp5449	 %read{9726,9726} %write{9722,9722}
temp	float	$tmp5450	 %read{9722,9722} %write{9721,9721}
temp	float	$tmp5451	 %read{9721,9721} %write{9720,9720}
temp	float	$tmp5452	 %read{9726,9726} %write{9725,9725}
temp	float	$tmp5453	 %read{9725,9725} %write{9724,9724}
temp	float	$tmp5454	 %read{9724,9724} %write{9723,9723}
temp	float	$tmp5455	 %read{9730,9730} %write{9726,9726}
temp	float	$tmp5456	 %read{9730,9730} %write{9729,9729}
temp	float	$tmp5457	 %read{9729,9729} %write{9728,9728}
temp	float	$tmp5458	 %read{9728,9728} %write{9727,9727}
temp	int	$tmp5459	 %read{9733,9733} %write{9732,9732}
temp	float	$tmp5460	 %read{9738,9738} %write{9737,9737}
temp	float	$tmp5461	 %read{9737,9737} %write{9736,9736}
temp	vector	$tmp5462	 %read{9736,9736} %write{9734,9734}
temp	vector	$tmp5463	 %read{9736,9736} %write{9735,9735}
temp	int	$tmp5464	 %read{9741,9741} %write{9740,9740}
temp	float	$tmp5465	 %read{9748,9748} %write{9744,9744}
temp	float	$tmp5466	 %read{9744,9744} %write{9743,9743}
temp	float	$tmp5467	 %read{9743,9743} %write{9742,9742}
temp	float	$tmp5468	 %read{9748,9748} %write{9747,9747}
temp	float	$tmp5469	 %read{9747,9747} %write{9746,9746}
temp	float	$tmp5470	 %read{9746,9746} %write{9745,9745}
temp	float	$tmp5471	 %read{9752,9752} %write{9748,9748}
temp	float	$tmp5472	 %read{9752,9752} %write{9751,9751}
temp	float	$tmp5473	 %read{9751,9751} %write{9750,9750}
temp	float	$tmp5474	 %read{9750,9750} %write{9749,9749}
temp	float	$tmp5475	 %read{9754,9754} %write{9752,9752}
temp	float	$tmp5476	 %read{9754,9754} %write{9753,9753}
temp	point	$tmp5477	 %read{9761,9761} %write{9760,9760}
temp	float	$tmp5478	 %read{9760,9760} %write{9757,9757}
temp	float	$tmp5479	 %read{9760,9760} %write{9758,9758}
temp	float	$tmp5480	 %read{9760,9760} %write{9759,9759}
temp	float	$tmp5481	 %read{9763,9763} %write{9762,9762}
temp	int	$tmp5482	 %read{9764,9764} %write{9763,9763}
temp	float	$tmp5483	 %read{9766,9766} %write{9765,9765}
temp	float	$tmp5484	 %read{9768,9768} %write{9767,9767}
temp	float	$tmp5485	 %read{9770,9770} %write{9769,9769}
temp	point	$tmp5486	 %read{9773,9773} %write{9772,9772}
temp	point	$tmp5487	 %read{9775,9775} %write{9774,9774}
temp	point	$tmp5488	 %read{9777,9777} %write{9776,9776}
temp	float	$tmp5489	 %read{9780,9780} %write{9779,9779}
temp	int	$tmp5490	 %read{9781,9781} %write{9780,9780}
temp	float	$tmp5491	 %read{9783,9783} %write{9782,9782}
temp	float	$tmp5492	 %read{9785,9785} %write{9784,9784}
temp	point	$tmp5493	 %read{9788,9788} %write{9787,9787}
temp	point	$tmp5494	 %read{9790,9790} %write{9789,9789}
temp	float	$tmp5495	 %read{9793,9793} %write{9792,9792}
temp	int	$tmp5496	 %read{9794,9794} %write{9793,9793}
temp	float	$tmp5497	 %read{9796,9796} %write{9795,9795}
temp	point	$tmp5498	 %read{9799,9799} %write{9798,9798}
temp	float	$tmp5499	 %read{9802,9802} %write{9801,9801}
temp	int	$tmp5500	 %read{9803,9803} %write{9802,9802}
temp	int	$tmp5501	 %read{2147483647,-1} %write{9806,9806}
temp	int	$tmp5502	 %read{2147483647,-1} %write{9808,9808}
temp	int	$tmp5503	 %read{2147483647,-1} %write{9810,9810}
temp	float	$tmp5504	 %read{9814,9814} %write{9813,9813}
temp	int	$tmp5505	 %read{9817,9817} %write{9816,9816}
temp	float	$tmp5506	 %read{9995,9995} %write{9994,9994}
temp	float	$tmp5507	 %read{9824,9824} %write{9823,9823}
temp	float	$tmp5508	 %read{9823,9823} %write{9822,9822}
temp	float	$tmp5509	 %read{9827,9827} %write{9826,9826}
temp	float	$tmp5510	 %read{9826,9826} %write{9825,9825}
temp	float	$tmp5511	 %read{9830,9830} %write{9829,9829}
temp	float	$tmp5512	 %read{9829,9829} %write{9828,9828}
temp	int	$tmp5513	 %read{9838,9838} %write{9837,9837}
temp	int	$tmp5514	 %read{9835,9991} %write{9835,9991}
temp	int	$tmp5515	 %read{9842,9842} %write{9841,9841}
temp	int	$tmp5516	 %read{9839,9989} %write{9839,9989}
temp	int	$tmp5517	 %read{9846,9846} %write{9845,9845}
temp	int	$tmp5518	 %read{9843,9987} %write{9843,9987}
temp	float	$tmp5519	 %read{9850,9850} %write{9847,9847}
temp	float	$tmp5520	 %read{9850,9850} %write{9848,9848}
temp	float	$tmp5521	 %read{9850,9850} %write{9849,9849}
temp	color	$tmp5522	 %read{9864,9864} %write{9863,9863}
temp	point	$tmp5523	 %read{9857,9857} %write{9856,9856}
temp	float	$tmp5524	 %read{9856,9856} %write{9853,9853}
temp	float	$tmp5525	 %read{9856,9856} %write{9854,9854}
temp	float	$tmp5526	 %read{9856,9856} %write{9855,9855}
temp	point	$tmp5527	 %read{9862,9862} %write{9861,9861}
temp	float	$tmp5528	 %read{9861,9861} %write{9858,9858}
temp	float	$tmp5529	 %read{9861,9861} %write{9859,9859}
temp	float	$tmp5530	 %read{9861,9861} %write{9860,9860}
temp	point	$tmp5531	 %read{9866,9866} %write{9865,9865}
temp	int	$tmp5532	 %read{9869,9869} %write{9868,9868}
temp	int	$tmp5533	 %read{9873,9873} %write{9872,9872}
temp	int	$tmp5534	 %read{9877,9877} %write{9876,9876}
temp	float	$tmp5535	 %read{9882,9882} %write{9879,9879}
temp	float	$tmp5536	 %read{9879,9879} %write{9878,9878}
temp	float	$tmp5537	 %read{9882,9882} %write{9881,9881}
temp	float	$tmp5538	 %read{9881,9881} %write{9880,9880}
temp	float	$tmp5539	 %read{9885,9885} %write{9882,9882}
temp	float	$tmp5540	 %read{9885,9885} %write{9884,9884}
temp	float	$tmp5541	 %read{9884,9884} %write{9883,9883}
temp	int	$tmp5542	 %read{9888,9888} %write{9887,9887}
temp	float	$tmp5543	 %read{9896,9896} %write{9890,9890}
temp	float	$tmp5544	 %read{9890,9890} %write{9889,9889}
temp	float	$tmp5545	 %read{9896,9896} %write{9895,9895}
temp	float	$tmp5546	 %read{9895,9895} %write{9892,9892}
temp	float	$tmp5547	 %read{9892,9892} %write{9891,9891}
temp	float	$tmp5548	 %read{9895,9895} %write{9894,9894}
temp	float	$tmp5549	 %read{9894,9894} %write{9893,9893}
temp	int	$tmp5550	 %read{9899,9899} %write{9898,9898}
temp	float	$tmp5551	 %read{9906,9906} %write{9902,9902}
temp	float	$tmp5552	 %read{9902,9902} %write{9901,9901}
temp	float	$tmp5553	 %read{9901,9901} %write{9900,9900}
temp	float	$tmp5554	 %read{9906,9906} %write{9905,9905}
temp	float	$tmp5555	 %read{9905,9905} %write{9904,9904}
temp	float	$tmp5556	 %read{9904,9904} %write{9903,9903}
temp	float	$tmp5557	 %read{9910,9910} %write{9906,9906}
temp	float	$tmp5558	 %read{9910,9910} %write{9909,9909}
temp	float	$tmp5559	 %read{9909,9909} %write{9908,9908}
temp	float	$tmp5560	 %read{9908,9908} %write{9907,9907}
temp	int	$tmp5561	 %read{9913,9913} %write{9912,9912}
temp	float	$tmp5562	 %read{9918,9918} %write{9917,9917}
temp	float	$tmp5563	 %read{9917,9917} %write{9916,9916}
temp	vector	$tmp5564	 %read{9916,9916} %write{9914,9914}
temp	vector	$tmp5565	 %read{9916,9916} %write{9915,9915}
temp	int	$tmp5566	 %read{9921,9921} %write{9920,9920}
temp	float	$tmp5567	 %read{9928,9928} %write{9924,9924}
temp	float	$tmp5568	 %read{9924,9924} %write{9923,9923}
temp	float	$tmp5569	 %read{9923,9923} %write{9922,9922}
temp	float	$tmp5570	 %read{9928,9928} %write{9927,9927}
temp	float	$tmp5571	 %read{9927,9927} %write{9926,9926}
temp	float	$tmp5572	 %read{9926,9926} %write{9925,9925}
temp	float	$tmp5573	 %read{9932,9932} %write{9928,9928}
temp	float	$tmp5574	 %read{9932,9932} %write{9931,9931}
temp	float	$tmp5575	 %read{9931,9931} %write{9930,9930}
temp	float	$tmp5576	 %read{9930,9930} %write{9929,9929}
temp	float	$tmp5577	 %read{9934,9934} %write{9932,9932}
temp	float	$tmp5578	 %read{9934,9934} %write{9933,9933}
temp	point	$tmp5579	 %read{9941,9941} %write{9940,9940}
temp	float	$tmp5580	 %read{9940,9940} %write{9937,9937}
temp	float	$tmp5581	 %read{9940,9940} %write{9938,9938}
temp	float	$tmp5582	 %read{9940,9940} %write{9939,9939}
temp	float	$tmp5583	 %read{9943,9943} %write{9942,9942}
temp	int	$tmp5584	 %read{9944,9944} %write{9943,9943}
temp	float	$tmp5585	 %read{9946,9946} %write{9945,9945}
temp	float	$tmp5586	 %read{9948,9948} %write{9947,9947}
temp	float	$tmp5587	 %read{9950,9950} %write{9949,9949}
temp	point	$tmp5588	 %read{9953,9953} %write{9952,9952}
temp	point	$tmp5589	 %read{9955,9955} %write{9954,9954}
temp	point	$tmp5590	 %read{9957,9957} %write{9956,9956}
temp	float	$tmp5591	 %read{9960,9960} %write{9959,9959}
temp	int	$tmp5592	 %read{9961,9961} %write{9960,9960}
temp	float	$tmp5593	 %read{9963,9963} %write{9962,9962}
temp	float	$tmp5594	 %read{9965,9965} %write{9964,9964}
temp	point	$tmp5595	 %read{9968,9968} %write{9967,9967}
temp	point	$tmp5596	 %read{9970,9970} %write{9969,9969}
temp	float	$tmp5597	 %read{9973,9973} %write{9972,9972}
temp	int	$tmp5598	 %read{9974,9974} %write{9973,9973}
temp	float	$tmp5599	 %read{9976,9976} %write{9975,9975}
temp	point	$tmp5600	 %read{9979,9979} %write{9978,9978}
temp	float	$tmp5601	 %read{9982,9982} %write{9981,9981}
temp	int	$tmp5602	 %read{9983,9983} %write{9982,9982}
temp	int	$tmp5603	 %read{2147483647,-1} %write{9986,9986}
temp	int	$tmp5604	 %read{2147483647,-1} %write{9988,9988}
temp	int	$tmp5605	 %read{2147483647,-1} %write{9990,9990}
temp	float	$tmp5606	 %read{9994,9994} %write{9992,9992}
temp	float	$tmp5607	 %read{9994,9994} %write{9993,9993}
temp	float	$tmp5608	 %read{9996,9996} %write{9995,9995}
temp	int	$tmp5609	 %read{9999,9999} %write{9998,9998}
temp	float	$tmp5610	 %read{10184,10184} %write{10181,10182}
temp	float	$tmp5611	 %read{10178,10178} %write{10177,10177}
temp	float	$tmp5612	 %read{10007,10007} %write{10006,10006}
temp	float	$tmp5613	 %read{10006,10006} %write{10005,10005}
temp	float	$tmp5614	 %read{10010,10010} %write{10009,10009}
temp	float	$tmp5615	 %read{10009,10009} %write{10008,10008}
temp	float	$tmp5616	 %read{10013,10013} %write{10012,10012}
temp	float	$tmp5617	 %read{10012,10012} %write{10011,10011}
temp	int	$tmp5618	 %read{10021,10021} %write{10020,10020}
temp	int	$tmp5619	 %read{10018,10174} %write{10018,10174}
temp	int	$tmp5620	 %read{10025,10025} %write{10024,10024}
temp	int	$tmp5621	 %read{10022,10172} %write{10022,10172}
temp	int	$tmp5622	 %read{10029,10029} %write{10028,10028}
temp	int	$tmp5623	 %read{10026,10170} %write{10026,10170}
temp	float	$tmp5624	 %read{10033,10033} %write{10030,10030}
temp	float	$tmp5625	 %read{10033,10033} %write{10031,10031}
temp	float	$tmp5626	 %read{10033,10033} %write{10032,10032}
temp	color	$tmp5627	 %read{10047,10047} %write{10046,10046}
temp	point	$tmp5628	 %read{10040,10040} %write{10039,10039}
temp	float	$tmp5629	 %read{10039,10039} %write{10036,10036}
temp	float	$tmp5630	 %read{10039,10039} %write{10037,10037}
temp	float	$tmp5631	 %read{10039,10039} %write{10038,10038}
temp	point	$tmp5632	 %read{10045,10045} %write{10044,10044}
temp	float	$tmp5633	 %read{10044,10044} %write{10041,10041}
temp	float	$tmp5634	 %read{10044,10044} %write{10042,10042}
temp	float	$tmp5635	 %read{10044,10044} %write{10043,10043}
temp	point	$tmp5636	 %read{10049,10049} %write{10048,10048}
temp	int	$tmp5637	 %read{10052,10052} %write{10051,10051}
temp	int	$tmp5638	 %read{10056,10056} %write{10055,10055}
temp	int	$tmp5639	 %read{10060,10060} %write{10059,10059}
temp	float	$tmp5640	 %read{10065,10065} %write{10062,10062}
temp	float	$tmp5641	 %read{10062,10062} %write{10061,10061}
temp	float	$tmp5642	 %read{10065,10065} %write{10064,10064}
temp	float	$tmp5643	 %read{10064,10064} %write{10063,10063}
temp	float	$tmp5644	 %read{10068,10068} %write{10065,10065}
temp	float	$tmp5645	 %read{10068,10068} %write{10067,10067}
temp	float	$tmp5646	 %read{10067,10067} %write{10066,10066}
temp	int	$tmp5647	 %read{10071,10071} %write{10070,10070}
temp	float	$tmp5648	 %read{10079,10079} %write{10073,10073}
temp	float	$tmp5649	 %read{10073,10073} %write{10072,10072}
temp	float	$tmp5650	 %read{10079,10079} %write{10078,10078}
temp	float	$tmp5651	 %read{10078,10078} %write{10075,10075}
temp	float	$tmp5652	 %read{10075,10075} %write{10074,10074}
temp	float	$tmp5653	 %read{10078,10078} %write{10077,10077}
temp	float	$tmp5654	 %read{10077,10077} %write{10076,10076}
temp	int	$tmp5655	 %read{10082,10082} %write{10081,10081}
temp	float	$tmp5656	 %read{10089,10089} %write{10085,10085}
temp	float	$tmp5657	 %read{10085,10085} %write{10084,10084}
temp	float	$tmp5658	 %read{10084,10084} %write{10083,10083}
temp	float	$tmp5659	 %read{10089,10089} %write{10088,10088}
temp	float	$tmp5660	 %read{10088,10088} %write{10087,10087}
temp	float	$tmp5661	 %read{10087,10087} %write{10086,10086}
temp	float	$tmp5662	 %read{10093,10093} %write{10089,10089}
temp	float	$tmp5663	 %read{10093,10093} %write{10092,10092}
temp	float	$tmp5664	 %read{10092,10092} %write{10091,10091}
temp	float	$tmp5665	 %read{10091,10091} %write{10090,10090}
temp	int	$tmp5666	 %read{10096,10096} %write{10095,10095}
temp	float	$tmp5667	 %read{10101,10101} %write{10100,10100}
temp	float	$tmp5668	 %read{10100,10100} %write{10099,10099}
temp	vector	$tmp5669	 %read{10099,10099} %write{10097,10097}
temp	vector	$tmp5670	 %read{10099,10099} %write{10098,10098}
temp	int	$tmp5671	 %read{10104,10104} %write{10103,10103}
temp	float	$tmp5672	 %read{10111,10111} %write{10107,10107}
temp	float	$tmp5673	 %read{10107,10107} %write{10106,10106}
temp	float	$tmp5674	 %read{10106,10106} %write{10105,10105}
temp	float	$tmp5675	 %read{10111,10111} %write{10110,10110}
temp	float	$tmp5676	 %read{10110,10110} %write{10109,10109}
temp	float	$tmp5677	 %read{10109,10109} %write{10108,10108}
temp	float	$tmp5678	 %read{10115,10115} %write{10111,10111}
temp	float	$tmp5679	 %read{10115,10115} %write{10114,10114}
temp	float	$tmp5680	 %read{10114,10114} %write{10113,10113}
temp	float	$tmp5681	 %read{10113,10113} %write{10112,10112}
temp	float	$tmp5682	 %read{10117,10117} %write{10115,10115}
temp	float	$tmp5683	 %read{10117,10117} %write{10116,10116}
temp	point	$tmp5684	 %read{10124,10124} %write{10123,10123}
temp	float	$tmp5685	 %read{10123,10123} %write{10120,10120}
temp	float	$tmp5686	 %read{10123,10123} %write{10121,10121}
temp	float	$tmp5687	 %read{10123,10123} %write{10122,10122}
temp	float	$tmp5688	 %read{10126,10126} %write{10125,10125}
temp	int	$tmp5689	 %read{10127,10127} %write{10126,10126}
temp	float	$tmp5690	 %read{10129,10129} %write{10128,10128}
temp	float	$tmp5691	 %read{10131,10131} %write{10130,10130}
temp	float	$tmp5692	 %read{10133,10133} %write{10132,10132}
temp	point	$tmp5693	 %read{10136,10136} %write{10135,10135}
temp	point	$tmp5694	 %read{10138,10138} %write{10137,10137}
temp	point	$tmp5695	 %read{10140,10140} %write{10139,10139}
temp	float	$tmp5696	 %read{10143,10143} %write{10142,10142}
temp	int	$tmp5697	 %read{10144,10144} %write{10143,10143}
temp	float	$tmp5698	 %read{10146,10146} %write{10145,10145}
temp	float	$tmp5699	 %read{10148,10148} %write{10147,10147}
temp	point	$tmp5700	 %read{10151,10151} %write{10150,10150}
temp	point	$tmp5701	 %read{10153,10153} %write{10152,10152}
temp	float	$tmp5702	 %read{10156,10156} %write{10155,10155}
temp	int	$tmp5703	 %read{10157,10157} %write{10156,10156}
temp	float	$tmp5704	 %read{10159,10159} %write{10158,10158}
temp	point	$tmp5705	 %read{10162,10162} %write{10161,10161}
temp	float	$tmp5706	 %read{10165,10165} %write{10164,10164}
temp	int	$tmp5707	 %read{10166,10166} %write{10165,10165}
temp	int	$tmp5708	 %read{2147483647,-1} %write{10169,10169}
temp	int	$tmp5709	 %read{2147483647,-1} %write{10171,10171}
temp	int	$tmp5710	 %read{2147483647,-1} %write{10173,10173}
temp	float	$tmp5711	 %read{10177,10177} %write{10175,10175}
temp	float	$tmp5712	 %read{10177,10177} %write{10176,10176}
temp	int	$tmp5713	 %read{10180,10180} %write{10179,10179}
temp	float	$tmp5714	 %read{10185,10185} %write{10184,10184}
temp	int	$tmp5715	 %read{10188,10188} %write{10187,10187}
temp	float	$tmp5716	 %read{10194,10194} %write{10193,10193}
temp	float	$tmp5717	 %read{10195,10195} %write{10194,10194}
temp	float	$tmp5718	 %read{10197,10197} %write{10196,10196}
temp	int	$tmp5719	 %read{10199,10199} %write{10198,10198}
temp	float	$tmp5720	 %read{10204,10204} %write{10199,10199}
temp	int	$tmp5721	 %read{10201,10201} %write{10200,10200}
temp	int	$tmp5722	 %read{10202,10202} %write{10201,10201}
temp	int	$tmp5723	 %read{10203,10203} %write{10202,10202}
temp	float	$tmp5724	 %read{10204,10204} %write{10203,10203}
temp	float	$tmp5725	 %read{10205,10205} %write{10204,10204}
temp	int	$tmp5726	 %read{10207,10207} %write{10206,10206}
temp	int	$tmp5727	 %read{10208,10208} %write{10207,10207}
temp	float	$tmp5728	 %read{10213,10213} %write{10208,10208}
temp	int	$tmp5729	 %read{10210,10210} %write{10209,10209}
temp	int	$tmp5730	 %read{10211,10211} %write{10210,10210}
temp	int	$tmp5731	 %read{10212,10212} %write{10211,10211}
temp	float	$tmp5732	 %read{10213,10213} %write{10212,10212}
temp	float	$tmp5733	 %read{10214,10214} %write{10213,10213}
temp	float	$tmp5734	 %read{10216,10216} %write{10215,10215}
temp	float	$tmp5735	 %read{10218,10218} %write{10216,10216}
temp	float	$tmp5736	 %read{10218,10218} %write{10217,10217}
temp	int	$tmp5737	 %read{10221,10221} %write{10220,10220}
temp	float	$tmp5738	 %read{10226,10226} %write{10221,10221}
temp	int	$tmp5739	 %read{10223,10223} %write{10222,10222}
temp	int	$tmp5740	 %read{10224,10224} %write{10223,10223}
temp	int	$tmp5741	 %read{10225,10225} %write{10224,10224}
temp	float	$tmp5742	 %read{10226,10226} %write{10225,10225}
temp	float	$tmp5743	 %read{10227,10227} %write{10226,10226}
code Vector
# intern/cycles/kernel/shaders/node_noise_texture.osl:51
# 	point Vector = P,
	assign		Vector P 	%filename{"intern/cycles/kernel/shaders/node_noise_texture.osl"} %line{51} %argrw{"wr"}
code ___main___
# intern/cycles/kernel/shaders/node_noise_texture.osl:55
# 	point p = Vector;
	assign		p Vector 	%filename{"intern/cycles/kernel/shaders/node_noise_texture.osl"} %line{55} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_noise_texture.osl:57
# 	if (use_mapping)
	if		use_mapping 4 4 	%line{57} %argrw{"r"}
# intern/cycles/kernel/shaders/node_noise_texture.osl:58
# 		p = transform(mapping, p);
	transform	p mapping p 	%line{58} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_noise_texture.osl:60
# 	string Basis = "Perlin";
	assign		Basis $const1 	%line{60} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_noise_texture.osl:61
# 	Fac = noise(p * Scale, Basis, Distortion, Detail, Fac, Color);
	mul		$tmp1 p Scale 	%line{61} %argrw{"wrr"}
	functioncall	$const2 10232 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_noise_texture.osl:27
# 	int hard = 0;
	assign		___646_hard $const3 	%line{27} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_noise_texture.osl:29
# 	if (distortion != 0.0) {
	neq		$tmp2 Distortion $const4 	%line{29} %argrw{"wrr"}
	if		$tmp2 3355 3355 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_noise_texture.osl:30
# 		r[0] = noise_basis(p + point(13.5), basis) * distortion;
	add		$tmp5 $tmp1 $const5 	%line{30} %argrw{"wrr"}
	functioncall	$const6 1123 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:173
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	eq		$tmp6 Basis $const1 	%filename{"intern/cycles/kernel/shaders/node_texture.h"} %line{173} %argrw{"wrr"}
	if		$tmp6 27 27 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:174
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const8 26 	%line{174} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:154
# 	float f = 0.0;
	assign		___633_f $const4 	%line{154} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:157
# 	if (type == 0)
	eq		$tmp7 $const7 $const3 	%line{157} %argrw{"wrr"}
	if		$tmp7 19 20 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:158
# 		f = noise("perlin", p);
	noise		___633_f $const9 $tmp5 	%line{158} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:162
# 		f = noise(p);
	noise		___633_f $tmp5 	%line{162} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:165
# 	if (!isfinite(f))
	isfinite	$tmp8 ___633_f 	%line{165} %argrw{"wr"}
	eq		$tmp9 $tmp8 $const3 	%argrw{"wrr"}
	if		$tmp9 25 25 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:166
# 		return 0.5;
	assign		$tmp3 $const10 	%line{166} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:168
# 	return f;
	assign		$tmp3 ___633_f 	%line{168} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 		return safe_noise(p, 1);
	return	%line{174}
# intern/cycles/kernel/shaders/node_texture.h:175
# 	if (basis == "Voronoi F1")
	eq		$tmp10 Basis $const11 	%line{175} %argrw{"wrr"}
	if		$tmp10 207 207 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	functioncall	$const12 206 	%line{176} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 204 	%line{143} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:130
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 204 	%line{130} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 203 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp13 $tmp5 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp12 $tmp13 	%argrw{"wr"}
	assign		___608_xi $tmp12 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp15 $tmp5 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp14 $tmp15 	%argrw{"wr"}
	assign		___608_yi $tmp14 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp17 $tmp5 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp16 $tmp17 	%argrw{"wr"}
	assign		___608_zi $tmp16 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp19 48 50 201 203 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp18 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp19 ___608_xx $tmp18 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp21 52 54 199 201 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp20 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp21 ___608_yy $tmp20 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp23 56 58 197 199 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp22 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp23 ___608_zz $tmp22 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp24 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp25 ___608_yy 	%argrw{"wr"}
	assign		$tmp26 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp24 $tmp25 $tmp26 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 75 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp29 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp30 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp31 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp28 $tmp29 $tmp30 $tmp31 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp28 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp33 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp34 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp35 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp32 $tmp33 $tmp34 $tmp35 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp32 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp27 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp27 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp36 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp5 $tmp36 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 148 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp37 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp37 83 83 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp38 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp38 87 87 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp39 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp39 98 98 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp41 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp40 $tmp41 	%argrw{"wr"}
	compref		$tmp43 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp42 $tmp43 	%argrw{"wr"}
	add		$tmp44 $tmp40 $tmp42 	%argrw{"wrr"}
	compref		$tmp46 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp45 $tmp46 	%argrw{"wr"}
	add		___614_d $tmp44 $tmp45 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp47 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp47 109 109 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp49 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp48 $tmp49 	%argrw{"wr"}
	compref		$tmp52 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp51 $tmp52 	%argrw{"wr"}
	compref		$tmp54 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp53 $tmp54 	%argrw{"wr"}
	max		$tmp50 $tmp51 $tmp53 	%argrw{"wrr"}
	max		___614_d $tmp48 $tmp50 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp55 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp55 123 123 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp58 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp57 $tmp58 	%argrw{"wr"}
	sqrt		$tmp56 $tmp57 	%argrw{"wr"}
	compref		$tmp61 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp60 $tmp61 	%argrw{"wr"}
	sqrt		$tmp59 $tmp60 	%argrw{"wr"}
	add		$tmp62 $tmp56 $tmp59 	%argrw{"wrr"}
	compref		$tmp65 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp64 $tmp65 	%argrw{"wr"}
	sqrt		$tmp63 $tmp64 	%argrw{"wr"}
	add		___614_d $tmp62 $tmp63 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp66 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp66 131 131 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp69 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp70 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp68 $tmp69 $tmp70 	%argrw{"wrr"}
	sqrt		$tmp67 $tmp68 	%argrw{"wr"}
	sqrt		___614_d $tmp67 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp71 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp71 147 147 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp74 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp73 $tmp74 	%argrw{"wr"}
	pow		$tmp72 $tmp73 $const4 	%argrw{"wrr"}
	compref		$tmp77 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp76 $tmp77 	%argrw{"wr"}
	pow		$tmp75 $tmp76 $const4 	%argrw{"wrr"}
	add		$tmp78 $tmp72 $tmp75 	%argrw{"wrr"}
	compref		$tmp81 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp80 $tmp81 	%argrw{"wr"}
	pow		$tmp79 $tmp80 $const4 	%argrw{"wrr"}
	add		$tmp82 $tmp78 $tmp79 	%argrw{"wrr"}
	div		$tmp83 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp82 $tmp83 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp85 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp86 ___608_yy 	%argrw{"wr"}
	assign		$tmp87 ___608_zz 	%argrw{"wr"}
	point		$tmp84 $tmp85 $tmp86 $tmp87 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp84 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp88 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp89 ___614_d $tmp88 	%argrw{"wrr"}
	if		$tmp89 170 197 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp90 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp90 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp91 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp91 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp92 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp92 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp93 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp93 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp94 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp94 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp95 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp95 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp96 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp97 ___614_d $tmp96 	%argrw{"wrr"}
	if		$tmp97 183 197 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp98 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp98 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp99 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp99 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp100 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp100 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp101 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp101 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp102 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp103 ___614_d $tmp102 	%argrw{"wrr"}
	if		$tmp103 192 197 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp104 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp104 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp105 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp105 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp106 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp107 ___614_d $tmp106 	%argrw{"wrr"}
	if		$tmp107 197 197 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp108 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp109 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp110 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp11 ___619_da $const3 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp111 $const13 $tmp11 	%line{143} %argrw{"wrr"}
	sub		$tmp3 $tmp111 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	return	%line{176}
# intern/cycles/kernel/shaders/node_texture.h:177
# 	if (basis == "Voronoi F2")
	eq		$tmp112 Basis $const30 	%line{177} %argrw{"wrr"}
	if		$tmp112 387 387 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	functioncall	$const31 386 	%line{178} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const32 384 	%line{144} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:131
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 384 	%line{131} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 383 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp115 $tmp5 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp114 $tmp115 	%argrw{"wr"}
	assign		___608_xi $tmp114 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp117 $tmp5 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp116 $tmp117 	%argrw{"wr"}
	assign		___608_yi $tmp116 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp119 $tmp5 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp118 $tmp119 	%argrw{"wr"}
	assign		___608_zi $tmp118 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp121 228 230 381 383 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp120 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp121 ___608_xx $tmp120 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp123 232 234 379 381 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp122 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp123 ___608_yy $tmp122 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp125 236 238 377 379 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp124 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp125 ___608_zz $tmp124 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp126 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp127 ___608_yy 	%argrw{"wr"}
	assign		$tmp128 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp126 $tmp127 $tmp128 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 255 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp131 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp132 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp133 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp130 $tmp131 $tmp132 $tmp133 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp130 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp135 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp136 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp137 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp134 $tmp135 $tmp136 $tmp137 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp134 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp129 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp129 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp138 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp5 $tmp138 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 328 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp139 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp139 263 263 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp140 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp140 267 267 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp141 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp141 278 278 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp143 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp142 $tmp143 	%argrw{"wr"}
	compref		$tmp145 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp144 $tmp145 	%argrw{"wr"}
	add		$tmp146 $tmp142 $tmp144 	%argrw{"wrr"}
	compref		$tmp148 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp147 $tmp148 	%argrw{"wr"}
	add		___614_d $tmp146 $tmp147 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp149 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp149 289 289 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp151 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp150 $tmp151 	%argrw{"wr"}
	compref		$tmp154 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp153 $tmp154 	%argrw{"wr"}
	compref		$tmp156 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp155 $tmp156 	%argrw{"wr"}
	max		$tmp152 $tmp153 $tmp155 	%argrw{"wrr"}
	max		___614_d $tmp150 $tmp152 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp157 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp157 303 303 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp160 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp159 $tmp160 	%argrw{"wr"}
	sqrt		$tmp158 $tmp159 	%argrw{"wr"}
	compref		$tmp163 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp162 $tmp163 	%argrw{"wr"}
	sqrt		$tmp161 $tmp162 	%argrw{"wr"}
	add		$tmp164 $tmp158 $tmp161 	%argrw{"wrr"}
	compref		$tmp167 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp166 $tmp167 	%argrw{"wr"}
	sqrt		$tmp165 $tmp166 	%argrw{"wr"}
	add		___614_d $tmp164 $tmp165 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp168 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp168 311 311 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp171 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp172 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp170 $tmp171 $tmp172 	%argrw{"wrr"}
	sqrt		$tmp169 $tmp170 	%argrw{"wr"}
	sqrt		___614_d $tmp169 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp173 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp173 327 327 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp176 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp175 $tmp176 	%argrw{"wr"}
	pow		$tmp174 $tmp175 $const4 	%argrw{"wrr"}
	compref		$tmp179 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp178 $tmp179 	%argrw{"wr"}
	pow		$tmp177 $tmp178 $const4 	%argrw{"wrr"}
	add		$tmp180 $tmp174 $tmp177 	%argrw{"wrr"}
	compref		$tmp183 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp182 $tmp183 	%argrw{"wr"}
	pow		$tmp181 $tmp182 $const4 	%argrw{"wrr"}
	add		$tmp184 $tmp180 $tmp181 	%argrw{"wrr"}
	div		$tmp185 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp184 $tmp185 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp187 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp188 ___608_yy 	%argrw{"wr"}
	assign		$tmp189 ___608_zz 	%argrw{"wr"}
	point		$tmp186 $tmp187 $tmp188 $tmp189 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp186 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp190 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp191 ___614_d $tmp190 	%argrw{"wrr"}
	if		$tmp191 350 377 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp192 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp192 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp193 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp193 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp194 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp194 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp195 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp195 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp196 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp196 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp197 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp197 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp198 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp199 ___614_d $tmp198 	%argrw{"wrr"}
	if		$tmp199 363 377 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp200 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp200 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp201 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp201 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp202 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp202 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp203 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp203 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp204 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp205 ___614_d $tmp204 	%argrw{"wrr"}
	if		$tmp205 372 377 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp206 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp206 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp207 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp207 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp208 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp209 ___614_d $tmp208 	%argrw{"wrr"}
	if		$tmp209 377 377 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp210 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp211 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp212 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp113 ___619_da $const7 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp213 $const13 $tmp113 	%line{144} %argrw{"wrr"}
	sub		$tmp3 $tmp213 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	return	%line{178}
# intern/cycles/kernel/shaders/node_texture.h:179
# 	if (basis == "Voronoi F3")
	eq		$tmp214 Basis $const33 	%line{179} %argrw{"wrr"}
	if		$tmp214 567 567 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	functioncall	$const34 566 	%line{180} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const35 564 	%line{145} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:132
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 564 	%line{132} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 563 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp217 $tmp5 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp216 $tmp217 	%argrw{"wr"}
	assign		___608_xi $tmp216 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp219 $tmp5 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp218 $tmp219 	%argrw{"wr"}
	assign		___608_yi $tmp218 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp221 $tmp5 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp220 $tmp221 	%argrw{"wr"}
	assign		___608_zi $tmp220 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp223 408 410 561 563 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp222 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp223 ___608_xx $tmp222 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp225 412 414 559 561 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp224 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp225 ___608_yy $tmp224 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp227 416 418 557 559 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp226 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp227 ___608_zz $tmp226 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp228 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp229 ___608_yy 	%argrw{"wr"}
	assign		$tmp230 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp228 $tmp229 $tmp230 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 435 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp233 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp234 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp235 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp232 $tmp233 $tmp234 $tmp235 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp232 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp237 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp238 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp239 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp236 $tmp237 $tmp238 $tmp239 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp236 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp231 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp231 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp240 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp5 $tmp240 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 508 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp241 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp241 443 443 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp242 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp242 447 447 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp243 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp243 458 458 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp245 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp244 $tmp245 	%argrw{"wr"}
	compref		$tmp247 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp246 $tmp247 	%argrw{"wr"}
	add		$tmp248 $tmp244 $tmp246 	%argrw{"wrr"}
	compref		$tmp250 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp249 $tmp250 	%argrw{"wr"}
	add		___614_d $tmp248 $tmp249 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp251 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp251 469 469 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp253 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp252 $tmp253 	%argrw{"wr"}
	compref		$tmp256 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp255 $tmp256 	%argrw{"wr"}
	compref		$tmp258 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp257 $tmp258 	%argrw{"wr"}
	max		$tmp254 $tmp255 $tmp257 	%argrw{"wrr"}
	max		___614_d $tmp252 $tmp254 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp259 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp259 483 483 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp262 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp261 $tmp262 	%argrw{"wr"}
	sqrt		$tmp260 $tmp261 	%argrw{"wr"}
	compref		$tmp265 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp264 $tmp265 	%argrw{"wr"}
	sqrt		$tmp263 $tmp264 	%argrw{"wr"}
	add		$tmp266 $tmp260 $tmp263 	%argrw{"wrr"}
	compref		$tmp269 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp268 $tmp269 	%argrw{"wr"}
	sqrt		$tmp267 $tmp268 	%argrw{"wr"}
	add		___614_d $tmp266 $tmp267 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp270 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp270 491 491 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp273 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp274 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp272 $tmp273 $tmp274 	%argrw{"wrr"}
	sqrt		$tmp271 $tmp272 	%argrw{"wr"}
	sqrt		___614_d $tmp271 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp275 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp275 507 507 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp278 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp277 $tmp278 	%argrw{"wr"}
	pow		$tmp276 $tmp277 $const4 	%argrw{"wrr"}
	compref		$tmp281 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp280 $tmp281 	%argrw{"wr"}
	pow		$tmp279 $tmp280 $const4 	%argrw{"wrr"}
	add		$tmp282 $tmp276 $tmp279 	%argrw{"wrr"}
	compref		$tmp285 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp284 $tmp285 	%argrw{"wr"}
	pow		$tmp283 $tmp284 $const4 	%argrw{"wrr"}
	add		$tmp286 $tmp282 $tmp283 	%argrw{"wrr"}
	div		$tmp287 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp286 $tmp287 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp289 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp290 ___608_yy 	%argrw{"wr"}
	assign		$tmp291 ___608_zz 	%argrw{"wr"}
	point		$tmp288 $tmp289 $tmp290 $tmp291 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp288 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp292 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp293 ___614_d $tmp292 	%argrw{"wrr"}
	if		$tmp293 530 557 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp294 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp294 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp295 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp295 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp296 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp296 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp297 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp297 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp298 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp298 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp299 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp299 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp300 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp301 ___614_d $tmp300 	%argrw{"wrr"}
	if		$tmp301 543 557 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp302 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp302 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp303 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp303 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp304 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp304 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp305 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp305 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp306 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp307 ___614_d $tmp306 	%argrw{"wrr"}
	if		$tmp307 552 557 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp308 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp308 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp309 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp309 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp310 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp311 ___614_d $tmp310 	%argrw{"wrr"}
	if		$tmp311 557 557 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp312 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp313 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp314 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp215 ___619_da $const18 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp315 $const13 $tmp215 	%line{145} %argrw{"wrr"}
	sub		$tmp3 $tmp315 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	return	%line{180}
# intern/cycles/kernel/shaders/node_texture.h:181
# 	if (basis == "Voronoi F4")
	eq		$tmp316 Basis $const36 	%line{181} %argrw{"wrr"}
	if		$tmp316 747 747 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	functioncall	$const37 746 	%line{182} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const38 744 	%line{146} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:133
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 744 	%line{133} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 743 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp319 $tmp5 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp318 $tmp319 	%argrw{"wr"}
	assign		___608_xi $tmp318 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp321 $tmp5 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp320 $tmp321 	%argrw{"wr"}
	assign		___608_yi $tmp320 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp323 $tmp5 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp322 $tmp323 	%argrw{"wr"}
	assign		___608_zi $tmp322 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp325 588 590 741 743 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp324 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp325 ___608_xx $tmp324 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp327 592 594 739 741 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp326 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp327 ___608_yy $tmp326 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp329 596 598 737 739 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp328 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp329 ___608_zz $tmp328 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp330 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp331 ___608_yy 	%argrw{"wr"}
	assign		$tmp332 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp330 $tmp331 $tmp332 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 615 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp335 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp336 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp337 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp334 $tmp335 $tmp336 $tmp337 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp334 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp339 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp340 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp341 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp338 $tmp339 $tmp340 $tmp341 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp338 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp333 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp333 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp342 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp5 $tmp342 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 688 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp343 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp343 623 623 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp344 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp344 627 627 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp345 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp345 638 638 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp347 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp346 $tmp347 	%argrw{"wr"}
	compref		$tmp349 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp348 $tmp349 	%argrw{"wr"}
	add		$tmp350 $tmp346 $tmp348 	%argrw{"wrr"}
	compref		$tmp352 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp351 $tmp352 	%argrw{"wr"}
	add		___614_d $tmp350 $tmp351 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp353 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp353 649 649 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp355 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp354 $tmp355 	%argrw{"wr"}
	compref		$tmp358 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp357 $tmp358 	%argrw{"wr"}
	compref		$tmp360 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp359 $tmp360 	%argrw{"wr"}
	max		$tmp356 $tmp357 $tmp359 	%argrw{"wrr"}
	max		___614_d $tmp354 $tmp356 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp361 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp361 663 663 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp364 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp363 $tmp364 	%argrw{"wr"}
	sqrt		$tmp362 $tmp363 	%argrw{"wr"}
	compref		$tmp367 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp366 $tmp367 	%argrw{"wr"}
	sqrt		$tmp365 $tmp366 	%argrw{"wr"}
	add		$tmp368 $tmp362 $tmp365 	%argrw{"wrr"}
	compref		$tmp371 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp370 $tmp371 	%argrw{"wr"}
	sqrt		$tmp369 $tmp370 	%argrw{"wr"}
	add		___614_d $tmp368 $tmp369 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp372 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp372 671 671 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp375 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp376 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp374 $tmp375 $tmp376 	%argrw{"wrr"}
	sqrt		$tmp373 $tmp374 	%argrw{"wr"}
	sqrt		___614_d $tmp373 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp377 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp377 687 687 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp380 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp379 $tmp380 	%argrw{"wr"}
	pow		$tmp378 $tmp379 $const4 	%argrw{"wrr"}
	compref		$tmp383 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp382 $tmp383 	%argrw{"wr"}
	pow		$tmp381 $tmp382 $const4 	%argrw{"wrr"}
	add		$tmp384 $tmp378 $tmp381 	%argrw{"wrr"}
	compref		$tmp387 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp386 $tmp387 	%argrw{"wr"}
	pow		$tmp385 $tmp386 $const4 	%argrw{"wrr"}
	add		$tmp388 $tmp384 $tmp385 	%argrw{"wrr"}
	div		$tmp389 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp388 $tmp389 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp391 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp392 ___608_yy 	%argrw{"wr"}
	assign		$tmp393 ___608_zz 	%argrw{"wr"}
	point		$tmp390 $tmp391 $tmp392 $tmp393 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp390 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp394 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp395 ___614_d $tmp394 	%argrw{"wrr"}
	if		$tmp395 710 737 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp396 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp396 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp397 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp397 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp398 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp398 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp399 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp399 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp400 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp400 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp401 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp401 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp402 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp403 ___614_d $tmp402 	%argrw{"wrr"}
	if		$tmp403 723 737 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp404 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp404 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp405 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp405 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp406 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp406 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp407 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp407 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp408 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp409 ___614_d $tmp408 	%argrw{"wrr"}
	if		$tmp409 732 737 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp410 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp410 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp411 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp411 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp412 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp413 ___614_d $tmp412 	%argrw{"wrr"}
	if		$tmp413 737 737 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp414 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp415 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp416 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp317 ___619_da $const20 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp417 $const13 $tmp317 	%line{146} %argrw{"wrr"}
	sub		$tmp3 $tmp417 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	return	%line{182}
# intern/cycles/kernel/shaders/node_texture.h:183
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp418 Basis $const39 	%line{183} %argrw{"wrr"}
	if		$tmp418 929 929 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	functioncall	$const40 928 	%line{184} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const41 926 	%line{147} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 926 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 923 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp421 $tmp5 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp420 $tmp421 	%argrw{"wr"}
	assign		___608_xi $tmp420 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp423 $tmp5 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp422 $tmp423 	%argrw{"wr"}
	assign		___608_yi $tmp422 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp425 $tmp5 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp424 $tmp425 	%argrw{"wr"}
	assign		___608_zi $tmp424 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp427 768 770 921 923 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp426 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp427 ___608_xx $tmp426 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp429 772 774 919 921 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp428 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp429 ___608_yy $tmp428 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp431 776 778 917 919 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp430 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp431 ___608_zz $tmp430 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp432 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp433 ___608_yy 	%argrw{"wr"}
	assign		$tmp434 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp432 $tmp433 $tmp434 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 795 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp437 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp438 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp439 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp436 $tmp437 $tmp438 $tmp439 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp436 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp441 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp442 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp443 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp440 $tmp441 $tmp442 $tmp443 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp440 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp435 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp435 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp444 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp5 $tmp444 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 868 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp445 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp445 803 803 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp446 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp446 807 807 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp447 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp447 818 818 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp449 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp448 $tmp449 	%argrw{"wr"}
	compref		$tmp451 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp450 $tmp451 	%argrw{"wr"}
	add		$tmp452 $tmp448 $tmp450 	%argrw{"wrr"}
	compref		$tmp454 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp453 $tmp454 	%argrw{"wr"}
	add		___614_d $tmp452 $tmp453 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp455 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp455 829 829 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp457 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp456 $tmp457 	%argrw{"wr"}
	compref		$tmp460 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp459 $tmp460 	%argrw{"wr"}
	compref		$tmp462 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp461 $tmp462 	%argrw{"wr"}
	max		$tmp458 $tmp459 $tmp461 	%argrw{"wrr"}
	max		___614_d $tmp456 $tmp458 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp463 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp463 843 843 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp466 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp465 $tmp466 	%argrw{"wr"}
	sqrt		$tmp464 $tmp465 	%argrw{"wr"}
	compref		$tmp469 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp468 $tmp469 	%argrw{"wr"}
	sqrt		$tmp467 $tmp468 	%argrw{"wr"}
	add		$tmp470 $tmp464 $tmp467 	%argrw{"wrr"}
	compref		$tmp473 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp472 $tmp473 	%argrw{"wr"}
	sqrt		$tmp471 $tmp472 	%argrw{"wr"}
	add		___614_d $tmp470 $tmp471 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp474 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp474 851 851 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp477 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp478 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp476 $tmp477 $tmp478 	%argrw{"wrr"}
	sqrt		$tmp475 $tmp476 	%argrw{"wr"}
	sqrt		___614_d $tmp475 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp479 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp479 867 867 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp482 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp481 $tmp482 	%argrw{"wr"}
	pow		$tmp480 $tmp481 $const4 	%argrw{"wrr"}
	compref		$tmp485 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp484 $tmp485 	%argrw{"wr"}
	pow		$tmp483 $tmp484 $const4 	%argrw{"wrr"}
	add		$tmp486 $tmp480 $tmp483 	%argrw{"wrr"}
	compref		$tmp489 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp488 $tmp489 	%argrw{"wr"}
	pow		$tmp487 $tmp488 $const4 	%argrw{"wrr"}
	add		$tmp490 $tmp486 $tmp487 	%argrw{"wrr"}
	div		$tmp491 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp490 $tmp491 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp493 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp494 ___608_yy 	%argrw{"wr"}
	assign		$tmp495 ___608_zz 	%argrw{"wr"}
	point		$tmp492 $tmp493 $tmp494 $tmp495 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp492 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp496 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp497 ___614_d $tmp496 	%argrw{"wrr"}
	if		$tmp497 890 917 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp498 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp498 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp499 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp499 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp500 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp500 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp501 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp501 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp502 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp502 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp503 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp503 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp504 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp505 ___614_d $tmp504 	%argrw{"wrr"}
	if		$tmp505 903 917 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp506 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp506 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp507 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp507 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp508 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp508 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp509 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp509 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp510 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp511 ___614_d $tmp510 	%argrw{"wrr"}
	if		$tmp511 912 917 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp512 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp512 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp513 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp513 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp514 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp515 ___614_d $tmp514 	%argrw{"wrr"}
	if		$tmp515 917 917 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp516 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp517 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp518 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp519 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp520 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp419 $tmp519 $tmp520 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp521 $const13 $tmp419 	%line{147} %argrw{"wrr"}
	sub		$tmp3 $tmp521 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	return	%line{184}
# intern/cycles/kernel/shaders/node_texture.h:185
# 	if (basis == "Voronoi Crackle")
	eq		$tmp522 Basis $const43 	%line{185} %argrw{"wrr"}
	if		$tmp522 1118 1118 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	functioncall	$const44 1117 	%line{186} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const45 1115 	%line{148} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const41 1109 	%line{139} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 1109 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 1106 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp526 $tmp5 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp525 $tmp526 	%argrw{"wr"}
	assign		___608_xi $tmp525 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp528 $tmp5 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp527 $tmp528 	%argrw{"wr"}
	assign		___608_yi $tmp527 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp530 $tmp5 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp529 $tmp530 	%argrw{"wr"}
	assign		___608_zi $tmp529 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp532 951 953 1104 1106 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp531 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp532 ___608_xx $tmp531 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp534 955 957 1102 1104 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp533 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp534 ___608_yy $tmp533 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp536 959 961 1100 1102 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp535 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp536 ___608_zz $tmp535 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp537 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp538 ___608_yy 	%argrw{"wr"}
	assign		$tmp539 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp537 $tmp538 $tmp539 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 978 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp542 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp543 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp544 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp541 $tmp542 $tmp543 $tmp544 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp541 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp546 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp547 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp548 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp545 $tmp546 $tmp547 $tmp548 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp545 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp540 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp540 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp549 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp5 $tmp549 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 1051 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp550 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp550 986 986 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp551 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp551 990 990 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp552 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp552 1001 1001 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp554 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp553 $tmp554 	%argrw{"wr"}
	compref		$tmp556 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp555 $tmp556 	%argrw{"wr"}
	add		$tmp557 $tmp553 $tmp555 	%argrw{"wrr"}
	compref		$tmp559 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp558 $tmp559 	%argrw{"wr"}
	add		___614_d $tmp557 $tmp558 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp560 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp560 1012 1012 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp562 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp561 $tmp562 	%argrw{"wr"}
	compref		$tmp565 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp564 $tmp565 	%argrw{"wr"}
	compref		$tmp567 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp566 $tmp567 	%argrw{"wr"}
	max		$tmp563 $tmp564 $tmp566 	%argrw{"wrr"}
	max		___614_d $tmp561 $tmp563 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp568 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp568 1026 1026 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp571 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp570 $tmp571 	%argrw{"wr"}
	sqrt		$tmp569 $tmp570 	%argrw{"wr"}
	compref		$tmp574 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp573 $tmp574 	%argrw{"wr"}
	sqrt		$tmp572 $tmp573 	%argrw{"wr"}
	add		$tmp575 $tmp569 $tmp572 	%argrw{"wrr"}
	compref		$tmp578 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp577 $tmp578 	%argrw{"wr"}
	sqrt		$tmp576 $tmp577 	%argrw{"wr"}
	add		___614_d $tmp575 $tmp576 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp579 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp579 1034 1034 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp582 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp583 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp581 $tmp582 $tmp583 	%argrw{"wrr"}
	sqrt		$tmp580 $tmp581 	%argrw{"wr"}
	sqrt		___614_d $tmp580 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp584 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp584 1050 1050 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp587 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp586 $tmp587 	%argrw{"wr"}
	pow		$tmp585 $tmp586 $const4 	%argrw{"wrr"}
	compref		$tmp590 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp589 $tmp590 	%argrw{"wr"}
	pow		$tmp588 $tmp589 $const4 	%argrw{"wrr"}
	add		$tmp591 $tmp585 $tmp588 	%argrw{"wrr"}
	compref		$tmp594 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp593 $tmp594 	%argrw{"wr"}
	pow		$tmp592 $tmp593 $const4 	%argrw{"wrr"}
	add		$tmp595 $tmp591 $tmp592 	%argrw{"wrr"}
	div		$tmp596 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp595 $tmp596 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp598 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp599 ___608_yy 	%argrw{"wr"}
	assign		$tmp600 ___608_zz 	%argrw{"wr"}
	point		$tmp597 $tmp598 $tmp599 $tmp600 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp597 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp601 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp602 ___614_d $tmp601 	%argrw{"wrr"}
	if		$tmp602 1073 1100 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp603 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp603 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp604 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp604 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp605 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp605 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp606 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp606 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp607 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp607 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp608 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp608 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp609 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp610 ___614_d $tmp609 	%argrw{"wrr"}
	if		$tmp610 1086 1100 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp611 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp611 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp612 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp612 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp613 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp613 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp614 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp614 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp615 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp616 ___614_d $tmp615 	%argrw{"wrr"}
	if		$tmp616 1095 1100 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp617 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp617 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp618 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp618 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp619 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp620 ___614_d $tmp619 	%argrw{"wrr"}
	if		$tmp620 1100 1100 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp621 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp622 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp623 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp624 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp625 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp524 $tmp624 $tmp625 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___626_t $const46 $tmp524 	%line{139} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:140
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp626 ___626_t $const29 	%line{140} %argrw{"wrr"}
	if		$tmp626 1113 1114 	%argrw{"r"}
	assign		$tmp523 $const29 	%argrw{"wr"}
	assign		$tmp523 ___626_t 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp627 $const13 $tmp523 	%line{148} %argrw{"wrr"}
	sub		$tmp3 $tmp627 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	return	%line{186}
# intern/cycles/kernel/shaders/node_texture.h:187
# 	if (basis == "Cell Noise")
	eq		$tmp628 Basis $const47 	%line{187} %argrw{"wrr"}
	if		$tmp628 1122 1122 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:188
# 		return cellnoise(p);
	cellnoise	$tmp3 $tmp5 	%line{188} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:190
# 	return 0.0;
	assign		$tmp3 $const4 	%line{190} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_noise_texture.osl:30
# 		r[0] = noise_basis(p + point(13.5), basis) * distortion;
	mul		$tmp629 $tmp3 Distortion 	%filename{"intern/cycles/kernel/shaders/node_noise_texture.osl"} %line{30} %argrw{"wrr"}
	compassign	___646_r $const3 $tmp629 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_noise_texture.osl:31
# 		r[1] = noise_basis(p, basis) * distortion;
	functioncall	$const6 2237 	%line{31} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:173
# 
	eq		$tmp631 Basis $const1 	%filename{"intern/cycles/kernel/shaders/node_texture.h"} %line{173} %argrw{"wrr"}
	if		$tmp631 1141 1141 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:174
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const8 1140 	%line{174} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:154
# 	float f = 0.0;
	assign		___633_f $const4 	%line{154} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:157
# 	if (type == 0)
	eq		$tmp632 $const7 $const3 	%line{157} %argrw{"wrr"}
	if		$tmp632 1133 1134 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:158
# 		f = noise("perlin", p);
	noise		___633_f $const9 $tmp1 	%line{158} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:162
# 		f = noise(p);
	noise		___633_f $tmp1 	%line{162} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:165
# 	if (!isfinite(f))
	isfinite	$tmp633 ___633_f 	%line{165} %argrw{"wr"}
	eq		$tmp634 $tmp633 $const3 	%argrw{"wrr"}
	if		$tmp634 1139 1139 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:166
# 		return 0.5;
	assign		$tmp630 $const10 	%line{166} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:168
# 	return f;
	assign		$tmp630 ___633_f 	%line{168} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 		return safe_noise(p, 1);
	return	%line{174}
# intern/cycles/kernel/shaders/node_texture.h:175
# 	if (basis == "Voronoi F1")
	eq		$tmp635 Basis $const11 	%line{175} %argrw{"wrr"}
	if		$tmp635 1321 1321 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	functioncall	$const12 1320 	%line{176} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 1318 	%line{143} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:130
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 1318 	%line{130} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 1317 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp638 $tmp1 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp637 $tmp638 	%argrw{"wr"}
	assign		___608_xi $tmp637 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp640 $tmp1 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp639 $tmp640 	%argrw{"wr"}
	assign		___608_yi $tmp639 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp642 $tmp1 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp641 $tmp642 	%argrw{"wr"}
	assign		___608_zi $tmp641 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp644 1162 1164 1315 1317 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp643 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp644 ___608_xx $tmp643 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp646 1166 1168 1313 1315 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp645 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp646 ___608_yy $tmp645 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp648 1170 1172 1311 1313 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp647 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp648 ___608_zz $tmp647 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp649 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp650 ___608_yy 	%argrw{"wr"}
	assign		$tmp651 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp649 $tmp650 $tmp651 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 1189 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp654 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp655 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp656 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp653 $tmp654 $tmp655 $tmp656 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp653 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp658 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp659 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp660 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp657 $tmp658 $tmp659 $tmp660 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp657 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp652 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp652 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp661 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1 $tmp661 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 1262 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp662 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp662 1197 1197 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp663 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp663 1201 1201 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp664 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp664 1212 1212 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp666 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp665 $tmp666 	%argrw{"wr"}
	compref		$tmp668 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp667 $tmp668 	%argrw{"wr"}
	add		$tmp669 $tmp665 $tmp667 	%argrw{"wrr"}
	compref		$tmp671 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp670 $tmp671 	%argrw{"wr"}
	add		___614_d $tmp669 $tmp670 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp672 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp672 1223 1223 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp674 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp673 $tmp674 	%argrw{"wr"}
	compref		$tmp677 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp676 $tmp677 	%argrw{"wr"}
	compref		$tmp679 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp678 $tmp679 	%argrw{"wr"}
	max		$tmp675 $tmp676 $tmp678 	%argrw{"wrr"}
	max		___614_d $tmp673 $tmp675 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp680 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp680 1237 1237 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp683 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp682 $tmp683 	%argrw{"wr"}
	sqrt		$tmp681 $tmp682 	%argrw{"wr"}
	compref		$tmp686 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp685 $tmp686 	%argrw{"wr"}
	sqrt		$tmp684 $tmp685 	%argrw{"wr"}
	add		$tmp687 $tmp681 $tmp684 	%argrw{"wrr"}
	compref		$tmp690 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp689 $tmp690 	%argrw{"wr"}
	sqrt		$tmp688 $tmp689 	%argrw{"wr"}
	add		___614_d $tmp687 $tmp688 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp691 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp691 1245 1245 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp694 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp695 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp693 $tmp694 $tmp695 	%argrw{"wrr"}
	sqrt		$tmp692 $tmp693 	%argrw{"wr"}
	sqrt		___614_d $tmp692 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp696 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp696 1261 1261 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp699 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp698 $tmp699 	%argrw{"wr"}
	pow		$tmp697 $tmp698 $const4 	%argrw{"wrr"}
	compref		$tmp702 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp701 $tmp702 	%argrw{"wr"}
	pow		$tmp700 $tmp701 $const4 	%argrw{"wrr"}
	add		$tmp703 $tmp697 $tmp700 	%argrw{"wrr"}
	compref		$tmp706 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp705 $tmp706 	%argrw{"wr"}
	pow		$tmp704 $tmp705 $const4 	%argrw{"wrr"}
	add		$tmp707 $tmp703 $tmp704 	%argrw{"wrr"}
	div		$tmp708 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp707 $tmp708 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp710 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp711 ___608_yy 	%argrw{"wr"}
	assign		$tmp712 ___608_zz 	%argrw{"wr"}
	point		$tmp709 $tmp710 $tmp711 $tmp712 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp709 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp713 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp714 ___614_d $tmp713 	%argrw{"wrr"}
	if		$tmp714 1284 1311 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp715 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp715 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp716 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp716 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp717 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp717 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp718 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp718 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp719 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp719 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp720 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp720 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp721 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp722 ___614_d $tmp721 	%argrw{"wrr"}
	if		$tmp722 1297 1311 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp723 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp723 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp724 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp724 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp725 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp725 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp726 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp726 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp727 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp728 ___614_d $tmp727 	%argrw{"wrr"}
	if		$tmp728 1306 1311 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp729 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp729 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp730 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp730 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp731 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp732 ___614_d $tmp731 	%argrw{"wrr"}
	if		$tmp732 1311 1311 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp733 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp734 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp735 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp636 ___619_da $const3 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp736 $const13 $tmp636 	%line{143} %argrw{"wrr"}
	sub		$tmp630 $tmp736 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	return	%line{176}
# intern/cycles/kernel/shaders/node_texture.h:177
# 	if (basis == "Voronoi F2")
	eq		$tmp737 Basis $const30 	%line{177} %argrw{"wrr"}
	if		$tmp737 1501 1501 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	functioncall	$const31 1500 	%line{178} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const32 1498 	%line{144} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:131
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 1498 	%line{131} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 1497 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp740 $tmp1 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp739 $tmp740 	%argrw{"wr"}
	assign		___608_xi $tmp739 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp742 $tmp1 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp741 $tmp742 	%argrw{"wr"}
	assign		___608_yi $tmp741 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp744 $tmp1 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp743 $tmp744 	%argrw{"wr"}
	assign		___608_zi $tmp743 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp746 1342 1344 1495 1497 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp745 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp746 ___608_xx $tmp745 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp748 1346 1348 1493 1495 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp747 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp748 ___608_yy $tmp747 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp750 1350 1352 1491 1493 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp749 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp750 ___608_zz $tmp749 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp751 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp752 ___608_yy 	%argrw{"wr"}
	assign		$tmp753 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp751 $tmp752 $tmp753 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 1369 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp756 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp757 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp758 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp755 $tmp756 $tmp757 $tmp758 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp755 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp760 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp761 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp762 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp759 $tmp760 $tmp761 $tmp762 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp759 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp754 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp754 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp763 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1 $tmp763 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 1442 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp764 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp764 1377 1377 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp765 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp765 1381 1381 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp766 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp766 1392 1392 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp768 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp767 $tmp768 	%argrw{"wr"}
	compref		$tmp770 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp769 $tmp770 	%argrw{"wr"}
	add		$tmp771 $tmp767 $tmp769 	%argrw{"wrr"}
	compref		$tmp773 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp772 $tmp773 	%argrw{"wr"}
	add		___614_d $tmp771 $tmp772 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp774 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp774 1403 1403 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp776 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp775 $tmp776 	%argrw{"wr"}
	compref		$tmp779 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp778 $tmp779 	%argrw{"wr"}
	compref		$tmp781 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp780 $tmp781 	%argrw{"wr"}
	max		$tmp777 $tmp778 $tmp780 	%argrw{"wrr"}
	max		___614_d $tmp775 $tmp777 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp782 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp782 1417 1417 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp785 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp784 $tmp785 	%argrw{"wr"}
	sqrt		$tmp783 $tmp784 	%argrw{"wr"}
	compref		$tmp788 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp787 $tmp788 	%argrw{"wr"}
	sqrt		$tmp786 $tmp787 	%argrw{"wr"}
	add		$tmp789 $tmp783 $tmp786 	%argrw{"wrr"}
	compref		$tmp792 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp791 $tmp792 	%argrw{"wr"}
	sqrt		$tmp790 $tmp791 	%argrw{"wr"}
	add		___614_d $tmp789 $tmp790 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp793 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp793 1425 1425 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp796 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp797 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp795 $tmp796 $tmp797 	%argrw{"wrr"}
	sqrt		$tmp794 $tmp795 	%argrw{"wr"}
	sqrt		___614_d $tmp794 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp798 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp798 1441 1441 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp801 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp800 $tmp801 	%argrw{"wr"}
	pow		$tmp799 $tmp800 $const4 	%argrw{"wrr"}
	compref		$tmp804 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp803 $tmp804 	%argrw{"wr"}
	pow		$tmp802 $tmp803 $const4 	%argrw{"wrr"}
	add		$tmp805 $tmp799 $tmp802 	%argrw{"wrr"}
	compref		$tmp808 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp807 $tmp808 	%argrw{"wr"}
	pow		$tmp806 $tmp807 $const4 	%argrw{"wrr"}
	add		$tmp809 $tmp805 $tmp806 	%argrw{"wrr"}
	div		$tmp810 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp809 $tmp810 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp812 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp813 ___608_yy 	%argrw{"wr"}
	assign		$tmp814 ___608_zz 	%argrw{"wr"}
	point		$tmp811 $tmp812 $tmp813 $tmp814 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp811 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp815 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp816 ___614_d $tmp815 	%argrw{"wrr"}
	if		$tmp816 1464 1491 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp817 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp817 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp818 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp818 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp819 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp819 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp820 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp820 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp821 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp821 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp822 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp822 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp823 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp824 ___614_d $tmp823 	%argrw{"wrr"}
	if		$tmp824 1477 1491 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp825 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp825 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp826 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp826 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp827 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp827 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp828 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp828 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp829 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp830 ___614_d $tmp829 	%argrw{"wrr"}
	if		$tmp830 1486 1491 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp831 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp831 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp832 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp832 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp833 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp834 ___614_d $tmp833 	%argrw{"wrr"}
	if		$tmp834 1491 1491 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp835 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp836 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp837 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp738 ___619_da $const7 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp838 $const13 $tmp738 	%line{144} %argrw{"wrr"}
	sub		$tmp630 $tmp838 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	return	%line{178}
# intern/cycles/kernel/shaders/node_texture.h:179
# 	if (basis == "Voronoi F3")
	eq		$tmp839 Basis $const33 	%line{179} %argrw{"wrr"}
	if		$tmp839 1681 1681 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	functioncall	$const34 1680 	%line{180} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const35 1678 	%line{145} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:132
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 1678 	%line{132} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 1677 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp842 $tmp1 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp841 $tmp842 	%argrw{"wr"}
	assign		___608_xi $tmp841 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp844 $tmp1 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp843 $tmp844 	%argrw{"wr"}
	assign		___608_yi $tmp843 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp846 $tmp1 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp845 $tmp846 	%argrw{"wr"}
	assign		___608_zi $tmp845 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp848 1522 1524 1675 1677 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp847 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp848 ___608_xx $tmp847 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp850 1526 1528 1673 1675 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp849 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp850 ___608_yy $tmp849 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp852 1530 1532 1671 1673 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp851 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp852 ___608_zz $tmp851 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp853 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp854 ___608_yy 	%argrw{"wr"}
	assign		$tmp855 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp853 $tmp854 $tmp855 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 1549 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp858 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp859 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp860 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp857 $tmp858 $tmp859 $tmp860 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp857 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp862 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp863 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp864 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp861 $tmp862 $tmp863 $tmp864 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp861 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp856 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp856 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp865 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1 $tmp865 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 1622 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp866 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp866 1557 1557 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp867 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp867 1561 1561 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp868 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp868 1572 1572 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp870 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp869 $tmp870 	%argrw{"wr"}
	compref		$tmp872 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp871 $tmp872 	%argrw{"wr"}
	add		$tmp873 $tmp869 $tmp871 	%argrw{"wrr"}
	compref		$tmp875 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp874 $tmp875 	%argrw{"wr"}
	add		___614_d $tmp873 $tmp874 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp876 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp876 1583 1583 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp878 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp877 $tmp878 	%argrw{"wr"}
	compref		$tmp881 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp880 $tmp881 	%argrw{"wr"}
	compref		$tmp883 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp882 $tmp883 	%argrw{"wr"}
	max		$tmp879 $tmp880 $tmp882 	%argrw{"wrr"}
	max		___614_d $tmp877 $tmp879 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp884 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp884 1597 1597 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp887 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp886 $tmp887 	%argrw{"wr"}
	sqrt		$tmp885 $tmp886 	%argrw{"wr"}
	compref		$tmp890 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp889 $tmp890 	%argrw{"wr"}
	sqrt		$tmp888 $tmp889 	%argrw{"wr"}
	add		$tmp891 $tmp885 $tmp888 	%argrw{"wrr"}
	compref		$tmp894 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp893 $tmp894 	%argrw{"wr"}
	sqrt		$tmp892 $tmp893 	%argrw{"wr"}
	add		___614_d $tmp891 $tmp892 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp895 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp895 1605 1605 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp898 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp899 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp897 $tmp898 $tmp899 	%argrw{"wrr"}
	sqrt		$tmp896 $tmp897 	%argrw{"wr"}
	sqrt		___614_d $tmp896 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp900 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp900 1621 1621 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp903 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp902 $tmp903 	%argrw{"wr"}
	pow		$tmp901 $tmp902 $const4 	%argrw{"wrr"}
	compref		$tmp906 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp905 $tmp906 	%argrw{"wr"}
	pow		$tmp904 $tmp905 $const4 	%argrw{"wrr"}
	add		$tmp907 $tmp901 $tmp904 	%argrw{"wrr"}
	compref		$tmp910 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp909 $tmp910 	%argrw{"wr"}
	pow		$tmp908 $tmp909 $const4 	%argrw{"wrr"}
	add		$tmp911 $tmp907 $tmp908 	%argrw{"wrr"}
	div		$tmp912 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp911 $tmp912 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp914 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp915 ___608_yy 	%argrw{"wr"}
	assign		$tmp916 ___608_zz 	%argrw{"wr"}
	point		$tmp913 $tmp914 $tmp915 $tmp916 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp913 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp917 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp918 ___614_d $tmp917 	%argrw{"wrr"}
	if		$tmp918 1644 1671 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp919 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp919 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp920 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp920 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp921 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp921 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp922 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp922 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp923 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp923 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp924 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp924 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp925 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp926 ___614_d $tmp925 	%argrw{"wrr"}
	if		$tmp926 1657 1671 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp927 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp927 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp928 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp928 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp929 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp929 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp930 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp930 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp931 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp932 ___614_d $tmp931 	%argrw{"wrr"}
	if		$tmp932 1666 1671 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp933 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp933 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp934 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp934 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp935 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp936 ___614_d $tmp935 	%argrw{"wrr"}
	if		$tmp936 1671 1671 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp937 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp938 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp939 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp840 ___619_da $const18 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp940 $const13 $tmp840 	%line{145} %argrw{"wrr"}
	sub		$tmp630 $tmp940 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	return	%line{180}
# intern/cycles/kernel/shaders/node_texture.h:181
# 	if (basis == "Voronoi F4")
	eq		$tmp941 Basis $const36 	%line{181} %argrw{"wrr"}
	if		$tmp941 1861 1861 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	functioncall	$const37 1860 	%line{182} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const38 1858 	%line{146} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:133
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 1858 	%line{133} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 1857 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp944 $tmp1 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp943 $tmp944 	%argrw{"wr"}
	assign		___608_xi $tmp943 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp946 $tmp1 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp945 $tmp946 	%argrw{"wr"}
	assign		___608_yi $tmp945 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp948 $tmp1 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp947 $tmp948 	%argrw{"wr"}
	assign		___608_zi $tmp947 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp950 1702 1704 1855 1857 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp949 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp950 ___608_xx $tmp949 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp952 1706 1708 1853 1855 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp951 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp952 ___608_yy $tmp951 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp954 1710 1712 1851 1853 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp953 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp954 ___608_zz $tmp953 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp955 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp956 ___608_yy 	%argrw{"wr"}
	assign		$tmp957 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp955 $tmp956 $tmp957 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 1729 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp960 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp961 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp962 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp959 $tmp960 $tmp961 $tmp962 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp959 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp964 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp965 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp966 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp963 $tmp964 $tmp965 $tmp966 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp963 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp958 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp958 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp967 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1 $tmp967 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 1802 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp968 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp968 1737 1737 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp969 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp969 1741 1741 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp970 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp970 1752 1752 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp972 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp971 $tmp972 	%argrw{"wr"}
	compref		$tmp974 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp973 $tmp974 	%argrw{"wr"}
	add		$tmp975 $tmp971 $tmp973 	%argrw{"wrr"}
	compref		$tmp977 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp976 $tmp977 	%argrw{"wr"}
	add		___614_d $tmp975 $tmp976 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp978 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp978 1763 1763 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp980 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp979 $tmp980 	%argrw{"wr"}
	compref		$tmp983 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp982 $tmp983 	%argrw{"wr"}
	compref		$tmp985 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp984 $tmp985 	%argrw{"wr"}
	max		$tmp981 $tmp982 $tmp984 	%argrw{"wrr"}
	max		___614_d $tmp979 $tmp981 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp986 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp986 1777 1777 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp989 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp988 $tmp989 	%argrw{"wr"}
	sqrt		$tmp987 $tmp988 	%argrw{"wr"}
	compref		$tmp992 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp991 $tmp992 	%argrw{"wr"}
	sqrt		$tmp990 $tmp991 	%argrw{"wr"}
	add		$tmp993 $tmp987 $tmp990 	%argrw{"wrr"}
	compref		$tmp996 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp995 $tmp996 	%argrw{"wr"}
	sqrt		$tmp994 $tmp995 	%argrw{"wr"}
	add		___614_d $tmp993 $tmp994 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp997 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp997 1785 1785 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp1000 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp1001 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp999 $tmp1000 $tmp1001 	%argrw{"wrr"}
	sqrt		$tmp998 $tmp999 	%argrw{"wr"}
	sqrt		___614_d $tmp998 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp1002 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp1002 1801 1801 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp1005 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp1004 $tmp1005 	%argrw{"wr"}
	pow		$tmp1003 $tmp1004 $const4 	%argrw{"wrr"}
	compref		$tmp1008 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1007 $tmp1008 	%argrw{"wr"}
	pow		$tmp1006 $tmp1007 $const4 	%argrw{"wrr"}
	add		$tmp1009 $tmp1003 $tmp1006 	%argrw{"wrr"}
	compref		$tmp1012 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1011 $tmp1012 	%argrw{"wr"}
	pow		$tmp1010 $tmp1011 $const4 	%argrw{"wrr"}
	add		$tmp1013 $tmp1009 $tmp1010 	%argrw{"wrr"}
	div		$tmp1014 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp1013 $tmp1014 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp1016 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp1017 ___608_yy 	%argrw{"wr"}
	assign		$tmp1018 ___608_zz 	%argrw{"wr"}
	point		$tmp1015 $tmp1016 $tmp1017 $tmp1018 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp1015 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp1019 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp1020 ___614_d $tmp1019 	%argrw{"wrr"}
	if		$tmp1020 1824 1851 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp1021 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1021 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp1022 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp1022 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp1023 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp1023 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp1024 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1024 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp1025 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp1025 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp1026 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp1026 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp1027 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp1028 ___614_d $tmp1027 	%argrw{"wrr"}
	if		$tmp1028 1837 1851 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp1029 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1029 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp1030 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp1030 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp1031 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1031 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp1032 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp1032 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp1033 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp1034 ___614_d $tmp1033 	%argrw{"wrr"}
	if		$tmp1034 1846 1851 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp1035 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1035 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp1036 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1036 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp1037 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp1038 ___614_d $tmp1037 	%argrw{"wrr"}
	if		$tmp1038 1851 1851 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1039 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1040 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1041 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp942 ___619_da $const20 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp1042 $const13 $tmp942 	%line{146} %argrw{"wrr"}
	sub		$tmp630 $tmp1042 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	return	%line{182}
# intern/cycles/kernel/shaders/node_texture.h:183
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp1043 Basis $const39 	%line{183} %argrw{"wrr"}
	if		$tmp1043 2043 2043 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	functioncall	$const40 2042 	%line{184} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const41 2040 	%line{147} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 2040 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 2037 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp1046 $tmp1 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp1045 $tmp1046 	%argrw{"wr"}
	assign		___608_xi $tmp1045 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp1048 $tmp1 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp1047 $tmp1048 	%argrw{"wr"}
	assign		___608_yi $tmp1047 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp1050 $tmp1 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp1049 $tmp1050 	%argrw{"wr"}
	assign		___608_zi $tmp1049 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1052 1882 1884 2035 2037 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp1051 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp1052 ___608_xx $tmp1051 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1054 1886 1888 2033 2035 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp1053 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp1054 ___608_yy $tmp1053 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1056 1890 1892 2031 2033 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp1055 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp1056 ___608_zz $tmp1055 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp1057 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp1058 ___608_yy 	%argrw{"wr"}
	assign		$tmp1059 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp1057 $tmp1058 $tmp1059 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 1909 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1062 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp1063 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp1064 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp1061 $tmp1062 $tmp1063 $tmp1064 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp1061 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1066 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp1067 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp1068 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp1065 $tmp1066 $tmp1067 $tmp1068 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp1065 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp1060 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp1060 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp1069 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1 $tmp1069 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 1982 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp1070 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp1070 1917 1917 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp1071 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp1071 1921 1921 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp1072 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp1072 1932 1932 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp1074 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp1073 $tmp1074 	%argrw{"wr"}
	compref		$tmp1076 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1075 $tmp1076 	%argrw{"wr"}
	add		$tmp1077 $tmp1073 $tmp1075 	%argrw{"wrr"}
	compref		$tmp1079 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1078 $tmp1079 	%argrw{"wr"}
	add		___614_d $tmp1077 $tmp1078 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp1080 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp1080 1943 1943 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp1082 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp1081 $tmp1082 	%argrw{"wr"}
	compref		$tmp1085 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1084 $tmp1085 	%argrw{"wr"}
	compref		$tmp1087 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1086 $tmp1087 	%argrw{"wr"}
	max		$tmp1083 $tmp1084 $tmp1086 	%argrw{"wrr"}
	max		___614_d $tmp1081 $tmp1083 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp1088 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp1088 1957 1957 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp1091 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp1090 $tmp1091 	%argrw{"wr"}
	sqrt		$tmp1089 $tmp1090 	%argrw{"wr"}
	compref		$tmp1094 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1093 $tmp1094 	%argrw{"wr"}
	sqrt		$tmp1092 $tmp1093 	%argrw{"wr"}
	add		$tmp1095 $tmp1089 $tmp1092 	%argrw{"wrr"}
	compref		$tmp1098 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1097 $tmp1098 	%argrw{"wr"}
	sqrt		$tmp1096 $tmp1097 	%argrw{"wr"}
	add		___614_d $tmp1095 $tmp1096 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp1099 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp1099 1965 1965 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp1102 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp1103 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp1101 $tmp1102 $tmp1103 	%argrw{"wrr"}
	sqrt		$tmp1100 $tmp1101 	%argrw{"wr"}
	sqrt		___614_d $tmp1100 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp1104 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp1104 1981 1981 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp1107 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp1106 $tmp1107 	%argrw{"wr"}
	pow		$tmp1105 $tmp1106 $const4 	%argrw{"wrr"}
	compref		$tmp1110 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1109 $tmp1110 	%argrw{"wr"}
	pow		$tmp1108 $tmp1109 $const4 	%argrw{"wrr"}
	add		$tmp1111 $tmp1105 $tmp1108 	%argrw{"wrr"}
	compref		$tmp1114 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1113 $tmp1114 	%argrw{"wr"}
	pow		$tmp1112 $tmp1113 $const4 	%argrw{"wrr"}
	add		$tmp1115 $tmp1111 $tmp1112 	%argrw{"wrr"}
	div		$tmp1116 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp1115 $tmp1116 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp1118 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp1119 ___608_yy 	%argrw{"wr"}
	assign		$tmp1120 ___608_zz 	%argrw{"wr"}
	point		$tmp1117 $tmp1118 $tmp1119 $tmp1120 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp1117 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp1121 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp1122 ___614_d $tmp1121 	%argrw{"wrr"}
	if		$tmp1122 2004 2031 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp1123 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp1123 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp1124 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp1124 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp1125 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp1125 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp1126 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp1126 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp1127 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp1127 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp1128 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp1128 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp1129 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp1130 ___614_d $tmp1129 	%argrw{"wrr"}
	if		$tmp1130 2017 2031 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp1131 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp1131 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp1132 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp1132 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp1133 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp1133 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp1134 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp1134 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp1135 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp1136 ___614_d $tmp1135 	%argrw{"wrr"}
	if		$tmp1136 2026 2031 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp1137 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp1137 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp1138 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp1138 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp1139 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp1140 ___614_d $tmp1139 	%argrw{"wrr"}
	if		$tmp1140 2031 2031 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1141 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1142 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1143 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp1144 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp1145 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp1044 $tmp1144 $tmp1145 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp1146 $const13 $tmp1044 	%line{147} %argrw{"wrr"}
	sub		$tmp630 $tmp1146 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	return	%line{184}
# intern/cycles/kernel/shaders/node_texture.h:185
# 	if (basis == "Voronoi Crackle")
	eq		$tmp1147 Basis $const43 	%line{185} %argrw{"wrr"}
	if		$tmp1147 2232 2232 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	functioncall	$const44 2231 	%line{186} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const45 2229 	%line{148} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const41 2223 	%line{139} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 2223 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 2220 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp1151 $tmp1 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp1150 $tmp1151 	%argrw{"wr"}
	assign		___608_xi $tmp1150 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp1153 $tmp1 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp1152 $tmp1153 	%argrw{"wr"}
	assign		___608_yi $tmp1152 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp1155 $tmp1 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp1154 $tmp1155 	%argrw{"wr"}
	assign		___608_zi $tmp1154 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1157 2065 2067 2218 2220 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp1156 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp1157 ___608_xx $tmp1156 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1159 2069 2071 2216 2218 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp1158 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp1159 ___608_yy $tmp1158 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1161 2073 2075 2214 2216 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp1160 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp1161 ___608_zz $tmp1160 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp1162 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp1163 ___608_yy 	%argrw{"wr"}
	assign		$tmp1164 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp1162 $tmp1163 $tmp1164 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 2092 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1167 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp1168 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp1169 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp1166 $tmp1167 $tmp1168 $tmp1169 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp1166 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1171 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp1172 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp1173 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp1170 $tmp1171 $tmp1172 $tmp1173 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp1170 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp1165 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp1165 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp1174 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1 $tmp1174 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 2165 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp1175 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp1175 2100 2100 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp1176 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp1176 2104 2104 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp1177 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp1177 2115 2115 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp1179 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp1178 $tmp1179 	%argrw{"wr"}
	compref		$tmp1181 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1180 $tmp1181 	%argrw{"wr"}
	add		$tmp1182 $tmp1178 $tmp1180 	%argrw{"wrr"}
	compref		$tmp1184 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1183 $tmp1184 	%argrw{"wr"}
	add		___614_d $tmp1182 $tmp1183 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp1185 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp1185 2126 2126 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp1187 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp1186 $tmp1187 	%argrw{"wr"}
	compref		$tmp1190 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1189 $tmp1190 	%argrw{"wr"}
	compref		$tmp1192 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1191 $tmp1192 	%argrw{"wr"}
	max		$tmp1188 $tmp1189 $tmp1191 	%argrw{"wrr"}
	max		___614_d $tmp1186 $tmp1188 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp1193 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp1193 2140 2140 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp1196 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp1195 $tmp1196 	%argrw{"wr"}
	sqrt		$tmp1194 $tmp1195 	%argrw{"wr"}
	compref		$tmp1199 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1198 $tmp1199 	%argrw{"wr"}
	sqrt		$tmp1197 $tmp1198 	%argrw{"wr"}
	add		$tmp1200 $tmp1194 $tmp1197 	%argrw{"wrr"}
	compref		$tmp1203 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1202 $tmp1203 	%argrw{"wr"}
	sqrt		$tmp1201 $tmp1202 	%argrw{"wr"}
	add		___614_d $tmp1200 $tmp1201 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp1204 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp1204 2148 2148 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp1207 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp1208 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp1206 $tmp1207 $tmp1208 	%argrw{"wrr"}
	sqrt		$tmp1205 $tmp1206 	%argrw{"wr"}
	sqrt		___614_d $tmp1205 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp1209 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp1209 2164 2164 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp1212 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp1211 $tmp1212 	%argrw{"wr"}
	pow		$tmp1210 $tmp1211 $const4 	%argrw{"wrr"}
	compref		$tmp1215 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1214 $tmp1215 	%argrw{"wr"}
	pow		$tmp1213 $tmp1214 $const4 	%argrw{"wrr"}
	add		$tmp1216 $tmp1210 $tmp1213 	%argrw{"wrr"}
	compref		$tmp1219 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1218 $tmp1219 	%argrw{"wr"}
	pow		$tmp1217 $tmp1218 $const4 	%argrw{"wrr"}
	add		$tmp1220 $tmp1216 $tmp1217 	%argrw{"wrr"}
	div		$tmp1221 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp1220 $tmp1221 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp1223 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp1224 ___608_yy 	%argrw{"wr"}
	assign		$tmp1225 ___608_zz 	%argrw{"wr"}
	point		$tmp1222 $tmp1223 $tmp1224 $tmp1225 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp1222 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp1226 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp1227 ___614_d $tmp1226 	%argrw{"wrr"}
	if		$tmp1227 2187 2214 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp1228 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp1228 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp1229 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp1229 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp1230 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp1230 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp1231 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp1231 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp1232 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp1232 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp1233 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp1233 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp1234 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp1235 ___614_d $tmp1234 	%argrw{"wrr"}
	if		$tmp1235 2200 2214 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp1236 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp1236 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp1237 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp1237 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp1238 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp1238 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp1239 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp1239 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp1240 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp1241 ___614_d $tmp1240 	%argrw{"wrr"}
	if		$tmp1241 2209 2214 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp1242 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp1242 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp1243 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp1243 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp1244 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp1245 ___614_d $tmp1244 	%argrw{"wrr"}
	if		$tmp1245 2214 2214 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1246 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1247 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1248 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp1249 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp1250 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp1149 $tmp1249 $tmp1250 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___626_t $const46 $tmp1149 	%line{139} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:140
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp1251 ___626_t $const29 	%line{140} %argrw{"wrr"}
	if		$tmp1251 2227 2228 	%argrw{"r"}
	assign		$tmp1148 $const29 	%argrw{"wr"}
	assign		$tmp1148 ___626_t 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp1252 $const13 $tmp1148 	%line{148} %argrw{"wrr"}
	sub		$tmp630 $tmp1252 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	return	%line{186}
# intern/cycles/kernel/shaders/node_texture.h:187
# 	if (basis == "Cell Noise")
	eq		$tmp1253 Basis $const47 	%line{187} %argrw{"wrr"}
	if		$tmp1253 2236 2236 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:188
# 		return cellnoise(p);
	cellnoise	$tmp630 $tmp1 	%line{188} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:190
# 	return 0.0;
	assign		$tmp630 $const4 	%line{190} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_noise_texture.osl:31
# 		r[1] = noise_basis(p, basis) * distortion;
	mul		$tmp1254 $tmp630 Distortion 	%filename{"intern/cycles/kernel/shaders/node_noise_texture.osl"} %line{31} %argrw{"wrr"}
	compassign	___646_r $const7 $tmp1254 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_noise_texture.osl:32
# 		r[2] = noise_basis(p - point(13.5), basis) * distortion;
	sub		$tmp1257 $tmp1 $const5 	%line{32} %argrw{"wrr"}
	functioncall	$const6 3352 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:173
# }
	eq		$tmp1258 Basis $const1 	%filename{"intern/cycles/kernel/shaders/node_texture.h"} %line{173} %argrw{"wrr"}
	if		$tmp1258 2256 2256 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 
	functioncall	$const8 2255 	%line{174} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:154
# 	float f = 0.0;
	assign		___633_f $const4 	%line{154} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:157
# 	if (type == 0)
	eq		$tmp1259 $const7 $const3 	%line{157} %argrw{"wrr"}
	if		$tmp1259 2248 2249 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:158
# 		f = noise("perlin", p);
	noise		___633_f $const9 $tmp1257 	%line{158} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:162
# 		f = noise(p);
	noise		___633_f $tmp1257 	%line{162} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:165
# 	if (!isfinite(f))
	isfinite	$tmp1260 ___633_f 	%line{165} %argrw{"wr"}
	eq		$tmp1261 $tmp1260 $const3 	%argrw{"wrr"}
	if		$tmp1261 2254 2254 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:166
# 		return 0.5;
	assign		$tmp1255 $const10 	%line{166} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:168
# 	return f;
	assign		$tmp1255 ___633_f 	%line{168} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 		return safe_noise(p, 1);
	return	%line{174}
# intern/cycles/kernel/shaders/node_texture.h:175
# 	if (basis == "Voronoi F1")
	eq		$tmp1262 Basis $const11 	%line{175} %argrw{"wrr"}
	if		$tmp1262 2436 2436 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	functioncall	$const12 2435 	%line{176} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 2433 	%line{143} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:130
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 2433 	%line{130} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 2432 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp1265 $tmp1257 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp1264 $tmp1265 	%argrw{"wr"}
	assign		___608_xi $tmp1264 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp1267 $tmp1257 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp1266 $tmp1267 	%argrw{"wr"}
	assign		___608_yi $tmp1266 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp1269 $tmp1257 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp1268 $tmp1269 	%argrw{"wr"}
	assign		___608_zi $tmp1268 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1271 2277 2279 2430 2432 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp1270 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp1271 ___608_xx $tmp1270 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1273 2281 2283 2428 2430 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp1272 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp1273 ___608_yy $tmp1272 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1275 2285 2287 2426 2428 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp1274 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp1275 ___608_zz $tmp1274 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp1276 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp1277 ___608_yy 	%argrw{"wr"}
	assign		$tmp1278 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp1276 $tmp1277 $tmp1278 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 2304 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1281 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp1282 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp1283 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp1280 $tmp1281 $tmp1282 $tmp1283 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp1280 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1285 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp1286 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp1287 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp1284 $tmp1285 $tmp1286 $tmp1287 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp1284 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp1279 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp1279 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp1288 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1257 $tmp1288 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 2377 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp1289 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp1289 2312 2312 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp1290 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp1290 2316 2316 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp1291 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp1291 2327 2327 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp1293 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp1292 $tmp1293 	%argrw{"wr"}
	compref		$tmp1295 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1294 $tmp1295 	%argrw{"wr"}
	add		$tmp1296 $tmp1292 $tmp1294 	%argrw{"wrr"}
	compref		$tmp1298 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1297 $tmp1298 	%argrw{"wr"}
	add		___614_d $tmp1296 $tmp1297 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp1299 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp1299 2338 2338 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp1301 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp1300 $tmp1301 	%argrw{"wr"}
	compref		$tmp1304 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1303 $tmp1304 	%argrw{"wr"}
	compref		$tmp1306 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1305 $tmp1306 	%argrw{"wr"}
	max		$tmp1302 $tmp1303 $tmp1305 	%argrw{"wrr"}
	max		___614_d $tmp1300 $tmp1302 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp1307 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp1307 2352 2352 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp1310 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp1309 $tmp1310 	%argrw{"wr"}
	sqrt		$tmp1308 $tmp1309 	%argrw{"wr"}
	compref		$tmp1313 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1312 $tmp1313 	%argrw{"wr"}
	sqrt		$tmp1311 $tmp1312 	%argrw{"wr"}
	add		$tmp1314 $tmp1308 $tmp1311 	%argrw{"wrr"}
	compref		$tmp1317 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1316 $tmp1317 	%argrw{"wr"}
	sqrt		$tmp1315 $tmp1316 	%argrw{"wr"}
	add		___614_d $tmp1314 $tmp1315 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp1318 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp1318 2360 2360 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp1321 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp1322 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp1320 $tmp1321 $tmp1322 	%argrw{"wrr"}
	sqrt		$tmp1319 $tmp1320 	%argrw{"wr"}
	sqrt		___614_d $tmp1319 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp1323 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp1323 2376 2376 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp1326 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp1325 $tmp1326 	%argrw{"wr"}
	pow		$tmp1324 $tmp1325 $const4 	%argrw{"wrr"}
	compref		$tmp1329 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1328 $tmp1329 	%argrw{"wr"}
	pow		$tmp1327 $tmp1328 $const4 	%argrw{"wrr"}
	add		$tmp1330 $tmp1324 $tmp1327 	%argrw{"wrr"}
	compref		$tmp1333 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1332 $tmp1333 	%argrw{"wr"}
	pow		$tmp1331 $tmp1332 $const4 	%argrw{"wrr"}
	add		$tmp1334 $tmp1330 $tmp1331 	%argrw{"wrr"}
	div		$tmp1335 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp1334 $tmp1335 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp1337 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp1338 ___608_yy 	%argrw{"wr"}
	assign		$tmp1339 ___608_zz 	%argrw{"wr"}
	point		$tmp1336 $tmp1337 $tmp1338 $tmp1339 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp1336 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp1340 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp1341 ___614_d $tmp1340 	%argrw{"wrr"}
	if		$tmp1341 2399 2426 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp1342 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1342 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp1343 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp1343 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp1344 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp1344 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp1345 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1345 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp1346 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp1346 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp1347 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp1347 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp1348 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp1349 ___614_d $tmp1348 	%argrw{"wrr"}
	if		$tmp1349 2412 2426 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp1350 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1350 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp1351 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp1351 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp1352 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1352 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp1353 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp1353 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp1354 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp1355 ___614_d $tmp1354 	%argrw{"wrr"}
	if		$tmp1355 2421 2426 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp1356 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1356 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp1357 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1357 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp1358 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp1359 ___614_d $tmp1358 	%argrw{"wrr"}
	if		$tmp1359 2426 2426 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1360 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1361 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1362 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp1263 ___619_da $const3 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp1363 $const13 $tmp1263 	%line{143} %argrw{"wrr"}
	sub		$tmp1255 $tmp1363 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	return	%line{176}
# intern/cycles/kernel/shaders/node_texture.h:177
# 	if (basis == "Voronoi F2")
	eq		$tmp1364 Basis $const30 	%line{177} %argrw{"wrr"}
	if		$tmp1364 2616 2616 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	functioncall	$const31 2615 	%line{178} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const32 2613 	%line{144} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:131
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 2613 	%line{131} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 2612 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp1367 $tmp1257 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp1366 $tmp1367 	%argrw{"wr"}
	assign		___608_xi $tmp1366 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp1369 $tmp1257 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp1368 $tmp1369 	%argrw{"wr"}
	assign		___608_yi $tmp1368 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp1371 $tmp1257 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp1370 $tmp1371 	%argrw{"wr"}
	assign		___608_zi $tmp1370 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1373 2457 2459 2610 2612 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp1372 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp1373 ___608_xx $tmp1372 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1375 2461 2463 2608 2610 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp1374 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp1375 ___608_yy $tmp1374 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1377 2465 2467 2606 2608 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp1376 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp1377 ___608_zz $tmp1376 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp1378 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp1379 ___608_yy 	%argrw{"wr"}
	assign		$tmp1380 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp1378 $tmp1379 $tmp1380 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 2484 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1383 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp1384 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp1385 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp1382 $tmp1383 $tmp1384 $tmp1385 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp1382 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1387 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp1388 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp1389 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp1386 $tmp1387 $tmp1388 $tmp1389 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp1386 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp1381 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp1381 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp1390 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1257 $tmp1390 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 2557 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp1391 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp1391 2492 2492 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp1392 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp1392 2496 2496 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp1393 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp1393 2507 2507 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp1395 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp1394 $tmp1395 	%argrw{"wr"}
	compref		$tmp1397 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1396 $tmp1397 	%argrw{"wr"}
	add		$tmp1398 $tmp1394 $tmp1396 	%argrw{"wrr"}
	compref		$tmp1400 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1399 $tmp1400 	%argrw{"wr"}
	add		___614_d $tmp1398 $tmp1399 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp1401 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp1401 2518 2518 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp1403 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp1402 $tmp1403 	%argrw{"wr"}
	compref		$tmp1406 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1405 $tmp1406 	%argrw{"wr"}
	compref		$tmp1408 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1407 $tmp1408 	%argrw{"wr"}
	max		$tmp1404 $tmp1405 $tmp1407 	%argrw{"wrr"}
	max		___614_d $tmp1402 $tmp1404 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp1409 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp1409 2532 2532 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp1412 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp1411 $tmp1412 	%argrw{"wr"}
	sqrt		$tmp1410 $tmp1411 	%argrw{"wr"}
	compref		$tmp1415 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1414 $tmp1415 	%argrw{"wr"}
	sqrt		$tmp1413 $tmp1414 	%argrw{"wr"}
	add		$tmp1416 $tmp1410 $tmp1413 	%argrw{"wrr"}
	compref		$tmp1419 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1418 $tmp1419 	%argrw{"wr"}
	sqrt		$tmp1417 $tmp1418 	%argrw{"wr"}
	add		___614_d $tmp1416 $tmp1417 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp1420 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp1420 2540 2540 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp1423 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp1424 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp1422 $tmp1423 $tmp1424 	%argrw{"wrr"}
	sqrt		$tmp1421 $tmp1422 	%argrw{"wr"}
	sqrt		___614_d $tmp1421 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp1425 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp1425 2556 2556 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp1428 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp1427 $tmp1428 	%argrw{"wr"}
	pow		$tmp1426 $tmp1427 $const4 	%argrw{"wrr"}
	compref		$tmp1431 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1430 $tmp1431 	%argrw{"wr"}
	pow		$tmp1429 $tmp1430 $const4 	%argrw{"wrr"}
	add		$tmp1432 $tmp1426 $tmp1429 	%argrw{"wrr"}
	compref		$tmp1435 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1434 $tmp1435 	%argrw{"wr"}
	pow		$tmp1433 $tmp1434 $const4 	%argrw{"wrr"}
	add		$tmp1436 $tmp1432 $tmp1433 	%argrw{"wrr"}
	div		$tmp1437 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp1436 $tmp1437 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp1439 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp1440 ___608_yy 	%argrw{"wr"}
	assign		$tmp1441 ___608_zz 	%argrw{"wr"}
	point		$tmp1438 $tmp1439 $tmp1440 $tmp1441 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp1438 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp1442 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp1443 ___614_d $tmp1442 	%argrw{"wrr"}
	if		$tmp1443 2579 2606 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp1444 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1444 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp1445 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp1445 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp1446 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp1446 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp1447 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1447 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp1448 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp1448 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp1449 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp1449 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp1450 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp1451 ___614_d $tmp1450 	%argrw{"wrr"}
	if		$tmp1451 2592 2606 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp1452 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1452 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp1453 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp1453 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp1454 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1454 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp1455 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp1455 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp1456 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp1457 ___614_d $tmp1456 	%argrw{"wrr"}
	if		$tmp1457 2601 2606 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp1458 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1458 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp1459 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1459 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp1460 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp1461 ___614_d $tmp1460 	%argrw{"wrr"}
	if		$tmp1461 2606 2606 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1462 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1463 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1464 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp1365 ___619_da $const7 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp1465 $const13 $tmp1365 	%line{144} %argrw{"wrr"}
	sub		$tmp1255 $tmp1465 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	return	%line{178}
# intern/cycles/kernel/shaders/node_texture.h:179
# 	if (basis == "Voronoi F3")
	eq		$tmp1466 Basis $const33 	%line{179} %argrw{"wrr"}
	if		$tmp1466 2796 2796 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	functioncall	$const34 2795 	%line{180} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const35 2793 	%line{145} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:132
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 2793 	%line{132} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 2792 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp1469 $tmp1257 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp1468 $tmp1469 	%argrw{"wr"}
	assign		___608_xi $tmp1468 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp1471 $tmp1257 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp1470 $tmp1471 	%argrw{"wr"}
	assign		___608_yi $tmp1470 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp1473 $tmp1257 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp1472 $tmp1473 	%argrw{"wr"}
	assign		___608_zi $tmp1472 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1475 2637 2639 2790 2792 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp1474 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp1475 ___608_xx $tmp1474 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1477 2641 2643 2788 2790 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp1476 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp1477 ___608_yy $tmp1476 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1479 2645 2647 2786 2788 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp1478 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp1479 ___608_zz $tmp1478 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp1480 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp1481 ___608_yy 	%argrw{"wr"}
	assign		$tmp1482 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp1480 $tmp1481 $tmp1482 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 2664 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1485 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp1486 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp1487 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp1484 $tmp1485 $tmp1486 $tmp1487 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp1484 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1489 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp1490 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp1491 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp1488 $tmp1489 $tmp1490 $tmp1491 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp1488 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp1483 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp1483 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp1492 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1257 $tmp1492 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 2737 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp1493 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp1493 2672 2672 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp1494 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp1494 2676 2676 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp1495 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp1495 2687 2687 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp1497 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp1496 $tmp1497 	%argrw{"wr"}
	compref		$tmp1499 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1498 $tmp1499 	%argrw{"wr"}
	add		$tmp1500 $tmp1496 $tmp1498 	%argrw{"wrr"}
	compref		$tmp1502 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1501 $tmp1502 	%argrw{"wr"}
	add		___614_d $tmp1500 $tmp1501 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp1503 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp1503 2698 2698 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp1505 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp1504 $tmp1505 	%argrw{"wr"}
	compref		$tmp1508 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1507 $tmp1508 	%argrw{"wr"}
	compref		$tmp1510 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1509 $tmp1510 	%argrw{"wr"}
	max		$tmp1506 $tmp1507 $tmp1509 	%argrw{"wrr"}
	max		___614_d $tmp1504 $tmp1506 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp1511 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp1511 2712 2712 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp1514 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp1513 $tmp1514 	%argrw{"wr"}
	sqrt		$tmp1512 $tmp1513 	%argrw{"wr"}
	compref		$tmp1517 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1516 $tmp1517 	%argrw{"wr"}
	sqrt		$tmp1515 $tmp1516 	%argrw{"wr"}
	add		$tmp1518 $tmp1512 $tmp1515 	%argrw{"wrr"}
	compref		$tmp1521 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1520 $tmp1521 	%argrw{"wr"}
	sqrt		$tmp1519 $tmp1520 	%argrw{"wr"}
	add		___614_d $tmp1518 $tmp1519 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp1522 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp1522 2720 2720 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp1525 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp1526 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp1524 $tmp1525 $tmp1526 	%argrw{"wrr"}
	sqrt		$tmp1523 $tmp1524 	%argrw{"wr"}
	sqrt		___614_d $tmp1523 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp1527 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp1527 2736 2736 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp1530 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp1529 $tmp1530 	%argrw{"wr"}
	pow		$tmp1528 $tmp1529 $const4 	%argrw{"wrr"}
	compref		$tmp1533 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1532 $tmp1533 	%argrw{"wr"}
	pow		$tmp1531 $tmp1532 $const4 	%argrw{"wrr"}
	add		$tmp1534 $tmp1528 $tmp1531 	%argrw{"wrr"}
	compref		$tmp1537 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1536 $tmp1537 	%argrw{"wr"}
	pow		$tmp1535 $tmp1536 $const4 	%argrw{"wrr"}
	add		$tmp1538 $tmp1534 $tmp1535 	%argrw{"wrr"}
	div		$tmp1539 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp1538 $tmp1539 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp1541 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp1542 ___608_yy 	%argrw{"wr"}
	assign		$tmp1543 ___608_zz 	%argrw{"wr"}
	point		$tmp1540 $tmp1541 $tmp1542 $tmp1543 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp1540 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp1544 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp1545 ___614_d $tmp1544 	%argrw{"wrr"}
	if		$tmp1545 2759 2786 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp1546 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1546 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp1547 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp1547 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp1548 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp1548 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp1549 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1549 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp1550 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp1550 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp1551 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp1551 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp1552 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp1553 ___614_d $tmp1552 	%argrw{"wrr"}
	if		$tmp1553 2772 2786 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp1554 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1554 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp1555 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp1555 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp1556 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1556 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp1557 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp1557 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp1558 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp1559 ___614_d $tmp1558 	%argrw{"wrr"}
	if		$tmp1559 2781 2786 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp1560 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1560 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp1561 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1561 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp1562 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp1563 ___614_d $tmp1562 	%argrw{"wrr"}
	if		$tmp1563 2786 2786 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1564 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1565 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1566 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp1467 ___619_da $const18 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp1567 $const13 $tmp1467 	%line{145} %argrw{"wrr"}
	sub		$tmp1255 $tmp1567 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	return	%line{180}
# intern/cycles/kernel/shaders/node_texture.h:181
# 	if (basis == "Voronoi F4")
	eq		$tmp1568 Basis $const36 	%line{181} %argrw{"wrr"}
	if		$tmp1568 2976 2976 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	functioncall	$const37 2975 	%line{182} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const38 2973 	%line{146} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:133
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 2973 	%line{133} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 2972 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp1571 $tmp1257 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp1570 $tmp1571 	%argrw{"wr"}
	assign		___608_xi $tmp1570 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp1573 $tmp1257 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp1572 $tmp1573 	%argrw{"wr"}
	assign		___608_yi $tmp1572 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp1575 $tmp1257 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp1574 $tmp1575 	%argrw{"wr"}
	assign		___608_zi $tmp1574 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1577 2817 2819 2970 2972 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp1576 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp1577 ___608_xx $tmp1576 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1579 2821 2823 2968 2970 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp1578 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp1579 ___608_yy $tmp1578 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1581 2825 2827 2966 2968 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp1580 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp1581 ___608_zz $tmp1580 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp1582 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp1583 ___608_yy 	%argrw{"wr"}
	assign		$tmp1584 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp1582 $tmp1583 $tmp1584 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 2844 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1587 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp1588 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp1589 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp1586 $tmp1587 $tmp1588 $tmp1589 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp1586 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1591 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp1592 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp1593 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp1590 $tmp1591 $tmp1592 $tmp1593 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp1590 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp1585 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp1585 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp1594 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1257 $tmp1594 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 2917 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp1595 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp1595 2852 2852 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp1596 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp1596 2856 2856 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp1597 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp1597 2867 2867 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp1599 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp1598 $tmp1599 	%argrw{"wr"}
	compref		$tmp1601 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1600 $tmp1601 	%argrw{"wr"}
	add		$tmp1602 $tmp1598 $tmp1600 	%argrw{"wrr"}
	compref		$tmp1604 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1603 $tmp1604 	%argrw{"wr"}
	add		___614_d $tmp1602 $tmp1603 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp1605 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp1605 2878 2878 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp1607 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp1606 $tmp1607 	%argrw{"wr"}
	compref		$tmp1610 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1609 $tmp1610 	%argrw{"wr"}
	compref		$tmp1612 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1611 $tmp1612 	%argrw{"wr"}
	max		$tmp1608 $tmp1609 $tmp1611 	%argrw{"wrr"}
	max		___614_d $tmp1606 $tmp1608 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp1613 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp1613 2892 2892 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp1616 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp1615 $tmp1616 	%argrw{"wr"}
	sqrt		$tmp1614 $tmp1615 	%argrw{"wr"}
	compref		$tmp1619 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1618 $tmp1619 	%argrw{"wr"}
	sqrt		$tmp1617 $tmp1618 	%argrw{"wr"}
	add		$tmp1620 $tmp1614 $tmp1617 	%argrw{"wrr"}
	compref		$tmp1623 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1622 $tmp1623 	%argrw{"wr"}
	sqrt		$tmp1621 $tmp1622 	%argrw{"wr"}
	add		___614_d $tmp1620 $tmp1621 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp1624 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp1624 2900 2900 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp1627 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp1628 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp1626 $tmp1627 $tmp1628 	%argrw{"wrr"}
	sqrt		$tmp1625 $tmp1626 	%argrw{"wr"}
	sqrt		___614_d $tmp1625 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp1629 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp1629 2916 2916 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp1632 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp1631 $tmp1632 	%argrw{"wr"}
	pow		$tmp1630 $tmp1631 $const4 	%argrw{"wrr"}
	compref		$tmp1635 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1634 $tmp1635 	%argrw{"wr"}
	pow		$tmp1633 $tmp1634 $const4 	%argrw{"wrr"}
	add		$tmp1636 $tmp1630 $tmp1633 	%argrw{"wrr"}
	compref		$tmp1639 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1638 $tmp1639 	%argrw{"wr"}
	pow		$tmp1637 $tmp1638 $const4 	%argrw{"wrr"}
	add		$tmp1640 $tmp1636 $tmp1637 	%argrw{"wrr"}
	div		$tmp1641 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp1640 $tmp1641 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp1643 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp1644 ___608_yy 	%argrw{"wr"}
	assign		$tmp1645 ___608_zz 	%argrw{"wr"}
	point		$tmp1642 $tmp1643 $tmp1644 $tmp1645 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp1642 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp1646 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp1647 ___614_d $tmp1646 	%argrw{"wrr"}
	if		$tmp1647 2939 2966 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp1648 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1648 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp1649 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp1649 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp1650 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp1650 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp1651 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1651 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp1652 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp1652 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp1653 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp1653 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp1654 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp1655 ___614_d $tmp1654 	%argrw{"wrr"}
	if		$tmp1655 2952 2966 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp1656 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1656 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp1657 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp1657 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp1658 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1658 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp1659 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp1659 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp1660 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp1661 ___614_d $tmp1660 	%argrw{"wrr"}
	if		$tmp1661 2961 2966 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp1662 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1662 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp1663 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1663 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp1664 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp1665 ___614_d $tmp1664 	%argrw{"wrr"}
	if		$tmp1665 2966 2966 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1666 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1667 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1668 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp1569 ___619_da $const20 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp1669 $const13 $tmp1569 	%line{146} %argrw{"wrr"}
	sub		$tmp1255 $tmp1669 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	return	%line{182}
# intern/cycles/kernel/shaders/node_texture.h:183
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp1670 Basis $const39 	%line{183} %argrw{"wrr"}
	if		$tmp1670 3158 3158 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	functioncall	$const40 3157 	%line{184} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const41 3155 	%line{147} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 3155 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 3152 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp1673 $tmp1257 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp1672 $tmp1673 	%argrw{"wr"}
	assign		___608_xi $tmp1672 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp1675 $tmp1257 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp1674 $tmp1675 	%argrw{"wr"}
	assign		___608_yi $tmp1674 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp1677 $tmp1257 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp1676 $tmp1677 	%argrw{"wr"}
	assign		___608_zi $tmp1676 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1679 2997 2999 3150 3152 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp1678 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp1679 ___608_xx $tmp1678 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1681 3001 3003 3148 3150 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp1680 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp1681 ___608_yy $tmp1680 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1683 3005 3007 3146 3148 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp1682 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp1683 ___608_zz $tmp1682 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp1684 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp1685 ___608_yy 	%argrw{"wr"}
	assign		$tmp1686 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp1684 $tmp1685 $tmp1686 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 3024 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1689 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp1690 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp1691 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp1688 $tmp1689 $tmp1690 $tmp1691 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp1688 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1693 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp1694 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp1695 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp1692 $tmp1693 $tmp1694 $tmp1695 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp1692 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp1687 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp1687 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp1696 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1257 $tmp1696 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 3097 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp1697 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp1697 3032 3032 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp1698 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp1698 3036 3036 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp1699 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp1699 3047 3047 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp1701 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp1700 $tmp1701 	%argrw{"wr"}
	compref		$tmp1703 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1702 $tmp1703 	%argrw{"wr"}
	add		$tmp1704 $tmp1700 $tmp1702 	%argrw{"wrr"}
	compref		$tmp1706 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1705 $tmp1706 	%argrw{"wr"}
	add		___614_d $tmp1704 $tmp1705 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp1707 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp1707 3058 3058 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp1709 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp1708 $tmp1709 	%argrw{"wr"}
	compref		$tmp1712 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1711 $tmp1712 	%argrw{"wr"}
	compref		$tmp1714 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1713 $tmp1714 	%argrw{"wr"}
	max		$tmp1710 $tmp1711 $tmp1713 	%argrw{"wrr"}
	max		___614_d $tmp1708 $tmp1710 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp1715 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp1715 3072 3072 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp1718 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp1717 $tmp1718 	%argrw{"wr"}
	sqrt		$tmp1716 $tmp1717 	%argrw{"wr"}
	compref		$tmp1721 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1720 $tmp1721 	%argrw{"wr"}
	sqrt		$tmp1719 $tmp1720 	%argrw{"wr"}
	add		$tmp1722 $tmp1716 $tmp1719 	%argrw{"wrr"}
	compref		$tmp1725 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1724 $tmp1725 	%argrw{"wr"}
	sqrt		$tmp1723 $tmp1724 	%argrw{"wr"}
	add		___614_d $tmp1722 $tmp1723 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp1726 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp1726 3080 3080 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp1729 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp1730 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp1728 $tmp1729 $tmp1730 	%argrw{"wrr"}
	sqrt		$tmp1727 $tmp1728 	%argrw{"wr"}
	sqrt		___614_d $tmp1727 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp1731 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp1731 3096 3096 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp1734 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp1733 $tmp1734 	%argrw{"wr"}
	pow		$tmp1732 $tmp1733 $const4 	%argrw{"wrr"}
	compref		$tmp1737 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1736 $tmp1737 	%argrw{"wr"}
	pow		$tmp1735 $tmp1736 $const4 	%argrw{"wrr"}
	add		$tmp1738 $tmp1732 $tmp1735 	%argrw{"wrr"}
	compref		$tmp1741 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1740 $tmp1741 	%argrw{"wr"}
	pow		$tmp1739 $tmp1740 $const4 	%argrw{"wrr"}
	add		$tmp1742 $tmp1738 $tmp1739 	%argrw{"wrr"}
	div		$tmp1743 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp1742 $tmp1743 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp1745 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp1746 ___608_yy 	%argrw{"wr"}
	assign		$tmp1747 ___608_zz 	%argrw{"wr"}
	point		$tmp1744 $tmp1745 $tmp1746 $tmp1747 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp1744 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp1748 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp1749 ___614_d $tmp1748 	%argrw{"wrr"}
	if		$tmp1749 3119 3146 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp1750 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp1750 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp1751 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp1751 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp1752 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp1752 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp1753 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp1753 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp1754 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp1754 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp1755 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp1755 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp1756 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp1757 ___614_d $tmp1756 	%argrw{"wrr"}
	if		$tmp1757 3132 3146 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp1758 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp1758 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp1759 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp1759 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp1760 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp1760 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp1761 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp1761 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp1762 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp1763 ___614_d $tmp1762 	%argrw{"wrr"}
	if		$tmp1763 3141 3146 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp1764 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp1764 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp1765 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp1765 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp1766 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp1767 ___614_d $tmp1766 	%argrw{"wrr"}
	if		$tmp1767 3146 3146 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1768 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1769 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1770 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp1771 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp1772 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp1671 $tmp1771 $tmp1772 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp1773 $const13 $tmp1671 	%line{147} %argrw{"wrr"}
	sub		$tmp1255 $tmp1773 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	return	%line{184}
# intern/cycles/kernel/shaders/node_texture.h:185
# 	if (basis == "Voronoi Crackle")
	eq		$tmp1774 Basis $const43 	%line{185} %argrw{"wrr"}
	if		$tmp1774 3347 3347 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	functioncall	$const44 3346 	%line{186} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const45 3344 	%line{148} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const41 3338 	%line{139} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 3338 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 3335 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp1778 $tmp1257 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp1777 $tmp1778 	%argrw{"wr"}
	assign		___608_xi $tmp1777 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp1780 $tmp1257 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp1779 $tmp1780 	%argrw{"wr"}
	assign		___608_yi $tmp1779 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp1782 $tmp1257 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp1781 $tmp1782 	%argrw{"wr"}
	assign		___608_zi $tmp1781 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1784 3180 3182 3333 3335 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp1783 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp1784 ___608_xx $tmp1783 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1786 3184 3186 3331 3333 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp1785 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp1786 ___608_yy $tmp1785 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1788 3188 3190 3329 3331 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp1787 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp1788 ___608_zz $tmp1787 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp1789 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp1790 ___608_yy 	%argrw{"wr"}
	assign		$tmp1791 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp1789 $tmp1790 $tmp1791 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 3207 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1794 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp1795 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp1796 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp1793 $tmp1794 $tmp1795 $tmp1796 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp1793 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1798 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp1799 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp1800 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp1797 $tmp1798 $tmp1799 $tmp1800 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp1797 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp1792 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp1792 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp1801 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1257 $tmp1801 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 3280 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp1802 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp1802 3215 3215 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp1803 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp1803 3219 3219 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp1804 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp1804 3230 3230 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp1806 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp1805 $tmp1806 	%argrw{"wr"}
	compref		$tmp1808 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1807 $tmp1808 	%argrw{"wr"}
	add		$tmp1809 $tmp1805 $tmp1807 	%argrw{"wrr"}
	compref		$tmp1811 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1810 $tmp1811 	%argrw{"wr"}
	add		___614_d $tmp1809 $tmp1810 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp1812 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp1812 3241 3241 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp1814 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp1813 $tmp1814 	%argrw{"wr"}
	compref		$tmp1817 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1816 $tmp1817 	%argrw{"wr"}
	compref		$tmp1819 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1818 $tmp1819 	%argrw{"wr"}
	max		$tmp1815 $tmp1816 $tmp1818 	%argrw{"wrr"}
	max		___614_d $tmp1813 $tmp1815 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp1820 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp1820 3255 3255 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp1823 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp1822 $tmp1823 	%argrw{"wr"}
	sqrt		$tmp1821 $tmp1822 	%argrw{"wr"}
	compref		$tmp1826 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1825 $tmp1826 	%argrw{"wr"}
	sqrt		$tmp1824 $tmp1825 	%argrw{"wr"}
	add		$tmp1827 $tmp1821 $tmp1824 	%argrw{"wrr"}
	compref		$tmp1830 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1829 $tmp1830 	%argrw{"wr"}
	sqrt		$tmp1828 $tmp1829 	%argrw{"wr"}
	add		___614_d $tmp1827 $tmp1828 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp1831 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp1831 3263 3263 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp1834 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp1835 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp1833 $tmp1834 $tmp1835 	%argrw{"wrr"}
	sqrt		$tmp1832 $tmp1833 	%argrw{"wr"}
	sqrt		___614_d $tmp1832 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp1836 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp1836 3279 3279 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp1839 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp1838 $tmp1839 	%argrw{"wr"}
	pow		$tmp1837 $tmp1838 $const4 	%argrw{"wrr"}
	compref		$tmp1842 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1841 $tmp1842 	%argrw{"wr"}
	pow		$tmp1840 $tmp1841 $const4 	%argrw{"wrr"}
	add		$tmp1843 $tmp1837 $tmp1840 	%argrw{"wrr"}
	compref		$tmp1846 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1845 $tmp1846 	%argrw{"wr"}
	pow		$tmp1844 $tmp1845 $const4 	%argrw{"wrr"}
	add		$tmp1847 $tmp1843 $tmp1844 	%argrw{"wrr"}
	div		$tmp1848 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp1847 $tmp1848 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp1850 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp1851 ___608_yy 	%argrw{"wr"}
	assign		$tmp1852 ___608_zz 	%argrw{"wr"}
	point		$tmp1849 $tmp1850 $tmp1851 $tmp1852 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp1849 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp1853 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp1854 ___614_d $tmp1853 	%argrw{"wrr"}
	if		$tmp1854 3302 3329 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp1855 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp1855 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp1856 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp1856 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp1857 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp1857 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp1858 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp1858 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp1859 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp1859 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp1860 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp1860 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp1861 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp1862 ___614_d $tmp1861 	%argrw{"wrr"}
	if		$tmp1862 3315 3329 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp1863 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp1863 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp1864 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp1864 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp1865 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp1865 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp1866 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp1866 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp1867 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp1868 ___614_d $tmp1867 	%argrw{"wrr"}
	if		$tmp1868 3324 3329 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp1869 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp1869 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp1870 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp1870 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp1871 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp1872 ___614_d $tmp1871 	%argrw{"wrr"}
	if		$tmp1872 3329 3329 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1873 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1874 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1875 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp1876 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp1877 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp1776 $tmp1876 $tmp1877 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___626_t $const46 $tmp1776 	%line{139} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:140
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp1878 ___626_t $const29 	%line{140} %argrw{"wrr"}
	if		$tmp1878 3342 3343 	%argrw{"r"}
	assign		$tmp1775 $const29 	%argrw{"wr"}
	assign		$tmp1775 ___626_t 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp1879 $const13 $tmp1775 	%line{148} %argrw{"wrr"}
	sub		$tmp1255 $tmp1879 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	return	%line{186}
# intern/cycles/kernel/shaders/node_texture.h:187
# 	if (basis == "Cell Noise")
	eq		$tmp1880 Basis $const47 	%line{187} %argrw{"wrr"}
	if		$tmp1880 3351 3351 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:188
# 		return cellnoise(p);
	cellnoise	$tmp1255 $tmp1257 	%line{188} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:190
# 	return 0.0;
	assign		$tmp1255 $const4 	%line{190} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_noise_texture.osl:32
# 		r[2] = noise_basis(p - point(13.5), basis) * distortion;
	mul		$tmp1881 $tmp1255 Distortion 	%filename{"intern/cycles/kernel/shaders/node_noise_texture.osl"} %line{32} %argrw{"wrr"}
	compassign	___646_r $const18 $tmp1881 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_noise_texture.osl:34
# 		p += r;
	add		$tmp1 $tmp1 ___646_r 	%line{34} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_noise_texture.osl:37
# 	fac = noise_turbulence(p, basis, detail, hard);
	functioncall	$const48 5644 	%line{37} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:230
# /* Soft/Hard Noise */
	assign		___640_fscale $const29 	%filename{"intern/cycles/kernel/shaders/node_texture.h"} %line{230} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:231
# 
	assign		___640_amp $const29 	%line{231} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:232
# float noise_basis_hard(point p, string basis, int hard)
	assign		___640_sum $const4 	%line{232} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:235
# 	return (hard) ? fabs(2.0 * t - 1.0) : t;
	functioncall	$const50 3362 	%line{235} %argrw{"r"}
# intern/cycles/kernel/shaders/stdosl.h:142
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1882 Detail $const49 	%filename{"intern/cycles/kernel/shaders/stdosl.h"} %line{142} %argrw{"wrr"}
	max		___640_octaves $tmp1882 $const4 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:236
# 				else if (d < da[2]) {
	assign		___640_n ___640_octaves 	%filename{"intern/cycles/kernel/shaders/node_texture.h"} %line{236} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:238
# 					da[2] = d;
	for		$tmp1883 3365 3366 4487 4489 	%line{238} %argrw{"r"}
	assign		___640_i $const3 	%argrw{"wr"}
	le		$tmp1883 ___640_i ___640_n 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:239
# 
	mul		$tmp1884 ___640_fscale $tmp1 	%line{239} %argrw{"wrr"}
	functioncall	$const6 4479 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:173
# 	if (basis == "Perlin")
	eq		$tmp1885 Basis $const1 	%line{173} %argrw{"wrr"}
	if		$tmp1885 3383 3383 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 		return safe_noise(p, 1);
	functioncall	$const8 3382 	%line{174} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:154
# 	float f = 0.0;
	assign		___633_f $const4 	%line{154} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:157
# 	if (type == 0)
	eq		$tmp1886 $const7 $const3 	%line{157} %argrw{"wrr"}
	if		$tmp1886 3375 3376 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:158
# 		f = noise("perlin", p);
	noise		___633_f $const9 $tmp1884 	%line{158} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:162
# 		f = noise(p);
	noise		___633_f $tmp1884 	%line{162} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:165
# 	if (!isfinite(f))
	isfinite	$tmp1887 ___633_f 	%line{165} %argrw{"wr"}
	eq		$tmp1888 $tmp1887 $const3 	%argrw{"wrr"}
	if		$tmp1888 3381 3381 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:166
# 		return 0.5;
	assign		___642_t $const10 	%line{166} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:168
# 	return f;
	assign		___642_t ___633_f 	%line{168} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 		return safe_noise(p, 1);
	return	%line{174}
# intern/cycles/kernel/shaders/node_texture.h:175
# 	if (basis == "Voronoi F1")
	eq		$tmp1889 Basis $const11 	%line{175} %argrw{"wrr"}
	if		$tmp1889 3563 3563 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	functioncall	$const12 3562 	%line{176} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 3560 	%line{143} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:130
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 3560 	%line{130} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 3559 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp1892 $tmp1884 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp1891 $tmp1892 	%argrw{"wr"}
	assign		___608_xi $tmp1891 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp1894 $tmp1884 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp1893 $tmp1894 	%argrw{"wr"}
	assign		___608_yi $tmp1893 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp1896 $tmp1884 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp1895 $tmp1896 	%argrw{"wr"}
	assign		___608_zi $tmp1895 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1898 3404 3406 3557 3559 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp1897 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp1898 ___608_xx $tmp1897 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1900 3408 3410 3555 3557 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp1899 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp1900 ___608_yy $tmp1899 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1902 3412 3414 3553 3555 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp1901 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp1902 ___608_zz $tmp1901 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp1903 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp1904 ___608_yy 	%argrw{"wr"}
	assign		$tmp1905 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp1903 $tmp1904 $tmp1905 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 3431 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1908 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp1909 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp1910 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp1907 $tmp1908 $tmp1909 $tmp1910 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp1907 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1912 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp1913 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp1914 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp1911 $tmp1912 $tmp1913 $tmp1914 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp1911 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp1906 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp1906 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp1915 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1884 $tmp1915 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 3504 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp1916 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp1916 3439 3439 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp1917 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp1917 3443 3443 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp1918 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp1918 3454 3454 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp1920 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp1919 $tmp1920 	%argrw{"wr"}
	compref		$tmp1922 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1921 $tmp1922 	%argrw{"wr"}
	add		$tmp1923 $tmp1919 $tmp1921 	%argrw{"wrr"}
	compref		$tmp1925 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1924 $tmp1925 	%argrw{"wr"}
	add		___614_d $tmp1923 $tmp1924 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp1926 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp1926 3465 3465 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp1928 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp1927 $tmp1928 	%argrw{"wr"}
	compref		$tmp1931 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1930 $tmp1931 	%argrw{"wr"}
	compref		$tmp1933 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1932 $tmp1933 	%argrw{"wr"}
	max		$tmp1929 $tmp1930 $tmp1932 	%argrw{"wrr"}
	max		___614_d $tmp1927 $tmp1929 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp1934 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp1934 3479 3479 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp1937 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp1936 $tmp1937 	%argrw{"wr"}
	sqrt		$tmp1935 $tmp1936 	%argrw{"wr"}
	compref		$tmp1940 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1939 $tmp1940 	%argrw{"wr"}
	sqrt		$tmp1938 $tmp1939 	%argrw{"wr"}
	add		$tmp1941 $tmp1935 $tmp1938 	%argrw{"wrr"}
	compref		$tmp1944 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1943 $tmp1944 	%argrw{"wr"}
	sqrt		$tmp1942 $tmp1943 	%argrw{"wr"}
	add		___614_d $tmp1941 $tmp1942 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp1945 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp1945 3487 3487 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp1948 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp1949 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp1947 $tmp1948 $tmp1949 	%argrw{"wrr"}
	sqrt		$tmp1946 $tmp1947 	%argrw{"wr"}
	sqrt		___614_d $tmp1946 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp1950 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp1950 3503 3503 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp1953 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp1952 $tmp1953 	%argrw{"wr"}
	pow		$tmp1951 $tmp1952 $const4 	%argrw{"wrr"}
	compref		$tmp1956 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp1955 $tmp1956 	%argrw{"wr"}
	pow		$tmp1954 $tmp1955 $const4 	%argrw{"wrr"}
	add		$tmp1957 $tmp1951 $tmp1954 	%argrw{"wrr"}
	compref		$tmp1960 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp1959 $tmp1960 	%argrw{"wr"}
	pow		$tmp1958 $tmp1959 $const4 	%argrw{"wrr"}
	add		$tmp1961 $tmp1957 $tmp1958 	%argrw{"wrr"}
	div		$tmp1962 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp1961 $tmp1962 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp1964 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp1965 ___608_yy 	%argrw{"wr"}
	assign		$tmp1966 ___608_zz 	%argrw{"wr"}
	point		$tmp1963 $tmp1964 $tmp1965 $tmp1966 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp1963 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp1967 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp1968 ___614_d $tmp1967 	%argrw{"wrr"}
	if		$tmp1968 3526 3553 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp1969 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1969 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp1970 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp1970 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp1971 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp1971 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp1972 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1972 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp1973 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp1973 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp1974 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp1974 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp1975 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp1976 ___614_d $tmp1975 	%argrw{"wrr"}
	if		$tmp1976 3539 3553 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp1977 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1977 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp1978 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp1978 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp1979 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1979 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp1980 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp1980 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp1981 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp1982 ___614_d $tmp1981 	%argrw{"wrr"}
	if		$tmp1982 3548 3553 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp1983 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp1983 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp1984 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp1984 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp1985 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp1986 ___614_d $tmp1985 	%argrw{"wrr"}
	if		$tmp1986 3553 3553 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1987 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1988 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1989 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp1890 ___619_da $const3 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp1990 $const13 $tmp1890 	%line{143} %argrw{"wrr"}
	sub		___642_t $tmp1990 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	return	%line{176}
# intern/cycles/kernel/shaders/node_texture.h:177
# 	if (basis == "Voronoi F2")
	eq		$tmp1991 Basis $const30 	%line{177} %argrw{"wrr"}
	if		$tmp1991 3743 3743 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	functioncall	$const31 3742 	%line{178} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const32 3740 	%line{144} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:131
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 3740 	%line{131} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 3739 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp1994 $tmp1884 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp1993 $tmp1994 	%argrw{"wr"}
	assign		___608_xi $tmp1993 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp1996 $tmp1884 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp1995 $tmp1996 	%argrw{"wr"}
	assign		___608_yi $tmp1995 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp1998 $tmp1884 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp1997 $tmp1998 	%argrw{"wr"}
	assign		___608_zi $tmp1997 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2000 3584 3586 3737 3739 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp1999 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp2000 ___608_xx $tmp1999 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2002 3588 3590 3735 3737 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp2001 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp2002 ___608_yy $tmp2001 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2004 3592 3594 3733 3735 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp2003 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp2004 ___608_zz $tmp2003 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp2005 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp2006 ___608_yy 	%argrw{"wr"}
	assign		$tmp2007 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp2005 $tmp2006 $tmp2007 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 3611 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2010 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp2011 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp2012 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp2009 $tmp2010 $tmp2011 $tmp2012 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp2009 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2014 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp2015 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp2016 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp2013 $tmp2014 $tmp2015 $tmp2016 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp2013 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp2008 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp2008 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp2017 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1884 $tmp2017 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 3684 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp2018 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp2018 3619 3619 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp2019 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp2019 3623 3623 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp2020 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp2020 3634 3634 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp2022 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp2021 $tmp2022 	%argrw{"wr"}
	compref		$tmp2024 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2023 $tmp2024 	%argrw{"wr"}
	add		$tmp2025 $tmp2021 $tmp2023 	%argrw{"wrr"}
	compref		$tmp2027 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2026 $tmp2027 	%argrw{"wr"}
	add		___614_d $tmp2025 $tmp2026 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp2028 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp2028 3645 3645 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp2030 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp2029 $tmp2030 	%argrw{"wr"}
	compref		$tmp2033 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2032 $tmp2033 	%argrw{"wr"}
	compref		$tmp2035 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2034 $tmp2035 	%argrw{"wr"}
	max		$tmp2031 $tmp2032 $tmp2034 	%argrw{"wrr"}
	max		___614_d $tmp2029 $tmp2031 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp2036 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp2036 3659 3659 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp2039 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp2038 $tmp2039 	%argrw{"wr"}
	sqrt		$tmp2037 $tmp2038 	%argrw{"wr"}
	compref		$tmp2042 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2041 $tmp2042 	%argrw{"wr"}
	sqrt		$tmp2040 $tmp2041 	%argrw{"wr"}
	add		$tmp2043 $tmp2037 $tmp2040 	%argrw{"wrr"}
	compref		$tmp2046 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2045 $tmp2046 	%argrw{"wr"}
	sqrt		$tmp2044 $tmp2045 	%argrw{"wr"}
	add		___614_d $tmp2043 $tmp2044 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp2047 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp2047 3667 3667 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp2050 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp2051 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp2049 $tmp2050 $tmp2051 	%argrw{"wrr"}
	sqrt		$tmp2048 $tmp2049 	%argrw{"wr"}
	sqrt		___614_d $tmp2048 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp2052 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp2052 3683 3683 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp2055 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp2054 $tmp2055 	%argrw{"wr"}
	pow		$tmp2053 $tmp2054 $const4 	%argrw{"wrr"}
	compref		$tmp2058 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2057 $tmp2058 	%argrw{"wr"}
	pow		$tmp2056 $tmp2057 $const4 	%argrw{"wrr"}
	add		$tmp2059 $tmp2053 $tmp2056 	%argrw{"wrr"}
	compref		$tmp2062 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2061 $tmp2062 	%argrw{"wr"}
	pow		$tmp2060 $tmp2061 $const4 	%argrw{"wrr"}
	add		$tmp2063 $tmp2059 $tmp2060 	%argrw{"wrr"}
	div		$tmp2064 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp2063 $tmp2064 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp2066 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp2067 ___608_yy 	%argrw{"wr"}
	assign		$tmp2068 ___608_zz 	%argrw{"wr"}
	point		$tmp2065 $tmp2066 $tmp2067 $tmp2068 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp2065 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp2069 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp2070 ___614_d $tmp2069 	%argrw{"wrr"}
	if		$tmp2070 3706 3733 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp2071 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2071 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp2072 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp2072 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp2073 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp2073 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp2074 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2074 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp2075 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp2075 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp2076 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp2076 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp2077 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp2078 ___614_d $tmp2077 	%argrw{"wrr"}
	if		$tmp2078 3719 3733 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp2079 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2079 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp2080 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp2080 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp2081 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2081 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp2082 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp2082 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp2083 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp2084 ___614_d $tmp2083 	%argrw{"wrr"}
	if		$tmp2084 3728 3733 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp2085 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2085 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp2086 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2086 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp2087 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp2088 ___614_d $tmp2087 	%argrw{"wrr"}
	if		$tmp2088 3733 3733 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2089 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2090 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2091 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp1992 ___619_da $const7 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp2092 $const13 $tmp1992 	%line{144} %argrw{"wrr"}
	sub		___642_t $tmp2092 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	return	%line{178}
# intern/cycles/kernel/shaders/node_texture.h:179
# 	if (basis == "Voronoi F3")
	eq		$tmp2093 Basis $const33 	%line{179} %argrw{"wrr"}
	if		$tmp2093 3923 3923 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	functioncall	$const34 3922 	%line{180} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const35 3920 	%line{145} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:132
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 3920 	%line{132} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 3919 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp2096 $tmp1884 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp2095 $tmp2096 	%argrw{"wr"}
	assign		___608_xi $tmp2095 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp2098 $tmp1884 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp2097 $tmp2098 	%argrw{"wr"}
	assign		___608_yi $tmp2097 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp2100 $tmp1884 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp2099 $tmp2100 	%argrw{"wr"}
	assign		___608_zi $tmp2099 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2102 3764 3766 3917 3919 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp2101 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp2102 ___608_xx $tmp2101 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2104 3768 3770 3915 3917 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp2103 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp2104 ___608_yy $tmp2103 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2106 3772 3774 3913 3915 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp2105 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp2106 ___608_zz $tmp2105 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp2107 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp2108 ___608_yy 	%argrw{"wr"}
	assign		$tmp2109 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp2107 $tmp2108 $tmp2109 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 3791 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2112 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp2113 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp2114 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp2111 $tmp2112 $tmp2113 $tmp2114 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp2111 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2116 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp2117 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp2118 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp2115 $tmp2116 $tmp2117 $tmp2118 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp2115 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp2110 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp2110 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp2119 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1884 $tmp2119 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 3864 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp2120 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp2120 3799 3799 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp2121 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp2121 3803 3803 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp2122 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp2122 3814 3814 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp2124 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp2123 $tmp2124 	%argrw{"wr"}
	compref		$tmp2126 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2125 $tmp2126 	%argrw{"wr"}
	add		$tmp2127 $tmp2123 $tmp2125 	%argrw{"wrr"}
	compref		$tmp2129 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2128 $tmp2129 	%argrw{"wr"}
	add		___614_d $tmp2127 $tmp2128 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp2130 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp2130 3825 3825 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp2132 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp2131 $tmp2132 	%argrw{"wr"}
	compref		$tmp2135 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2134 $tmp2135 	%argrw{"wr"}
	compref		$tmp2137 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2136 $tmp2137 	%argrw{"wr"}
	max		$tmp2133 $tmp2134 $tmp2136 	%argrw{"wrr"}
	max		___614_d $tmp2131 $tmp2133 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp2138 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp2138 3839 3839 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp2141 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp2140 $tmp2141 	%argrw{"wr"}
	sqrt		$tmp2139 $tmp2140 	%argrw{"wr"}
	compref		$tmp2144 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2143 $tmp2144 	%argrw{"wr"}
	sqrt		$tmp2142 $tmp2143 	%argrw{"wr"}
	add		$tmp2145 $tmp2139 $tmp2142 	%argrw{"wrr"}
	compref		$tmp2148 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2147 $tmp2148 	%argrw{"wr"}
	sqrt		$tmp2146 $tmp2147 	%argrw{"wr"}
	add		___614_d $tmp2145 $tmp2146 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp2149 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp2149 3847 3847 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp2152 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp2153 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp2151 $tmp2152 $tmp2153 	%argrw{"wrr"}
	sqrt		$tmp2150 $tmp2151 	%argrw{"wr"}
	sqrt		___614_d $tmp2150 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp2154 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp2154 3863 3863 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp2157 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp2156 $tmp2157 	%argrw{"wr"}
	pow		$tmp2155 $tmp2156 $const4 	%argrw{"wrr"}
	compref		$tmp2160 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2159 $tmp2160 	%argrw{"wr"}
	pow		$tmp2158 $tmp2159 $const4 	%argrw{"wrr"}
	add		$tmp2161 $tmp2155 $tmp2158 	%argrw{"wrr"}
	compref		$tmp2164 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2163 $tmp2164 	%argrw{"wr"}
	pow		$tmp2162 $tmp2163 $const4 	%argrw{"wrr"}
	add		$tmp2165 $tmp2161 $tmp2162 	%argrw{"wrr"}
	div		$tmp2166 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp2165 $tmp2166 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp2168 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp2169 ___608_yy 	%argrw{"wr"}
	assign		$tmp2170 ___608_zz 	%argrw{"wr"}
	point		$tmp2167 $tmp2168 $tmp2169 $tmp2170 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp2167 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp2171 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp2172 ___614_d $tmp2171 	%argrw{"wrr"}
	if		$tmp2172 3886 3913 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp2173 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2173 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp2174 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp2174 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp2175 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp2175 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp2176 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2176 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp2177 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp2177 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp2178 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp2178 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp2179 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp2180 ___614_d $tmp2179 	%argrw{"wrr"}
	if		$tmp2180 3899 3913 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp2181 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2181 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp2182 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp2182 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp2183 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2183 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp2184 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp2184 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp2185 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp2186 ___614_d $tmp2185 	%argrw{"wrr"}
	if		$tmp2186 3908 3913 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp2187 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2187 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp2188 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2188 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp2189 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp2190 ___614_d $tmp2189 	%argrw{"wrr"}
	if		$tmp2190 3913 3913 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2191 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2192 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2193 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp2094 ___619_da $const18 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp2194 $const13 $tmp2094 	%line{145} %argrw{"wrr"}
	sub		___642_t $tmp2194 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	return	%line{180}
# intern/cycles/kernel/shaders/node_texture.h:181
# 	if (basis == "Voronoi F4")
	eq		$tmp2195 Basis $const36 	%line{181} %argrw{"wrr"}
	if		$tmp2195 4103 4103 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	functioncall	$const37 4102 	%line{182} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const38 4100 	%line{146} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:133
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 4100 	%line{133} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 4099 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp2198 $tmp1884 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp2197 $tmp2198 	%argrw{"wr"}
	assign		___608_xi $tmp2197 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp2200 $tmp1884 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp2199 $tmp2200 	%argrw{"wr"}
	assign		___608_yi $tmp2199 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp2202 $tmp1884 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp2201 $tmp2202 	%argrw{"wr"}
	assign		___608_zi $tmp2201 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2204 3944 3946 4097 4099 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp2203 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp2204 ___608_xx $tmp2203 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2206 3948 3950 4095 4097 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp2205 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp2206 ___608_yy $tmp2205 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2208 3952 3954 4093 4095 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp2207 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp2208 ___608_zz $tmp2207 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp2209 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp2210 ___608_yy 	%argrw{"wr"}
	assign		$tmp2211 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp2209 $tmp2210 $tmp2211 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 3971 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2214 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp2215 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp2216 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp2213 $tmp2214 $tmp2215 $tmp2216 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp2213 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2218 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp2219 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp2220 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp2217 $tmp2218 $tmp2219 $tmp2220 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp2217 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp2212 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp2212 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp2221 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1884 $tmp2221 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 4044 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp2222 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp2222 3979 3979 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp2223 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp2223 3983 3983 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp2224 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp2224 3994 3994 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp2226 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp2225 $tmp2226 	%argrw{"wr"}
	compref		$tmp2228 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2227 $tmp2228 	%argrw{"wr"}
	add		$tmp2229 $tmp2225 $tmp2227 	%argrw{"wrr"}
	compref		$tmp2231 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2230 $tmp2231 	%argrw{"wr"}
	add		___614_d $tmp2229 $tmp2230 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp2232 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp2232 4005 4005 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp2234 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp2233 $tmp2234 	%argrw{"wr"}
	compref		$tmp2237 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2236 $tmp2237 	%argrw{"wr"}
	compref		$tmp2239 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2238 $tmp2239 	%argrw{"wr"}
	max		$tmp2235 $tmp2236 $tmp2238 	%argrw{"wrr"}
	max		___614_d $tmp2233 $tmp2235 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp2240 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp2240 4019 4019 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp2243 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp2242 $tmp2243 	%argrw{"wr"}
	sqrt		$tmp2241 $tmp2242 	%argrw{"wr"}
	compref		$tmp2246 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2245 $tmp2246 	%argrw{"wr"}
	sqrt		$tmp2244 $tmp2245 	%argrw{"wr"}
	add		$tmp2247 $tmp2241 $tmp2244 	%argrw{"wrr"}
	compref		$tmp2250 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2249 $tmp2250 	%argrw{"wr"}
	sqrt		$tmp2248 $tmp2249 	%argrw{"wr"}
	add		___614_d $tmp2247 $tmp2248 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp2251 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp2251 4027 4027 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp2254 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp2255 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp2253 $tmp2254 $tmp2255 	%argrw{"wrr"}
	sqrt		$tmp2252 $tmp2253 	%argrw{"wr"}
	sqrt		___614_d $tmp2252 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp2256 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp2256 4043 4043 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp2259 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp2258 $tmp2259 	%argrw{"wr"}
	pow		$tmp2257 $tmp2258 $const4 	%argrw{"wrr"}
	compref		$tmp2262 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2261 $tmp2262 	%argrw{"wr"}
	pow		$tmp2260 $tmp2261 $const4 	%argrw{"wrr"}
	add		$tmp2263 $tmp2257 $tmp2260 	%argrw{"wrr"}
	compref		$tmp2266 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2265 $tmp2266 	%argrw{"wr"}
	pow		$tmp2264 $tmp2265 $const4 	%argrw{"wrr"}
	add		$tmp2267 $tmp2263 $tmp2264 	%argrw{"wrr"}
	div		$tmp2268 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp2267 $tmp2268 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp2270 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp2271 ___608_yy 	%argrw{"wr"}
	assign		$tmp2272 ___608_zz 	%argrw{"wr"}
	point		$tmp2269 $tmp2270 $tmp2271 $tmp2272 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp2269 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp2273 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp2274 ___614_d $tmp2273 	%argrw{"wrr"}
	if		$tmp2274 4066 4093 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp2275 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2275 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp2276 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp2276 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp2277 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp2277 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp2278 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2278 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp2279 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp2279 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp2280 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp2280 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp2281 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp2282 ___614_d $tmp2281 	%argrw{"wrr"}
	if		$tmp2282 4079 4093 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp2283 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2283 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp2284 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp2284 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp2285 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2285 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp2286 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp2286 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp2287 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp2288 ___614_d $tmp2287 	%argrw{"wrr"}
	if		$tmp2288 4088 4093 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp2289 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2289 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp2290 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2290 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp2291 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp2292 ___614_d $tmp2291 	%argrw{"wrr"}
	if		$tmp2292 4093 4093 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2293 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2294 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2295 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp2196 ___619_da $const20 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp2296 $const13 $tmp2196 	%line{146} %argrw{"wrr"}
	sub		___642_t $tmp2296 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	return	%line{182}
# intern/cycles/kernel/shaders/node_texture.h:183
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp2297 Basis $const39 	%line{183} %argrw{"wrr"}
	if		$tmp2297 4285 4285 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	functioncall	$const40 4284 	%line{184} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const41 4282 	%line{147} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 4282 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 4279 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp2300 $tmp1884 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp2299 $tmp2300 	%argrw{"wr"}
	assign		___608_xi $tmp2299 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp2302 $tmp1884 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp2301 $tmp2302 	%argrw{"wr"}
	assign		___608_yi $tmp2301 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp2304 $tmp1884 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp2303 $tmp2304 	%argrw{"wr"}
	assign		___608_zi $tmp2303 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2306 4124 4126 4277 4279 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp2305 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp2306 ___608_xx $tmp2305 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2308 4128 4130 4275 4277 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp2307 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp2308 ___608_yy $tmp2307 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2310 4132 4134 4273 4275 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp2309 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp2310 ___608_zz $tmp2309 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp2311 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp2312 ___608_yy 	%argrw{"wr"}
	assign		$tmp2313 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp2311 $tmp2312 $tmp2313 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 4151 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2316 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp2317 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp2318 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp2315 $tmp2316 $tmp2317 $tmp2318 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp2315 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2320 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp2321 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp2322 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp2319 $tmp2320 $tmp2321 $tmp2322 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp2319 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp2314 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp2314 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp2323 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1884 $tmp2323 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 4224 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp2324 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp2324 4159 4159 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp2325 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp2325 4163 4163 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp2326 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp2326 4174 4174 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp2328 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp2327 $tmp2328 	%argrw{"wr"}
	compref		$tmp2330 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2329 $tmp2330 	%argrw{"wr"}
	add		$tmp2331 $tmp2327 $tmp2329 	%argrw{"wrr"}
	compref		$tmp2333 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2332 $tmp2333 	%argrw{"wr"}
	add		___614_d $tmp2331 $tmp2332 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp2334 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp2334 4185 4185 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp2336 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp2335 $tmp2336 	%argrw{"wr"}
	compref		$tmp2339 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2338 $tmp2339 	%argrw{"wr"}
	compref		$tmp2341 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2340 $tmp2341 	%argrw{"wr"}
	max		$tmp2337 $tmp2338 $tmp2340 	%argrw{"wrr"}
	max		___614_d $tmp2335 $tmp2337 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp2342 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp2342 4199 4199 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp2345 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp2344 $tmp2345 	%argrw{"wr"}
	sqrt		$tmp2343 $tmp2344 	%argrw{"wr"}
	compref		$tmp2348 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2347 $tmp2348 	%argrw{"wr"}
	sqrt		$tmp2346 $tmp2347 	%argrw{"wr"}
	add		$tmp2349 $tmp2343 $tmp2346 	%argrw{"wrr"}
	compref		$tmp2352 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2351 $tmp2352 	%argrw{"wr"}
	sqrt		$tmp2350 $tmp2351 	%argrw{"wr"}
	add		___614_d $tmp2349 $tmp2350 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp2353 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp2353 4207 4207 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp2356 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp2357 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp2355 $tmp2356 $tmp2357 	%argrw{"wrr"}
	sqrt		$tmp2354 $tmp2355 	%argrw{"wr"}
	sqrt		___614_d $tmp2354 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp2358 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp2358 4223 4223 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp2361 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp2360 $tmp2361 	%argrw{"wr"}
	pow		$tmp2359 $tmp2360 $const4 	%argrw{"wrr"}
	compref		$tmp2364 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2363 $tmp2364 	%argrw{"wr"}
	pow		$tmp2362 $tmp2363 $const4 	%argrw{"wrr"}
	add		$tmp2365 $tmp2359 $tmp2362 	%argrw{"wrr"}
	compref		$tmp2368 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2367 $tmp2368 	%argrw{"wr"}
	pow		$tmp2366 $tmp2367 $const4 	%argrw{"wrr"}
	add		$tmp2369 $tmp2365 $tmp2366 	%argrw{"wrr"}
	div		$tmp2370 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp2369 $tmp2370 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp2372 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp2373 ___608_yy 	%argrw{"wr"}
	assign		$tmp2374 ___608_zz 	%argrw{"wr"}
	point		$tmp2371 $tmp2372 $tmp2373 $tmp2374 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp2371 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp2375 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp2376 ___614_d $tmp2375 	%argrw{"wrr"}
	if		$tmp2376 4246 4273 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp2377 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp2377 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp2378 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp2378 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp2379 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp2379 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp2380 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp2380 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp2381 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp2381 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp2382 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp2382 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp2383 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp2384 ___614_d $tmp2383 	%argrw{"wrr"}
	if		$tmp2384 4259 4273 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp2385 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp2385 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp2386 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp2386 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp2387 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp2387 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp2388 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp2388 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp2389 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp2390 ___614_d $tmp2389 	%argrw{"wrr"}
	if		$tmp2390 4268 4273 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp2391 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp2391 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp2392 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp2392 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp2393 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp2394 ___614_d $tmp2393 	%argrw{"wrr"}
	if		$tmp2394 4273 4273 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2395 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2396 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2397 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp2398 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp2399 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp2298 $tmp2398 $tmp2399 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp2400 $const13 $tmp2298 	%line{147} %argrw{"wrr"}
	sub		___642_t $tmp2400 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	return	%line{184}
# intern/cycles/kernel/shaders/node_texture.h:185
# 	if (basis == "Voronoi Crackle")
	eq		$tmp2401 Basis $const43 	%line{185} %argrw{"wrr"}
	if		$tmp2401 4474 4474 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	functioncall	$const44 4473 	%line{186} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const45 4471 	%line{148} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const41 4465 	%line{139} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 4465 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 4462 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp2405 $tmp1884 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp2404 $tmp2405 	%argrw{"wr"}
	assign		___608_xi $tmp2404 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp2407 $tmp1884 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp2406 $tmp2407 	%argrw{"wr"}
	assign		___608_yi $tmp2406 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp2409 $tmp1884 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp2408 $tmp2409 	%argrw{"wr"}
	assign		___608_zi $tmp2408 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2411 4307 4309 4460 4462 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp2410 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp2411 ___608_xx $tmp2410 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2413 4311 4313 4458 4460 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp2412 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp2413 ___608_yy $tmp2412 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2415 4315 4317 4456 4458 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp2414 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp2415 ___608_zz $tmp2414 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp2416 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp2417 ___608_yy 	%argrw{"wr"}
	assign		$tmp2418 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp2416 $tmp2417 $tmp2418 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 4334 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2421 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp2422 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp2423 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp2420 $tmp2421 $tmp2422 $tmp2423 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp2420 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2425 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp2426 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp2427 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp2424 $tmp2425 $tmp2426 $tmp2427 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp2424 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp2419 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp2419 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp2428 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp1884 $tmp2428 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 4407 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp2429 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp2429 4342 4342 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp2430 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp2430 4346 4346 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp2431 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp2431 4357 4357 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp2433 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp2432 $tmp2433 	%argrw{"wr"}
	compref		$tmp2435 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2434 $tmp2435 	%argrw{"wr"}
	add		$tmp2436 $tmp2432 $tmp2434 	%argrw{"wrr"}
	compref		$tmp2438 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2437 $tmp2438 	%argrw{"wr"}
	add		___614_d $tmp2436 $tmp2437 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp2439 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp2439 4368 4368 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp2441 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp2440 $tmp2441 	%argrw{"wr"}
	compref		$tmp2444 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2443 $tmp2444 	%argrw{"wr"}
	compref		$tmp2446 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2445 $tmp2446 	%argrw{"wr"}
	max		$tmp2442 $tmp2443 $tmp2445 	%argrw{"wrr"}
	max		___614_d $tmp2440 $tmp2442 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp2447 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp2447 4382 4382 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp2450 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp2449 $tmp2450 	%argrw{"wr"}
	sqrt		$tmp2448 $tmp2449 	%argrw{"wr"}
	compref		$tmp2453 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2452 $tmp2453 	%argrw{"wr"}
	sqrt		$tmp2451 $tmp2452 	%argrw{"wr"}
	add		$tmp2454 $tmp2448 $tmp2451 	%argrw{"wrr"}
	compref		$tmp2457 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2456 $tmp2457 	%argrw{"wr"}
	sqrt		$tmp2455 $tmp2456 	%argrw{"wr"}
	add		___614_d $tmp2454 $tmp2455 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp2458 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp2458 4390 4390 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp2461 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp2462 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp2460 $tmp2461 $tmp2462 	%argrw{"wrr"}
	sqrt		$tmp2459 $tmp2460 	%argrw{"wr"}
	sqrt		___614_d $tmp2459 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp2463 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp2463 4406 4406 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp2466 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp2465 $tmp2466 	%argrw{"wr"}
	pow		$tmp2464 $tmp2465 $const4 	%argrw{"wrr"}
	compref		$tmp2469 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2468 $tmp2469 	%argrw{"wr"}
	pow		$tmp2467 $tmp2468 $const4 	%argrw{"wrr"}
	add		$tmp2470 $tmp2464 $tmp2467 	%argrw{"wrr"}
	compref		$tmp2473 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2472 $tmp2473 	%argrw{"wr"}
	pow		$tmp2471 $tmp2472 $const4 	%argrw{"wrr"}
	add		$tmp2474 $tmp2470 $tmp2471 	%argrw{"wrr"}
	div		$tmp2475 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp2474 $tmp2475 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp2477 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp2478 ___608_yy 	%argrw{"wr"}
	assign		$tmp2479 ___608_zz 	%argrw{"wr"}
	point		$tmp2476 $tmp2477 $tmp2478 $tmp2479 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp2476 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp2480 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp2481 ___614_d $tmp2480 	%argrw{"wrr"}
	if		$tmp2481 4429 4456 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp2482 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp2482 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp2483 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp2483 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp2484 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp2484 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp2485 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp2485 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp2486 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp2486 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp2487 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp2487 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp2488 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp2489 ___614_d $tmp2488 	%argrw{"wrr"}
	if		$tmp2489 4442 4456 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp2490 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp2490 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp2491 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp2491 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp2492 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp2492 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp2493 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp2493 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp2494 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp2495 ___614_d $tmp2494 	%argrw{"wrr"}
	if		$tmp2495 4451 4456 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp2496 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp2496 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp2497 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp2497 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp2498 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp2499 ___614_d $tmp2498 	%argrw{"wrr"}
	if		$tmp2499 4456 4456 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2500 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2501 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2502 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp2503 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp2504 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp2403 $tmp2503 $tmp2504 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___626_t $const46 $tmp2403 	%line{139} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:140
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp2505 ___626_t $const29 	%line{140} %argrw{"wrr"}
	if		$tmp2505 4469 4470 	%argrw{"r"}
	assign		$tmp2402 $const29 	%argrw{"wr"}
	assign		$tmp2402 ___626_t 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp2506 $const13 $tmp2402 	%line{148} %argrw{"wrr"}
	sub		___642_t $tmp2506 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	return	%line{186}
# intern/cycles/kernel/shaders/node_texture.h:187
# 	if (basis == "Cell Noise")
	eq		$tmp2507 Basis $const47 	%line{187} %argrw{"wrr"}
	if		$tmp2507 4478 4478 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:188
# 		return cellnoise(p);
	cellnoise	___642_t $tmp1884 	%line{188} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:190
# 	return 0.0;
	assign		___642_t $const4 	%line{190} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:241
# 		if (hard)
	if		___646_hard 4483 4483 	%line{241} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:242
# 			t = fabs(2.0 * t - 1.0);
	mul		$tmp2508 $const13 ___642_t 	%line{242} %argrw{"wrr"}
	sub		$tmp2509 $tmp2508 $const29 	%argrw{"wrr"}
	fabs		___642_t $tmp2509 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:244
# 		sum += t * amp;
	mul		$tmp2510 ___642_t ___640_amp 	%line{244} %argrw{"wrr"}
	add		___640_sum ___640_sum $tmp2510 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:245
# 		amp *= 0.5;
	mul		___640_amp ___640_amp $const10 	%line{245} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:246
# 		fscale *= 2.0;
	mul		___640_fscale ___640_fscale $const13 	%line{246} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:238
# 	for (i = 0; i <= n; i++) {
	assign		$tmp2511 ___640_i 	%line{238} %argrw{"wr"}
	add		___640_i ___640_i $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:249
# 	float rmd = octaves - floor(octaves);
	floor		$tmp2512 ___640_octaves 	%line{249} %argrw{"wr"}
	sub		___640_rmd ___640_octaves $tmp2512 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:251
# 	if (rmd != 0.0) {
	neq		$tmp2513 ___640_rmd $const4 	%line{251} %argrw{"wrr"}
	if		$tmp2513 5634 5644 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:252
# 		float t = noise_basis(fscale * p, basis);
	mul		$tmp2514 ___640_fscale $tmp1 	%line{252} %argrw{"wrr"}
	functioncall	$const6 5606 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:173
# 	if (basis == "Perlin")
	eq		$tmp2515 Basis $const1 	%line{173} %argrw{"wrr"}
	if		$tmp2515 4510 4510 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 		return safe_noise(p, 1);
	functioncall	$const8 4509 	%line{174} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:154
# 	float f = 0.0;
	assign		___633_f $const4 	%line{154} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:157
# 	if (type == 0)
	eq		$tmp2516 $const7 $const3 	%line{157} %argrw{"wrr"}
	if		$tmp2516 4502 4503 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:158
# 		f = noise("perlin", p);
	noise		___633_f $const9 $tmp2514 	%line{158} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:162
# 		f = noise(p);
	noise		___633_f $tmp2514 	%line{162} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:165
# 	if (!isfinite(f))
	isfinite	$tmp2517 ___633_f 	%line{165} %argrw{"wr"}
	eq		$tmp2518 $tmp2517 $const3 	%argrw{"wrr"}
	if		$tmp2518 4508 4508 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:166
# 		return 0.5;
	assign		___643_t $const10 	%line{166} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:168
# 	return f;
	assign		___643_t ___633_f 	%line{168} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 		return safe_noise(p, 1);
	return	%line{174}
# intern/cycles/kernel/shaders/node_texture.h:175
# 	if (basis == "Voronoi F1")
	eq		$tmp2519 Basis $const11 	%line{175} %argrw{"wrr"}
	if		$tmp2519 4690 4690 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	functioncall	$const12 4689 	%line{176} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 4687 	%line{143} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:130
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 4687 	%line{130} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 4686 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp2522 $tmp2514 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp2521 $tmp2522 	%argrw{"wr"}
	assign		___608_xi $tmp2521 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp2524 $tmp2514 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp2523 $tmp2524 	%argrw{"wr"}
	assign		___608_yi $tmp2523 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp2526 $tmp2514 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp2525 $tmp2526 	%argrw{"wr"}
	assign		___608_zi $tmp2525 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2528 4531 4533 4684 4686 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp2527 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp2528 ___608_xx $tmp2527 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2530 4535 4537 4682 4684 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp2529 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp2530 ___608_yy $tmp2529 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2532 4539 4541 4680 4682 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp2531 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp2532 ___608_zz $tmp2531 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp2533 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp2534 ___608_yy 	%argrw{"wr"}
	assign		$tmp2535 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp2533 $tmp2534 $tmp2535 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 4558 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2538 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp2539 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp2540 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp2537 $tmp2538 $tmp2539 $tmp2540 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp2537 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2542 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp2543 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp2544 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp2541 $tmp2542 $tmp2543 $tmp2544 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp2541 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp2536 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp2536 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp2545 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp2514 $tmp2545 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 4631 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp2546 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp2546 4566 4566 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp2547 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp2547 4570 4570 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp2548 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp2548 4581 4581 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp2550 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp2549 $tmp2550 	%argrw{"wr"}
	compref		$tmp2552 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2551 $tmp2552 	%argrw{"wr"}
	add		$tmp2553 $tmp2549 $tmp2551 	%argrw{"wrr"}
	compref		$tmp2555 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2554 $tmp2555 	%argrw{"wr"}
	add		___614_d $tmp2553 $tmp2554 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp2556 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp2556 4592 4592 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp2558 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp2557 $tmp2558 	%argrw{"wr"}
	compref		$tmp2561 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2560 $tmp2561 	%argrw{"wr"}
	compref		$tmp2563 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2562 $tmp2563 	%argrw{"wr"}
	max		$tmp2559 $tmp2560 $tmp2562 	%argrw{"wrr"}
	max		___614_d $tmp2557 $tmp2559 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp2564 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp2564 4606 4606 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp2567 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp2566 $tmp2567 	%argrw{"wr"}
	sqrt		$tmp2565 $tmp2566 	%argrw{"wr"}
	compref		$tmp2570 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2569 $tmp2570 	%argrw{"wr"}
	sqrt		$tmp2568 $tmp2569 	%argrw{"wr"}
	add		$tmp2571 $tmp2565 $tmp2568 	%argrw{"wrr"}
	compref		$tmp2574 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2573 $tmp2574 	%argrw{"wr"}
	sqrt		$tmp2572 $tmp2573 	%argrw{"wr"}
	add		___614_d $tmp2571 $tmp2572 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp2575 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp2575 4614 4614 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp2578 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp2579 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp2577 $tmp2578 $tmp2579 	%argrw{"wrr"}
	sqrt		$tmp2576 $tmp2577 	%argrw{"wr"}
	sqrt		___614_d $tmp2576 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp2580 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp2580 4630 4630 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp2583 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp2582 $tmp2583 	%argrw{"wr"}
	pow		$tmp2581 $tmp2582 $const4 	%argrw{"wrr"}
	compref		$tmp2586 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2585 $tmp2586 	%argrw{"wr"}
	pow		$tmp2584 $tmp2585 $const4 	%argrw{"wrr"}
	add		$tmp2587 $tmp2581 $tmp2584 	%argrw{"wrr"}
	compref		$tmp2590 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2589 $tmp2590 	%argrw{"wr"}
	pow		$tmp2588 $tmp2589 $const4 	%argrw{"wrr"}
	add		$tmp2591 $tmp2587 $tmp2588 	%argrw{"wrr"}
	div		$tmp2592 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp2591 $tmp2592 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp2594 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp2595 ___608_yy 	%argrw{"wr"}
	assign		$tmp2596 ___608_zz 	%argrw{"wr"}
	point		$tmp2593 $tmp2594 $tmp2595 $tmp2596 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp2593 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp2597 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp2598 ___614_d $tmp2597 	%argrw{"wrr"}
	if		$tmp2598 4653 4680 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp2599 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2599 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp2600 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp2600 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp2601 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp2601 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp2602 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2602 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp2603 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp2603 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp2604 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp2604 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp2605 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp2606 ___614_d $tmp2605 	%argrw{"wrr"}
	if		$tmp2606 4666 4680 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp2607 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2607 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp2608 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp2608 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp2609 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2609 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp2610 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp2610 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp2611 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp2612 ___614_d $tmp2611 	%argrw{"wrr"}
	if		$tmp2612 4675 4680 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp2613 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2613 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp2614 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2614 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp2615 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp2616 ___614_d $tmp2615 	%argrw{"wrr"}
	if		$tmp2616 4680 4680 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2617 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2618 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2619 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp2520 ___619_da $const3 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp2620 $const13 $tmp2520 	%line{143} %argrw{"wrr"}
	sub		___643_t $tmp2620 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	return	%line{176}
# intern/cycles/kernel/shaders/node_texture.h:177
# 	if (basis == "Voronoi F2")
	eq		$tmp2621 Basis $const30 	%line{177} %argrw{"wrr"}
	if		$tmp2621 4870 4870 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	functioncall	$const31 4869 	%line{178} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const32 4867 	%line{144} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:131
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 4867 	%line{131} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 4866 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp2624 $tmp2514 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp2623 $tmp2624 	%argrw{"wr"}
	assign		___608_xi $tmp2623 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp2626 $tmp2514 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp2625 $tmp2626 	%argrw{"wr"}
	assign		___608_yi $tmp2625 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp2628 $tmp2514 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp2627 $tmp2628 	%argrw{"wr"}
	assign		___608_zi $tmp2627 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2630 4711 4713 4864 4866 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp2629 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp2630 ___608_xx $tmp2629 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2632 4715 4717 4862 4864 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp2631 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp2632 ___608_yy $tmp2631 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2634 4719 4721 4860 4862 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp2633 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp2634 ___608_zz $tmp2633 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp2635 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp2636 ___608_yy 	%argrw{"wr"}
	assign		$tmp2637 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp2635 $tmp2636 $tmp2637 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 4738 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2640 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp2641 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp2642 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp2639 $tmp2640 $tmp2641 $tmp2642 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp2639 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2644 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp2645 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp2646 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp2643 $tmp2644 $tmp2645 $tmp2646 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp2643 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp2638 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp2638 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp2647 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp2514 $tmp2647 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 4811 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp2648 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp2648 4746 4746 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp2649 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp2649 4750 4750 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp2650 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp2650 4761 4761 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp2652 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp2651 $tmp2652 	%argrw{"wr"}
	compref		$tmp2654 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2653 $tmp2654 	%argrw{"wr"}
	add		$tmp2655 $tmp2651 $tmp2653 	%argrw{"wrr"}
	compref		$tmp2657 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2656 $tmp2657 	%argrw{"wr"}
	add		___614_d $tmp2655 $tmp2656 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp2658 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp2658 4772 4772 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp2660 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp2659 $tmp2660 	%argrw{"wr"}
	compref		$tmp2663 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2662 $tmp2663 	%argrw{"wr"}
	compref		$tmp2665 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2664 $tmp2665 	%argrw{"wr"}
	max		$tmp2661 $tmp2662 $tmp2664 	%argrw{"wrr"}
	max		___614_d $tmp2659 $tmp2661 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp2666 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp2666 4786 4786 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp2669 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp2668 $tmp2669 	%argrw{"wr"}
	sqrt		$tmp2667 $tmp2668 	%argrw{"wr"}
	compref		$tmp2672 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2671 $tmp2672 	%argrw{"wr"}
	sqrt		$tmp2670 $tmp2671 	%argrw{"wr"}
	add		$tmp2673 $tmp2667 $tmp2670 	%argrw{"wrr"}
	compref		$tmp2676 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2675 $tmp2676 	%argrw{"wr"}
	sqrt		$tmp2674 $tmp2675 	%argrw{"wr"}
	add		___614_d $tmp2673 $tmp2674 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp2677 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp2677 4794 4794 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp2680 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp2681 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp2679 $tmp2680 $tmp2681 	%argrw{"wrr"}
	sqrt		$tmp2678 $tmp2679 	%argrw{"wr"}
	sqrt		___614_d $tmp2678 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp2682 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp2682 4810 4810 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp2685 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp2684 $tmp2685 	%argrw{"wr"}
	pow		$tmp2683 $tmp2684 $const4 	%argrw{"wrr"}
	compref		$tmp2688 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2687 $tmp2688 	%argrw{"wr"}
	pow		$tmp2686 $tmp2687 $const4 	%argrw{"wrr"}
	add		$tmp2689 $tmp2683 $tmp2686 	%argrw{"wrr"}
	compref		$tmp2692 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2691 $tmp2692 	%argrw{"wr"}
	pow		$tmp2690 $tmp2691 $const4 	%argrw{"wrr"}
	add		$tmp2693 $tmp2689 $tmp2690 	%argrw{"wrr"}
	div		$tmp2694 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp2693 $tmp2694 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp2696 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp2697 ___608_yy 	%argrw{"wr"}
	assign		$tmp2698 ___608_zz 	%argrw{"wr"}
	point		$tmp2695 $tmp2696 $tmp2697 $tmp2698 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp2695 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp2699 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp2700 ___614_d $tmp2699 	%argrw{"wrr"}
	if		$tmp2700 4833 4860 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp2701 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2701 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp2702 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp2702 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp2703 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp2703 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp2704 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2704 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp2705 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp2705 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp2706 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp2706 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp2707 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp2708 ___614_d $tmp2707 	%argrw{"wrr"}
	if		$tmp2708 4846 4860 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp2709 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2709 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp2710 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp2710 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp2711 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2711 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp2712 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp2712 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp2713 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp2714 ___614_d $tmp2713 	%argrw{"wrr"}
	if		$tmp2714 4855 4860 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp2715 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2715 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp2716 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2716 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp2717 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp2718 ___614_d $tmp2717 	%argrw{"wrr"}
	if		$tmp2718 4860 4860 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2719 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2720 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2721 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp2622 ___619_da $const7 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp2722 $const13 $tmp2622 	%line{144} %argrw{"wrr"}
	sub		___643_t $tmp2722 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	return	%line{178}
# intern/cycles/kernel/shaders/node_texture.h:179
# 	if (basis == "Voronoi F3")
	eq		$tmp2723 Basis $const33 	%line{179} %argrw{"wrr"}
	if		$tmp2723 5050 5050 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	functioncall	$const34 5049 	%line{180} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const35 5047 	%line{145} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:132
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 5047 	%line{132} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 5046 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp2726 $tmp2514 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp2725 $tmp2726 	%argrw{"wr"}
	assign		___608_xi $tmp2725 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp2728 $tmp2514 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp2727 $tmp2728 	%argrw{"wr"}
	assign		___608_yi $tmp2727 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp2730 $tmp2514 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp2729 $tmp2730 	%argrw{"wr"}
	assign		___608_zi $tmp2729 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2732 4891 4893 5044 5046 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp2731 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp2732 ___608_xx $tmp2731 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2734 4895 4897 5042 5044 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp2733 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp2734 ___608_yy $tmp2733 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2736 4899 4901 5040 5042 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp2735 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp2736 ___608_zz $tmp2735 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp2737 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp2738 ___608_yy 	%argrw{"wr"}
	assign		$tmp2739 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp2737 $tmp2738 $tmp2739 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 4918 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2742 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp2743 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp2744 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp2741 $tmp2742 $tmp2743 $tmp2744 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp2741 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2746 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp2747 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp2748 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp2745 $tmp2746 $tmp2747 $tmp2748 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp2745 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp2740 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp2740 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp2749 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp2514 $tmp2749 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 4991 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp2750 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp2750 4926 4926 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp2751 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp2751 4930 4930 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp2752 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp2752 4941 4941 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp2754 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp2753 $tmp2754 	%argrw{"wr"}
	compref		$tmp2756 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2755 $tmp2756 	%argrw{"wr"}
	add		$tmp2757 $tmp2753 $tmp2755 	%argrw{"wrr"}
	compref		$tmp2759 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2758 $tmp2759 	%argrw{"wr"}
	add		___614_d $tmp2757 $tmp2758 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp2760 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp2760 4952 4952 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp2762 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp2761 $tmp2762 	%argrw{"wr"}
	compref		$tmp2765 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2764 $tmp2765 	%argrw{"wr"}
	compref		$tmp2767 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2766 $tmp2767 	%argrw{"wr"}
	max		$tmp2763 $tmp2764 $tmp2766 	%argrw{"wrr"}
	max		___614_d $tmp2761 $tmp2763 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp2768 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp2768 4966 4966 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp2771 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp2770 $tmp2771 	%argrw{"wr"}
	sqrt		$tmp2769 $tmp2770 	%argrw{"wr"}
	compref		$tmp2774 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2773 $tmp2774 	%argrw{"wr"}
	sqrt		$tmp2772 $tmp2773 	%argrw{"wr"}
	add		$tmp2775 $tmp2769 $tmp2772 	%argrw{"wrr"}
	compref		$tmp2778 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2777 $tmp2778 	%argrw{"wr"}
	sqrt		$tmp2776 $tmp2777 	%argrw{"wr"}
	add		___614_d $tmp2775 $tmp2776 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp2779 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp2779 4974 4974 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp2782 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp2783 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp2781 $tmp2782 $tmp2783 	%argrw{"wrr"}
	sqrt		$tmp2780 $tmp2781 	%argrw{"wr"}
	sqrt		___614_d $tmp2780 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp2784 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp2784 4990 4990 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp2787 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp2786 $tmp2787 	%argrw{"wr"}
	pow		$tmp2785 $tmp2786 $const4 	%argrw{"wrr"}
	compref		$tmp2790 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2789 $tmp2790 	%argrw{"wr"}
	pow		$tmp2788 $tmp2789 $const4 	%argrw{"wrr"}
	add		$tmp2791 $tmp2785 $tmp2788 	%argrw{"wrr"}
	compref		$tmp2794 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2793 $tmp2794 	%argrw{"wr"}
	pow		$tmp2792 $tmp2793 $const4 	%argrw{"wrr"}
	add		$tmp2795 $tmp2791 $tmp2792 	%argrw{"wrr"}
	div		$tmp2796 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp2795 $tmp2796 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp2798 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp2799 ___608_yy 	%argrw{"wr"}
	assign		$tmp2800 ___608_zz 	%argrw{"wr"}
	point		$tmp2797 $tmp2798 $tmp2799 $tmp2800 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp2797 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp2801 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp2802 ___614_d $tmp2801 	%argrw{"wrr"}
	if		$tmp2802 5013 5040 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp2803 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2803 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp2804 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp2804 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp2805 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp2805 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp2806 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2806 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp2807 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp2807 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp2808 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp2808 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp2809 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp2810 ___614_d $tmp2809 	%argrw{"wrr"}
	if		$tmp2810 5026 5040 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp2811 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2811 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp2812 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp2812 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp2813 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2813 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp2814 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp2814 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp2815 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp2816 ___614_d $tmp2815 	%argrw{"wrr"}
	if		$tmp2816 5035 5040 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp2817 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2817 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp2818 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2818 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp2819 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp2820 ___614_d $tmp2819 	%argrw{"wrr"}
	if		$tmp2820 5040 5040 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2821 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2822 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2823 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp2724 ___619_da $const18 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp2824 $const13 $tmp2724 	%line{145} %argrw{"wrr"}
	sub		___643_t $tmp2824 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	return	%line{180}
# intern/cycles/kernel/shaders/node_texture.h:181
# 	if (basis == "Voronoi F4")
	eq		$tmp2825 Basis $const36 	%line{181} %argrw{"wrr"}
	if		$tmp2825 5230 5230 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	functioncall	$const37 5229 	%line{182} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const38 5227 	%line{146} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:133
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 5227 	%line{133} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 5226 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp2828 $tmp2514 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp2827 $tmp2828 	%argrw{"wr"}
	assign		___608_xi $tmp2827 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp2830 $tmp2514 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp2829 $tmp2830 	%argrw{"wr"}
	assign		___608_yi $tmp2829 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp2832 $tmp2514 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp2831 $tmp2832 	%argrw{"wr"}
	assign		___608_zi $tmp2831 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2834 5071 5073 5224 5226 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp2833 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp2834 ___608_xx $tmp2833 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2836 5075 5077 5222 5224 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp2835 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp2836 ___608_yy $tmp2835 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2838 5079 5081 5220 5222 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp2837 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp2838 ___608_zz $tmp2837 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp2839 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp2840 ___608_yy 	%argrw{"wr"}
	assign		$tmp2841 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp2839 $tmp2840 $tmp2841 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 5098 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2844 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp2845 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp2846 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp2843 $tmp2844 $tmp2845 $tmp2846 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp2843 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2848 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp2849 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp2850 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp2847 $tmp2848 $tmp2849 $tmp2850 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp2847 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp2842 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp2842 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp2851 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp2514 $tmp2851 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 5171 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp2852 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp2852 5106 5106 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp2853 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp2853 5110 5110 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp2854 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp2854 5121 5121 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp2856 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp2855 $tmp2856 	%argrw{"wr"}
	compref		$tmp2858 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2857 $tmp2858 	%argrw{"wr"}
	add		$tmp2859 $tmp2855 $tmp2857 	%argrw{"wrr"}
	compref		$tmp2861 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2860 $tmp2861 	%argrw{"wr"}
	add		___614_d $tmp2859 $tmp2860 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp2862 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp2862 5132 5132 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp2864 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp2863 $tmp2864 	%argrw{"wr"}
	compref		$tmp2867 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2866 $tmp2867 	%argrw{"wr"}
	compref		$tmp2869 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2868 $tmp2869 	%argrw{"wr"}
	max		$tmp2865 $tmp2866 $tmp2868 	%argrw{"wrr"}
	max		___614_d $tmp2863 $tmp2865 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp2870 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp2870 5146 5146 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp2873 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp2872 $tmp2873 	%argrw{"wr"}
	sqrt		$tmp2871 $tmp2872 	%argrw{"wr"}
	compref		$tmp2876 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2875 $tmp2876 	%argrw{"wr"}
	sqrt		$tmp2874 $tmp2875 	%argrw{"wr"}
	add		$tmp2877 $tmp2871 $tmp2874 	%argrw{"wrr"}
	compref		$tmp2880 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2879 $tmp2880 	%argrw{"wr"}
	sqrt		$tmp2878 $tmp2879 	%argrw{"wr"}
	add		___614_d $tmp2877 $tmp2878 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp2881 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp2881 5154 5154 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp2884 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp2885 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp2883 $tmp2884 $tmp2885 	%argrw{"wrr"}
	sqrt		$tmp2882 $tmp2883 	%argrw{"wr"}
	sqrt		___614_d $tmp2882 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp2886 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp2886 5170 5170 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp2889 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp2888 $tmp2889 	%argrw{"wr"}
	pow		$tmp2887 $tmp2888 $const4 	%argrw{"wrr"}
	compref		$tmp2892 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2891 $tmp2892 	%argrw{"wr"}
	pow		$tmp2890 $tmp2891 $const4 	%argrw{"wrr"}
	add		$tmp2893 $tmp2887 $tmp2890 	%argrw{"wrr"}
	compref		$tmp2896 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2895 $tmp2896 	%argrw{"wr"}
	pow		$tmp2894 $tmp2895 $const4 	%argrw{"wrr"}
	add		$tmp2897 $tmp2893 $tmp2894 	%argrw{"wrr"}
	div		$tmp2898 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp2897 $tmp2898 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp2900 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp2901 ___608_yy 	%argrw{"wr"}
	assign		$tmp2902 ___608_zz 	%argrw{"wr"}
	point		$tmp2899 $tmp2900 $tmp2901 $tmp2902 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp2899 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp2903 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp2904 ___614_d $tmp2903 	%argrw{"wrr"}
	if		$tmp2904 5193 5220 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp2905 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2905 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp2906 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp2906 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp2907 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp2907 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp2908 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2908 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp2909 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp2909 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp2910 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp2910 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp2911 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp2912 ___614_d $tmp2911 	%argrw{"wrr"}
	if		$tmp2912 5206 5220 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp2913 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2913 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp2914 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp2914 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp2915 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2915 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp2916 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp2916 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp2917 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp2918 ___614_d $tmp2917 	%argrw{"wrr"}
	if		$tmp2918 5215 5220 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp2919 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp2919 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp2920 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp2920 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp2921 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp2922 ___614_d $tmp2921 	%argrw{"wrr"}
	if		$tmp2922 5220 5220 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2923 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2924 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2925 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp2826 ___619_da $const20 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp2926 $const13 $tmp2826 	%line{146} %argrw{"wrr"}
	sub		___643_t $tmp2926 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	return	%line{182}
# intern/cycles/kernel/shaders/node_texture.h:183
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp2927 Basis $const39 	%line{183} %argrw{"wrr"}
	if		$tmp2927 5412 5412 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	functioncall	$const40 5411 	%line{184} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const41 5409 	%line{147} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 5409 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 5406 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp2930 $tmp2514 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp2929 $tmp2930 	%argrw{"wr"}
	assign		___608_xi $tmp2929 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp2932 $tmp2514 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp2931 $tmp2932 	%argrw{"wr"}
	assign		___608_yi $tmp2931 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp2934 $tmp2514 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp2933 $tmp2934 	%argrw{"wr"}
	assign		___608_zi $tmp2933 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2936 5251 5253 5404 5406 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp2935 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp2936 ___608_xx $tmp2935 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2938 5255 5257 5402 5404 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp2937 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp2938 ___608_yy $tmp2937 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2940 5259 5261 5400 5402 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp2939 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp2940 ___608_zz $tmp2939 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp2941 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp2942 ___608_yy 	%argrw{"wr"}
	assign		$tmp2943 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp2941 $tmp2942 $tmp2943 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 5278 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2946 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp2947 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp2948 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp2945 $tmp2946 $tmp2947 $tmp2948 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp2945 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2950 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp2951 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp2952 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp2949 $tmp2950 $tmp2951 $tmp2952 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp2949 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp2944 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp2944 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp2953 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp2514 $tmp2953 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 5351 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp2954 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp2954 5286 5286 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp2955 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp2955 5290 5290 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp2956 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp2956 5301 5301 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp2958 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp2957 $tmp2958 	%argrw{"wr"}
	compref		$tmp2960 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2959 $tmp2960 	%argrw{"wr"}
	add		$tmp2961 $tmp2957 $tmp2959 	%argrw{"wrr"}
	compref		$tmp2963 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2962 $tmp2963 	%argrw{"wr"}
	add		___614_d $tmp2961 $tmp2962 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp2964 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp2964 5312 5312 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp2966 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp2965 $tmp2966 	%argrw{"wr"}
	compref		$tmp2969 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2968 $tmp2969 	%argrw{"wr"}
	compref		$tmp2971 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2970 $tmp2971 	%argrw{"wr"}
	max		$tmp2967 $tmp2968 $tmp2970 	%argrw{"wrr"}
	max		___614_d $tmp2965 $tmp2967 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp2972 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp2972 5326 5326 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp2975 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp2974 $tmp2975 	%argrw{"wr"}
	sqrt		$tmp2973 $tmp2974 	%argrw{"wr"}
	compref		$tmp2978 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2977 $tmp2978 	%argrw{"wr"}
	sqrt		$tmp2976 $tmp2977 	%argrw{"wr"}
	add		$tmp2979 $tmp2973 $tmp2976 	%argrw{"wrr"}
	compref		$tmp2982 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2981 $tmp2982 	%argrw{"wr"}
	sqrt		$tmp2980 $tmp2981 	%argrw{"wr"}
	add		___614_d $tmp2979 $tmp2980 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp2983 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp2983 5334 5334 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp2986 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp2987 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp2985 $tmp2986 $tmp2987 	%argrw{"wrr"}
	sqrt		$tmp2984 $tmp2985 	%argrw{"wr"}
	sqrt		___614_d $tmp2984 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp2988 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp2988 5350 5350 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp2991 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp2990 $tmp2991 	%argrw{"wr"}
	pow		$tmp2989 $tmp2990 $const4 	%argrw{"wrr"}
	compref		$tmp2994 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp2993 $tmp2994 	%argrw{"wr"}
	pow		$tmp2992 $tmp2993 $const4 	%argrw{"wrr"}
	add		$tmp2995 $tmp2989 $tmp2992 	%argrw{"wrr"}
	compref		$tmp2998 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp2997 $tmp2998 	%argrw{"wr"}
	pow		$tmp2996 $tmp2997 $const4 	%argrw{"wrr"}
	add		$tmp2999 $tmp2995 $tmp2996 	%argrw{"wrr"}
	div		$tmp3000 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp2999 $tmp3000 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp3002 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp3003 ___608_yy 	%argrw{"wr"}
	assign		$tmp3004 ___608_zz 	%argrw{"wr"}
	point		$tmp3001 $tmp3002 $tmp3003 $tmp3004 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp3001 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp3005 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp3006 ___614_d $tmp3005 	%argrw{"wrr"}
	if		$tmp3006 5373 5400 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp3007 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp3007 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp3008 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp3008 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp3009 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp3009 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp3010 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp3010 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp3011 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp3011 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp3012 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp3012 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp3013 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp3014 ___614_d $tmp3013 	%argrw{"wrr"}
	if		$tmp3014 5386 5400 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp3015 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp3015 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp3016 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp3016 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp3017 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp3017 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp3018 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp3018 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp3019 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp3020 ___614_d $tmp3019 	%argrw{"wrr"}
	if		$tmp3020 5395 5400 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp3021 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp3021 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp3022 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp3022 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp3023 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp3024 ___614_d $tmp3023 	%argrw{"wrr"}
	if		$tmp3024 5400 5400 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp3025 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp3026 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp3027 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp3028 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp3029 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp2928 $tmp3028 $tmp3029 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp3030 $const13 $tmp2928 	%line{147} %argrw{"wrr"}
	sub		___643_t $tmp3030 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	return	%line{184}
# intern/cycles/kernel/shaders/node_texture.h:185
# 	if (basis == "Voronoi Crackle")
	eq		$tmp3031 Basis $const43 	%line{185} %argrw{"wrr"}
	if		$tmp3031 5601 5601 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	functioncall	$const44 5600 	%line{186} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const45 5598 	%line{148} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const41 5592 	%line{139} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 5592 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 5589 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp3035 $tmp2514 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp3034 $tmp3035 	%argrw{"wr"}
	assign		___608_xi $tmp3034 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp3037 $tmp2514 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp3036 $tmp3037 	%argrw{"wr"}
	assign		___608_yi $tmp3036 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp3039 $tmp2514 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp3038 $tmp3039 	%argrw{"wr"}
	assign		___608_zi $tmp3038 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp3041 5434 5436 5587 5589 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp3040 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp3041 ___608_xx $tmp3040 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp3043 5438 5440 5585 5587 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp3042 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp3043 ___608_yy $tmp3042 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp3045 5442 5444 5583 5585 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp3044 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp3045 ___608_zz $tmp3044 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp3046 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp3047 ___608_yy 	%argrw{"wr"}
	assign		$tmp3048 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp3046 $tmp3047 $tmp3048 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 5461 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp3051 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp3052 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp3053 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp3050 $tmp3051 $tmp3052 $tmp3053 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp3050 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp3055 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp3056 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp3057 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp3054 $tmp3055 $tmp3056 $tmp3057 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp3054 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp3049 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp3049 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp3058 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp2514 $tmp3058 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 5534 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp3059 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp3059 5469 5469 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp3060 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp3060 5473 5473 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp3061 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp3061 5484 5484 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp3063 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp3062 $tmp3063 	%argrw{"wr"}
	compref		$tmp3065 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3064 $tmp3065 	%argrw{"wr"}
	add		$tmp3066 $tmp3062 $tmp3064 	%argrw{"wrr"}
	compref		$tmp3068 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3067 $tmp3068 	%argrw{"wr"}
	add		___614_d $tmp3066 $tmp3067 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp3069 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp3069 5495 5495 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp3071 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp3070 $tmp3071 	%argrw{"wr"}
	compref		$tmp3074 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3073 $tmp3074 	%argrw{"wr"}
	compref		$tmp3076 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3075 $tmp3076 	%argrw{"wr"}
	max		$tmp3072 $tmp3073 $tmp3075 	%argrw{"wrr"}
	max		___614_d $tmp3070 $tmp3072 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp3077 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp3077 5509 5509 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp3080 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp3079 $tmp3080 	%argrw{"wr"}
	sqrt		$tmp3078 $tmp3079 	%argrw{"wr"}
	compref		$tmp3083 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3082 $tmp3083 	%argrw{"wr"}
	sqrt		$tmp3081 $tmp3082 	%argrw{"wr"}
	add		$tmp3084 $tmp3078 $tmp3081 	%argrw{"wrr"}
	compref		$tmp3087 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3086 $tmp3087 	%argrw{"wr"}
	sqrt		$tmp3085 $tmp3086 	%argrw{"wr"}
	add		___614_d $tmp3084 $tmp3085 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp3088 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp3088 5517 5517 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp3091 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp3092 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp3090 $tmp3091 $tmp3092 	%argrw{"wrr"}
	sqrt		$tmp3089 $tmp3090 	%argrw{"wr"}
	sqrt		___614_d $tmp3089 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp3093 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp3093 5533 5533 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp3096 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp3095 $tmp3096 	%argrw{"wr"}
	pow		$tmp3094 $tmp3095 $const4 	%argrw{"wrr"}
	compref		$tmp3099 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3098 $tmp3099 	%argrw{"wr"}
	pow		$tmp3097 $tmp3098 $const4 	%argrw{"wrr"}
	add		$tmp3100 $tmp3094 $tmp3097 	%argrw{"wrr"}
	compref		$tmp3103 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3102 $tmp3103 	%argrw{"wr"}
	pow		$tmp3101 $tmp3102 $const4 	%argrw{"wrr"}
	add		$tmp3104 $tmp3100 $tmp3101 	%argrw{"wrr"}
	div		$tmp3105 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp3104 $tmp3105 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp3107 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp3108 ___608_yy 	%argrw{"wr"}
	assign		$tmp3109 ___608_zz 	%argrw{"wr"}
	point		$tmp3106 $tmp3107 $tmp3108 $tmp3109 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp3106 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp3110 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp3111 ___614_d $tmp3110 	%argrw{"wrr"}
	if		$tmp3111 5556 5583 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp3112 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp3112 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp3113 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp3113 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp3114 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp3114 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp3115 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp3115 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp3116 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp3116 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp3117 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp3117 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp3118 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp3119 ___614_d $tmp3118 	%argrw{"wrr"}
	if		$tmp3119 5569 5583 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp3120 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp3120 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp3121 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp3121 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp3122 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp3122 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp3123 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp3123 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp3124 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp3125 ___614_d $tmp3124 	%argrw{"wrr"}
	if		$tmp3125 5578 5583 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp3126 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp3126 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp3127 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp3127 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp3128 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp3129 ___614_d $tmp3128 	%argrw{"wrr"}
	if		$tmp3129 5583 5583 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp3130 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp3131 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp3132 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp3133 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp3134 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp3033 $tmp3133 $tmp3134 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___626_t $const46 $tmp3033 	%line{139} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:140
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp3135 ___626_t $const29 	%line{140} %argrw{"wrr"}
	if		$tmp3135 5596 5597 	%argrw{"r"}
	assign		$tmp3032 $const29 	%argrw{"wr"}
	assign		$tmp3032 ___626_t 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp3136 $const13 $tmp3032 	%line{148} %argrw{"wrr"}
	sub		___643_t $tmp3136 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	return	%line{186}
# intern/cycles/kernel/shaders/node_texture.h:187
# 	if (basis == "Cell Noise")
	eq		$tmp3137 Basis $const47 	%line{187} %argrw{"wrr"}
	if		$tmp3137 5605 5605 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:188
# 		return cellnoise(p);
	cellnoise	___643_t $tmp2514 	%line{188} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:190
# 	return 0.0;
	assign		___643_t $const4 	%line{190} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:254
# 		if (hard)
	if		___646_hard 5610 5610 	%line{254} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:255
# 			t = fabs(2.0 * t - 1.0);
	mul		$tmp3138 $const13 ___643_t 	%line{255} %argrw{"wrr"}
	sub		$tmp3139 $tmp3138 $const29 	%argrw{"wrr"}
	fabs		___643_t $tmp3139 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:257
# 		float sum2 = sum + t * amp;
	mul		$tmp3140 ___643_t ___640_amp 	%line{257} %argrw{"wrr"}
	add		___643_sum2 ___640_sum $tmp3140 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:259
# 		sum *= ((float)(1 << n) / (float)((1 << (n + 1)) - 1));
	shl		$tmp3141 $const7 ___640_n 	%line{259} %argrw{"wrr"}
	assign		$tmp3142 $tmp3141 	%argrw{"wr"}
	add		$tmp3143 ___640_n $const7 	%argrw{"wrr"}
	shl		$tmp3144 $const7 $tmp3143 	%argrw{"wrr"}
	sub		$tmp3145 $tmp3144 $const7 	%argrw{"wrr"}
	assign		$tmp3146 $tmp3145 	%argrw{"wr"}
	div		$tmp3147 $tmp3142 $tmp3146 	%argrw{"wrr"}
	mul		___640_sum ___640_sum $tmp3147 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:260
# 		sum2 *= ((float)(1 << (n + 1)) / (float)((1 << (n + 2)) - 1));
	add		$tmp3148 ___640_n $const7 	%line{260} %argrw{"wrr"}
	shl		$tmp3149 $const7 $tmp3148 	%argrw{"wrr"}
	assign		$tmp3150 $tmp3149 	%argrw{"wr"}
	add		$tmp3151 ___640_n $const18 	%argrw{"wrr"}
	shl		$tmp3152 $const7 $tmp3151 	%argrw{"wrr"}
	sub		$tmp3153 $tmp3152 $const7 	%argrw{"wrr"}
	assign		$tmp3154 $tmp3153 	%argrw{"wr"}
	div		$tmp3155 $tmp3150 $tmp3154 	%argrw{"wrr"}
	mul		___643_sum2 ___643_sum2 $tmp3155 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:262
# 		return (1.0 - rmd) * sum + rmd * sum2;
	sub		$tmp3156 $const29 ___640_rmd 	%line{262} %argrw{"wrr"}
	mul		$tmp3157 $tmp3156 ___640_sum 	%argrw{"wrr"}
	mul		$tmp3158 ___640_rmd ___643_sum2 	%argrw{"wrr"}
	add		Fac $tmp3157 $tmp3158 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:265
# 		sum *= ((float)(1 << n) / (float)((1 << (n + 1)) - 1));
	shl		$tmp3159 $const7 ___640_n 	%line{265} %argrw{"wrr"}
	assign		$tmp3160 $tmp3159 	%argrw{"wr"}
	add		$tmp3161 ___640_n $const7 	%argrw{"wrr"}
	shl		$tmp3162 $const7 $tmp3161 	%argrw{"wrr"}
	sub		$tmp3163 $tmp3162 $const7 	%argrw{"wrr"}
	assign		$tmp3164 $tmp3163 	%argrw{"wr"}
	div		$tmp3165 $tmp3160 $tmp3164 	%argrw{"wrr"}
	mul		___640_sum ___640_sum $tmp3165 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:266
# 		return sum;
	assign		Fac ___640_sum 	%line{266} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_noise_texture.osl:39
# 	Color = color(fac, noise_turbulence(point(p[1], p[0], p[2]), basis, detail, hard),
	compref		$tmp3168 $tmp1 $const7 	%filename{"intern/cycles/kernel/shaders/node_noise_texture.osl"} %line{39} %argrw{"wrr"}
	compref		$tmp3169 $tmp1 $const3 	%argrw{"wrr"}
	compref		$tmp3170 $tmp1 $const18 	%argrw{"wrr"}
	point		$tmp3167 $tmp3168 $tmp3169 $tmp3170 	%argrw{"wrrr"}
	functioncall	$const48 7937 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:230
# }
	assign		___640_fscale $const29 	%filename{"intern/cycles/kernel/shaders/node_texture.h"} %line{230} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:231
# 
	assign		___640_amp $const29 	%line{231} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:232
# /* Soft/Hard Noise */
	assign		___640_sum $const4 	%line{232} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:235
# {
	functioncall	$const50 5655 	%line{235} %argrw{"r"}
# intern/cycles/kernel/shaders/stdosl.h:142
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp3171 Detail $const49 	%filename{"intern/cycles/kernel/shaders/stdosl.h"} %line{142} %argrw{"wrr"}
	max		___640_octaves $tmp3171 $const4 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:236
# 				else if (d < da[2]) {
	assign		___640_n ___640_octaves 	%filename{"intern/cycles/kernel/shaders/node_texture.h"} %line{236} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:238
# 					da[2] = d;
	for		$tmp3172 5658 5659 6780 6782 	%line{238} %argrw{"r"}
	assign		___640_i $const3 	%argrw{"wr"}
	le		$tmp3172 ___640_i ___640_n 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:239
# 
	mul		$tmp3173 ___640_fscale $tmp3167 	%line{239} %argrw{"wrr"}
	functioncall	$const6 6772 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:173
# 	if (basis == "Perlin")
	eq		$tmp3174 Basis $const1 	%line{173} %argrw{"wrr"}
	if		$tmp3174 5676 5676 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 		return safe_noise(p, 1);
	functioncall	$const8 5675 	%line{174} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:154
# 	float f = 0.0;
	assign		___633_f $const4 	%line{154} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:157
# 	if (type == 0)
	eq		$tmp3175 $const7 $const3 	%line{157} %argrw{"wrr"}
	if		$tmp3175 5668 5669 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:158
# 		f = noise("perlin", p);
	noise		___633_f $const9 $tmp3173 	%line{158} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:162
# 		f = noise(p);
	noise		___633_f $tmp3173 	%line{162} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:165
# 	if (!isfinite(f))
	isfinite	$tmp3176 ___633_f 	%line{165} %argrw{"wr"}
	eq		$tmp3177 $tmp3176 $const3 	%argrw{"wrr"}
	if		$tmp3177 5674 5674 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:166
# 		return 0.5;
	assign		___642_t $const10 	%line{166} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:168
# 	return f;
	assign		___642_t ___633_f 	%line{168} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 		return safe_noise(p, 1);
	return	%line{174}
# intern/cycles/kernel/shaders/node_texture.h:175
# 	if (basis == "Voronoi F1")
	eq		$tmp3178 Basis $const11 	%line{175} %argrw{"wrr"}
	if		$tmp3178 5856 5856 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	functioncall	$const12 5855 	%line{176} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 5853 	%line{143} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:130
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 5853 	%line{130} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 5852 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp3181 $tmp3173 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp3180 $tmp3181 	%argrw{"wr"}
	assign		___608_xi $tmp3180 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp3183 $tmp3173 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp3182 $tmp3183 	%argrw{"wr"}
	assign		___608_yi $tmp3182 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp3185 $tmp3173 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp3184 $tmp3185 	%argrw{"wr"}
	assign		___608_zi $tmp3184 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp3187 5697 5699 5850 5852 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp3186 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp3187 ___608_xx $tmp3186 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp3189 5701 5703 5848 5850 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp3188 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp3189 ___608_yy $tmp3188 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp3191 5705 5707 5846 5848 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp3190 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp3191 ___608_zz $tmp3190 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp3192 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp3193 ___608_yy 	%argrw{"wr"}
	assign		$tmp3194 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp3192 $tmp3193 $tmp3194 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 5724 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp3197 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp3198 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp3199 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp3196 $tmp3197 $tmp3198 $tmp3199 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp3196 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp3201 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp3202 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp3203 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp3200 $tmp3201 $tmp3202 $tmp3203 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp3200 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp3195 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp3195 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp3204 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp3173 $tmp3204 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 5797 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp3205 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp3205 5732 5732 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp3206 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp3206 5736 5736 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp3207 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp3207 5747 5747 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp3209 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp3208 $tmp3209 	%argrw{"wr"}
	compref		$tmp3211 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3210 $tmp3211 	%argrw{"wr"}
	add		$tmp3212 $tmp3208 $tmp3210 	%argrw{"wrr"}
	compref		$tmp3214 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3213 $tmp3214 	%argrw{"wr"}
	add		___614_d $tmp3212 $tmp3213 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp3215 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp3215 5758 5758 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp3217 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp3216 $tmp3217 	%argrw{"wr"}
	compref		$tmp3220 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3219 $tmp3220 	%argrw{"wr"}
	compref		$tmp3222 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3221 $tmp3222 	%argrw{"wr"}
	max		$tmp3218 $tmp3219 $tmp3221 	%argrw{"wrr"}
	max		___614_d $tmp3216 $tmp3218 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp3223 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp3223 5772 5772 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp3226 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp3225 $tmp3226 	%argrw{"wr"}
	sqrt		$tmp3224 $tmp3225 	%argrw{"wr"}
	compref		$tmp3229 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3228 $tmp3229 	%argrw{"wr"}
	sqrt		$tmp3227 $tmp3228 	%argrw{"wr"}
	add		$tmp3230 $tmp3224 $tmp3227 	%argrw{"wrr"}
	compref		$tmp3233 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3232 $tmp3233 	%argrw{"wr"}
	sqrt		$tmp3231 $tmp3232 	%argrw{"wr"}
	add		___614_d $tmp3230 $tmp3231 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp3234 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp3234 5780 5780 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp3237 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp3238 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp3236 $tmp3237 $tmp3238 	%argrw{"wrr"}
	sqrt		$tmp3235 $tmp3236 	%argrw{"wr"}
	sqrt		___614_d $tmp3235 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp3239 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp3239 5796 5796 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp3242 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp3241 $tmp3242 	%argrw{"wr"}
	pow		$tmp3240 $tmp3241 $const4 	%argrw{"wrr"}
	compref		$tmp3245 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3244 $tmp3245 	%argrw{"wr"}
	pow		$tmp3243 $tmp3244 $const4 	%argrw{"wrr"}
	add		$tmp3246 $tmp3240 $tmp3243 	%argrw{"wrr"}
	compref		$tmp3249 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3248 $tmp3249 	%argrw{"wr"}
	pow		$tmp3247 $tmp3248 $const4 	%argrw{"wrr"}
	add		$tmp3250 $tmp3246 $tmp3247 	%argrw{"wrr"}
	div		$tmp3251 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp3250 $tmp3251 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp3253 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp3254 ___608_yy 	%argrw{"wr"}
	assign		$tmp3255 ___608_zz 	%argrw{"wr"}
	point		$tmp3252 $tmp3253 $tmp3254 $tmp3255 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp3252 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp3256 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp3257 ___614_d $tmp3256 	%argrw{"wrr"}
	if		$tmp3257 5819 5846 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp3258 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3258 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp3259 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp3259 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp3260 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp3260 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp3261 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3261 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp3262 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp3262 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp3263 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp3263 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp3264 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp3265 ___614_d $tmp3264 	%argrw{"wrr"}
	if		$tmp3265 5832 5846 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp3266 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3266 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp3267 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp3267 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp3268 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3268 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp3269 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp3269 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp3270 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp3271 ___614_d $tmp3270 	%argrw{"wrr"}
	if		$tmp3271 5841 5846 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp3272 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3272 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp3273 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3273 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp3274 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp3275 ___614_d $tmp3274 	%argrw{"wrr"}
	if		$tmp3275 5846 5846 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp3276 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp3277 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp3278 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp3179 ___619_da $const3 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp3279 $const13 $tmp3179 	%line{143} %argrw{"wrr"}
	sub		___642_t $tmp3279 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	return	%line{176}
# intern/cycles/kernel/shaders/node_texture.h:177
# 	if (basis == "Voronoi F2")
	eq		$tmp3280 Basis $const30 	%line{177} %argrw{"wrr"}
	if		$tmp3280 6036 6036 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	functioncall	$const31 6035 	%line{178} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const32 6033 	%line{144} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:131
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 6033 	%line{131} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 6032 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp3283 $tmp3173 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp3282 $tmp3283 	%argrw{"wr"}
	assign		___608_xi $tmp3282 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp3285 $tmp3173 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp3284 $tmp3285 	%argrw{"wr"}
	assign		___608_yi $tmp3284 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp3287 $tmp3173 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp3286 $tmp3287 	%argrw{"wr"}
	assign		___608_zi $tmp3286 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp3289 5877 5879 6030 6032 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp3288 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp3289 ___608_xx $tmp3288 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp3291 5881 5883 6028 6030 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp3290 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp3291 ___608_yy $tmp3290 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp3293 5885 5887 6026 6028 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp3292 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp3293 ___608_zz $tmp3292 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp3294 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp3295 ___608_yy 	%argrw{"wr"}
	assign		$tmp3296 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp3294 $tmp3295 $tmp3296 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 5904 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp3299 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp3300 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp3301 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp3298 $tmp3299 $tmp3300 $tmp3301 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp3298 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp3303 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp3304 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp3305 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp3302 $tmp3303 $tmp3304 $tmp3305 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp3302 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp3297 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp3297 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp3306 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp3173 $tmp3306 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 5977 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp3307 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp3307 5912 5912 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp3308 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp3308 5916 5916 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp3309 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp3309 5927 5927 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp3311 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp3310 $tmp3311 	%argrw{"wr"}
	compref		$tmp3313 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3312 $tmp3313 	%argrw{"wr"}
	add		$tmp3314 $tmp3310 $tmp3312 	%argrw{"wrr"}
	compref		$tmp3316 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3315 $tmp3316 	%argrw{"wr"}
	add		___614_d $tmp3314 $tmp3315 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp3317 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp3317 5938 5938 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp3319 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp3318 $tmp3319 	%argrw{"wr"}
	compref		$tmp3322 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3321 $tmp3322 	%argrw{"wr"}
	compref		$tmp3324 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3323 $tmp3324 	%argrw{"wr"}
	max		$tmp3320 $tmp3321 $tmp3323 	%argrw{"wrr"}
	max		___614_d $tmp3318 $tmp3320 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp3325 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp3325 5952 5952 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp3328 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp3327 $tmp3328 	%argrw{"wr"}
	sqrt		$tmp3326 $tmp3327 	%argrw{"wr"}
	compref		$tmp3331 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3330 $tmp3331 	%argrw{"wr"}
	sqrt		$tmp3329 $tmp3330 	%argrw{"wr"}
	add		$tmp3332 $tmp3326 $tmp3329 	%argrw{"wrr"}
	compref		$tmp3335 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3334 $tmp3335 	%argrw{"wr"}
	sqrt		$tmp3333 $tmp3334 	%argrw{"wr"}
	add		___614_d $tmp3332 $tmp3333 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp3336 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp3336 5960 5960 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp3339 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp3340 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp3338 $tmp3339 $tmp3340 	%argrw{"wrr"}
	sqrt		$tmp3337 $tmp3338 	%argrw{"wr"}
	sqrt		___614_d $tmp3337 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp3341 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp3341 5976 5976 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp3344 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp3343 $tmp3344 	%argrw{"wr"}
	pow		$tmp3342 $tmp3343 $const4 	%argrw{"wrr"}
	compref		$tmp3347 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3346 $tmp3347 	%argrw{"wr"}
	pow		$tmp3345 $tmp3346 $const4 	%argrw{"wrr"}
	add		$tmp3348 $tmp3342 $tmp3345 	%argrw{"wrr"}
	compref		$tmp3351 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3350 $tmp3351 	%argrw{"wr"}
	pow		$tmp3349 $tmp3350 $const4 	%argrw{"wrr"}
	add		$tmp3352 $tmp3348 $tmp3349 	%argrw{"wrr"}
	div		$tmp3353 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp3352 $tmp3353 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp3355 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp3356 ___608_yy 	%argrw{"wr"}
	assign		$tmp3357 ___608_zz 	%argrw{"wr"}
	point		$tmp3354 $tmp3355 $tmp3356 $tmp3357 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp3354 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp3358 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp3359 ___614_d $tmp3358 	%argrw{"wrr"}
	if		$tmp3359 5999 6026 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp3360 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3360 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp3361 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp3361 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp3362 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp3362 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp3363 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3363 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp3364 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp3364 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp3365 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp3365 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp3366 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp3367 ___614_d $tmp3366 	%argrw{"wrr"}
	if		$tmp3367 6012 6026 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp3368 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3368 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp3369 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp3369 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp3370 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3370 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp3371 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp3371 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp3372 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp3373 ___614_d $tmp3372 	%argrw{"wrr"}
	if		$tmp3373 6021 6026 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp3374 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3374 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp3375 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3375 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp3376 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp3377 ___614_d $tmp3376 	%argrw{"wrr"}
	if		$tmp3377 6026 6026 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp3378 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp3379 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp3380 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp3281 ___619_da $const7 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp3381 $const13 $tmp3281 	%line{144} %argrw{"wrr"}
	sub		___642_t $tmp3381 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	return	%line{178}
# intern/cycles/kernel/shaders/node_texture.h:179
# 	if (basis == "Voronoi F3")
	eq		$tmp3382 Basis $const33 	%line{179} %argrw{"wrr"}
	if		$tmp3382 6216 6216 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	functioncall	$const34 6215 	%line{180} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const35 6213 	%line{145} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:132
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 6213 	%line{132} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 6212 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp3385 $tmp3173 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp3384 $tmp3385 	%argrw{"wr"}
	assign		___608_xi $tmp3384 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp3387 $tmp3173 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp3386 $tmp3387 	%argrw{"wr"}
	assign		___608_yi $tmp3386 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp3389 $tmp3173 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp3388 $tmp3389 	%argrw{"wr"}
	assign		___608_zi $tmp3388 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp3391 6057 6059 6210 6212 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp3390 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp3391 ___608_xx $tmp3390 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp3393 6061 6063 6208 6210 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp3392 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp3393 ___608_yy $tmp3392 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp3395 6065 6067 6206 6208 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp3394 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp3395 ___608_zz $tmp3394 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp3396 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp3397 ___608_yy 	%argrw{"wr"}
	assign		$tmp3398 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp3396 $tmp3397 $tmp3398 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 6084 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp3401 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp3402 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp3403 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp3400 $tmp3401 $tmp3402 $tmp3403 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp3400 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp3405 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp3406 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp3407 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp3404 $tmp3405 $tmp3406 $tmp3407 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp3404 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp3399 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp3399 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp3408 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp3173 $tmp3408 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 6157 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp3409 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp3409 6092 6092 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp3410 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp3410 6096 6096 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp3411 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp3411 6107 6107 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp3413 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp3412 $tmp3413 	%argrw{"wr"}
	compref		$tmp3415 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3414 $tmp3415 	%argrw{"wr"}
	add		$tmp3416 $tmp3412 $tmp3414 	%argrw{"wrr"}
	compref		$tmp3418 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3417 $tmp3418 	%argrw{"wr"}
	add		___614_d $tmp3416 $tmp3417 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp3419 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp3419 6118 6118 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp3421 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp3420 $tmp3421 	%argrw{"wr"}
	compref		$tmp3424 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3423 $tmp3424 	%argrw{"wr"}
	compref		$tmp3426 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3425 $tmp3426 	%argrw{"wr"}
	max		$tmp3422 $tmp3423 $tmp3425 	%argrw{"wrr"}
	max		___614_d $tmp3420 $tmp3422 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp3427 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp3427 6132 6132 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp3430 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp3429 $tmp3430 	%argrw{"wr"}
	sqrt		$tmp3428 $tmp3429 	%argrw{"wr"}
	compref		$tmp3433 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3432 $tmp3433 	%argrw{"wr"}
	sqrt		$tmp3431 $tmp3432 	%argrw{"wr"}
	add		$tmp3434 $tmp3428 $tmp3431 	%argrw{"wrr"}
	compref		$tmp3437 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3436 $tmp3437 	%argrw{"wr"}
	sqrt		$tmp3435 $tmp3436 	%argrw{"wr"}
	add		___614_d $tmp3434 $tmp3435 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp3438 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp3438 6140 6140 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp3441 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp3442 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp3440 $tmp3441 $tmp3442 	%argrw{"wrr"}
	sqrt		$tmp3439 $tmp3440 	%argrw{"wr"}
	sqrt		___614_d $tmp3439 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp3443 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp3443 6156 6156 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp3446 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp3445 $tmp3446 	%argrw{"wr"}
	pow		$tmp3444 $tmp3445 $const4 	%argrw{"wrr"}
	compref		$tmp3449 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3448 $tmp3449 	%argrw{"wr"}
	pow		$tmp3447 $tmp3448 $const4 	%argrw{"wrr"}
	add		$tmp3450 $tmp3444 $tmp3447 	%argrw{"wrr"}
	compref		$tmp3453 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3452 $tmp3453 	%argrw{"wr"}
	pow		$tmp3451 $tmp3452 $const4 	%argrw{"wrr"}
	add		$tmp3454 $tmp3450 $tmp3451 	%argrw{"wrr"}
	div		$tmp3455 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp3454 $tmp3455 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp3457 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp3458 ___608_yy 	%argrw{"wr"}
	assign		$tmp3459 ___608_zz 	%argrw{"wr"}
	point		$tmp3456 $tmp3457 $tmp3458 $tmp3459 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp3456 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp3460 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp3461 ___614_d $tmp3460 	%argrw{"wrr"}
	if		$tmp3461 6179 6206 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp3462 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3462 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp3463 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp3463 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp3464 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp3464 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp3465 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3465 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp3466 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp3466 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp3467 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp3467 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp3468 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp3469 ___614_d $tmp3468 	%argrw{"wrr"}
	if		$tmp3469 6192 6206 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp3470 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3470 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp3471 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp3471 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp3472 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3472 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp3473 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp3473 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp3474 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp3475 ___614_d $tmp3474 	%argrw{"wrr"}
	if		$tmp3475 6201 6206 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp3476 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3476 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp3477 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3477 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp3478 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp3479 ___614_d $tmp3478 	%argrw{"wrr"}
	if		$tmp3479 6206 6206 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp3480 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp3481 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp3482 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp3383 ___619_da $const18 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp3483 $const13 $tmp3383 	%line{145} %argrw{"wrr"}
	sub		___642_t $tmp3483 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	return	%line{180}
# intern/cycles/kernel/shaders/node_texture.h:181
# 	if (basis == "Voronoi F4")
	eq		$tmp3484 Basis $const36 	%line{181} %argrw{"wrr"}
	if		$tmp3484 6396 6396 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	functioncall	$const37 6395 	%line{182} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const38 6393 	%line{146} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:133
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 6393 	%line{133} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 6392 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp3487 $tmp3173 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp3486 $tmp3487 	%argrw{"wr"}
	assign		___608_xi $tmp3486 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp3489 $tmp3173 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp3488 $tmp3489 	%argrw{"wr"}
	assign		___608_yi $tmp3488 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp3491 $tmp3173 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp3490 $tmp3491 	%argrw{"wr"}
	assign		___608_zi $tmp3490 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp3493 6237 6239 6390 6392 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp3492 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp3493 ___608_xx $tmp3492 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp3495 6241 6243 6388 6390 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp3494 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp3495 ___608_yy $tmp3494 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp3497 6245 6247 6386 6388 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp3496 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp3497 ___608_zz $tmp3496 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp3498 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp3499 ___608_yy 	%argrw{"wr"}
	assign		$tmp3500 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp3498 $tmp3499 $tmp3500 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 6264 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp3503 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp3504 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp3505 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp3502 $tmp3503 $tmp3504 $tmp3505 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp3502 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp3507 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp3508 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp3509 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp3506 $tmp3507 $tmp3508 $tmp3509 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp3506 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp3501 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp3501 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp3510 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp3173 $tmp3510 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 6337 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp3511 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp3511 6272 6272 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp3512 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp3512 6276 6276 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp3513 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp3513 6287 6287 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp3515 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp3514 $tmp3515 	%argrw{"wr"}
	compref		$tmp3517 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3516 $tmp3517 	%argrw{"wr"}
	add		$tmp3518 $tmp3514 $tmp3516 	%argrw{"wrr"}
	compref		$tmp3520 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3519 $tmp3520 	%argrw{"wr"}
	add		___614_d $tmp3518 $tmp3519 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp3521 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp3521 6298 6298 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp3523 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp3522 $tmp3523 	%argrw{"wr"}
	compref		$tmp3526 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3525 $tmp3526 	%argrw{"wr"}
	compref		$tmp3528 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3527 $tmp3528 	%argrw{"wr"}
	max		$tmp3524 $tmp3525 $tmp3527 	%argrw{"wrr"}
	max		___614_d $tmp3522 $tmp3524 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp3529 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp3529 6312 6312 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp3532 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp3531 $tmp3532 	%argrw{"wr"}
	sqrt		$tmp3530 $tmp3531 	%argrw{"wr"}
	compref		$tmp3535 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3534 $tmp3535 	%argrw{"wr"}
	sqrt		$tmp3533 $tmp3534 	%argrw{"wr"}
	add		$tmp3536 $tmp3530 $tmp3533 	%argrw{"wrr"}
	compref		$tmp3539 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3538 $tmp3539 	%argrw{"wr"}
	sqrt		$tmp3537 $tmp3538 	%argrw{"wr"}
	add		___614_d $tmp3536 $tmp3537 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp3540 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp3540 6320 6320 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp3543 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp3544 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp3542 $tmp3543 $tmp3544 	%argrw{"wrr"}
	sqrt		$tmp3541 $tmp3542 	%argrw{"wr"}
	sqrt		___614_d $tmp3541 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp3545 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp3545 6336 6336 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp3548 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp3547 $tmp3548 	%argrw{"wr"}
	pow		$tmp3546 $tmp3547 $const4 	%argrw{"wrr"}
	compref		$tmp3551 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3550 $tmp3551 	%argrw{"wr"}
	pow		$tmp3549 $tmp3550 $const4 	%argrw{"wrr"}
	add		$tmp3552 $tmp3546 $tmp3549 	%argrw{"wrr"}
	compref		$tmp3555 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3554 $tmp3555 	%argrw{"wr"}
	pow		$tmp3553 $tmp3554 $const4 	%argrw{"wrr"}
	add		$tmp3556 $tmp3552 $tmp3553 	%argrw{"wrr"}
	div		$tmp3557 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp3556 $tmp3557 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp3559 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp3560 ___608_yy 	%argrw{"wr"}
	assign		$tmp3561 ___608_zz 	%argrw{"wr"}
	point		$tmp3558 $tmp3559 $tmp3560 $tmp3561 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp3558 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp3562 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp3563 ___614_d $tmp3562 	%argrw{"wrr"}
	if		$tmp3563 6359 6386 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp3564 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3564 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp3565 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp3565 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp3566 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp3566 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp3567 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3567 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp3568 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp3568 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp3569 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp3569 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp3570 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp3571 ___614_d $tmp3570 	%argrw{"wrr"}
	if		$tmp3571 6372 6386 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp3572 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3572 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp3573 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp3573 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp3574 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3574 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp3575 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp3575 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp3576 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp3577 ___614_d $tmp3576 	%argrw{"wrr"}
	if		$tmp3577 6381 6386 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp3578 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3578 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp3579 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3579 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp3580 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp3581 ___614_d $tmp3580 	%argrw{"wrr"}
	if		$tmp3581 6386 6386 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp3582 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp3583 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp3584 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp3485 ___619_da $const20 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp3585 $const13 $tmp3485 	%line{146} %argrw{"wrr"}
	sub		___642_t $tmp3585 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	return	%line{182}
# intern/cycles/kernel/shaders/node_texture.h:183
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp3586 Basis $const39 	%line{183} %argrw{"wrr"}
	if		$tmp3586 6578 6578 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	functioncall	$const40 6577 	%line{184} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const41 6575 	%line{147} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 6575 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 6572 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp3589 $tmp3173 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp3588 $tmp3589 	%argrw{"wr"}
	assign		___608_xi $tmp3588 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp3591 $tmp3173 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp3590 $tmp3591 	%argrw{"wr"}
	assign		___608_yi $tmp3590 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp3593 $tmp3173 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp3592 $tmp3593 	%argrw{"wr"}
	assign		___608_zi $tmp3592 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp3595 6417 6419 6570 6572 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp3594 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp3595 ___608_xx $tmp3594 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp3597 6421 6423 6568 6570 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp3596 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp3597 ___608_yy $tmp3596 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp3599 6425 6427 6566 6568 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp3598 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp3599 ___608_zz $tmp3598 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp3600 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp3601 ___608_yy 	%argrw{"wr"}
	assign		$tmp3602 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp3600 $tmp3601 $tmp3602 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 6444 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp3605 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp3606 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp3607 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp3604 $tmp3605 $tmp3606 $tmp3607 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp3604 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp3609 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp3610 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp3611 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp3608 $tmp3609 $tmp3610 $tmp3611 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp3608 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp3603 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp3603 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp3612 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp3173 $tmp3612 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 6517 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp3613 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp3613 6452 6452 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp3614 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp3614 6456 6456 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp3615 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp3615 6467 6467 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp3617 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp3616 $tmp3617 	%argrw{"wr"}
	compref		$tmp3619 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3618 $tmp3619 	%argrw{"wr"}
	add		$tmp3620 $tmp3616 $tmp3618 	%argrw{"wrr"}
	compref		$tmp3622 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3621 $tmp3622 	%argrw{"wr"}
	add		___614_d $tmp3620 $tmp3621 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp3623 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp3623 6478 6478 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp3625 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp3624 $tmp3625 	%argrw{"wr"}
	compref		$tmp3628 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3627 $tmp3628 	%argrw{"wr"}
	compref		$tmp3630 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3629 $tmp3630 	%argrw{"wr"}
	max		$tmp3626 $tmp3627 $tmp3629 	%argrw{"wrr"}
	max		___614_d $tmp3624 $tmp3626 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp3631 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp3631 6492 6492 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp3634 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp3633 $tmp3634 	%argrw{"wr"}
	sqrt		$tmp3632 $tmp3633 	%argrw{"wr"}
	compref		$tmp3637 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3636 $tmp3637 	%argrw{"wr"}
	sqrt		$tmp3635 $tmp3636 	%argrw{"wr"}
	add		$tmp3638 $tmp3632 $tmp3635 	%argrw{"wrr"}
	compref		$tmp3641 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3640 $tmp3641 	%argrw{"wr"}
	sqrt		$tmp3639 $tmp3640 	%argrw{"wr"}
	add		___614_d $tmp3638 $tmp3639 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp3642 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp3642 6500 6500 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp3645 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp3646 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp3644 $tmp3645 $tmp3646 	%argrw{"wrr"}
	sqrt		$tmp3643 $tmp3644 	%argrw{"wr"}
	sqrt		___614_d $tmp3643 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp3647 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp3647 6516 6516 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp3650 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp3649 $tmp3650 	%argrw{"wr"}
	pow		$tmp3648 $tmp3649 $const4 	%argrw{"wrr"}
	compref		$tmp3653 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3652 $tmp3653 	%argrw{"wr"}
	pow		$tmp3651 $tmp3652 $const4 	%argrw{"wrr"}
	add		$tmp3654 $tmp3648 $tmp3651 	%argrw{"wrr"}
	compref		$tmp3657 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3656 $tmp3657 	%argrw{"wr"}
	pow		$tmp3655 $tmp3656 $const4 	%argrw{"wrr"}
	add		$tmp3658 $tmp3654 $tmp3655 	%argrw{"wrr"}
	div		$tmp3659 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp3658 $tmp3659 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp3661 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp3662 ___608_yy 	%argrw{"wr"}
	assign		$tmp3663 ___608_zz 	%argrw{"wr"}
	point		$tmp3660 $tmp3661 $tmp3662 $tmp3663 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp3660 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp3664 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp3665 ___614_d $tmp3664 	%argrw{"wrr"}
	if		$tmp3665 6539 6566 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp3666 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp3666 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp3667 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp3667 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp3668 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp3668 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp3669 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp3669 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp3670 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp3670 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp3671 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp3671 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp3672 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp3673 ___614_d $tmp3672 	%argrw{"wrr"}
	if		$tmp3673 6552 6566 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp3674 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp3674 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp3675 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp3675 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp3676 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp3676 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp3677 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp3677 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp3678 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp3679 ___614_d $tmp3678 	%argrw{"wrr"}
	if		$tmp3679 6561 6566 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp3680 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp3680 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp3681 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp3681 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp3682 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp3683 ___614_d $tmp3682 	%argrw{"wrr"}
	if		$tmp3683 6566 6566 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp3684 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp3685 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp3686 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp3687 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp3688 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp3587 $tmp3687 $tmp3688 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp3689 $const13 $tmp3587 	%line{147} %argrw{"wrr"}
	sub		___642_t $tmp3689 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	return	%line{184}
# intern/cycles/kernel/shaders/node_texture.h:185
# 	if (basis == "Voronoi Crackle")
	eq		$tmp3690 Basis $const43 	%line{185} %argrw{"wrr"}
	if		$tmp3690 6767 6767 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	functioncall	$const44 6766 	%line{186} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const45 6764 	%line{148} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const41 6758 	%line{139} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 6758 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 6755 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp3694 $tmp3173 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp3693 $tmp3694 	%argrw{"wr"}
	assign		___608_xi $tmp3693 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp3696 $tmp3173 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp3695 $tmp3696 	%argrw{"wr"}
	assign		___608_yi $tmp3695 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp3698 $tmp3173 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp3697 $tmp3698 	%argrw{"wr"}
	assign		___608_zi $tmp3697 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp3700 6600 6602 6753 6755 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp3699 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp3700 ___608_xx $tmp3699 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp3702 6604 6606 6751 6753 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp3701 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp3702 ___608_yy $tmp3701 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp3704 6608 6610 6749 6751 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp3703 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp3704 ___608_zz $tmp3703 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp3705 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp3706 ___608_yy 	%argrw{"wr"}
	assign		$tmp3707 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp3705 $tmp3706 $tmp3707 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 6627 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp3710 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp3711 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp3712 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp3709 $tmp3710 $tmp3711 $tmp3712 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp3709 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp3714 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp3715 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp3716 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp3713 $tmp3714 $tmp3715 $tmp3716 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp3713 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp3708 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp3708 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp3717 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp3173 $tmp3717 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 6700 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp3718 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp3718 6635 6635 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp3719 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp3719 6639 6639 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp3720 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp3720 6650 6650 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp3722 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp3721 $tmp3722 	%argrw{"wr"}
	compref		$tmp3724 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3723 $tmp3724 	%argrw{"wr"}
	add		$tmp3725 $tmp3721 $tmp3723 	%argrw{"wrr"}
	compref		$tmp3727 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3726 $tmp3727 	%argrw{"wr"}
	add		___614_d $tmp3725 $tmp3726 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp3728 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp3728 6661 6661 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp3730 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp3729 $tmp3730 	%argrw{"wr"}
	compref		$tmp3733 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3732 $tmp3733 	%argrw{"wr"}
	compref		$tmp3735 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3734 $tmp3735 	%argrw{"wr"}
	max		$tmp3731 $tmp3732 $tmp3734 	%argrw{"wrr"}
	max		___614_d $tmp3729 $tmp3731 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp3736 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp3736 6675 6675 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp3739 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp3738 $tmp3739 	%argrw{"wr"}
	sqrt		$tmp3737 $tmp3738 	%argrw{"wr"}
	compref		$tmp3742 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3741 $tmp3742 	%argrw{"wr"}
	sqrt		$tmp3740 $tmp3741 	%argrw{"wr"}
	add		$tmp3743 $tmp3737 $tmp3740 	%argrw{"wrr"}
	compref		$tmp3746 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3745 $tmp3746 	%argrw{"wr"}
	sqrt		$tmp3744 $tmp3745 	%argrw{"wr"}
	add		___614_d $tmp3743 $tmp3744 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp3747 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp3747 6683 6683 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp3750 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp3751 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp3749 $tmp3750 $tmp3751 	%argrw{"wrr"}
	sqrt		$tmp3748 $tmp3749 	%argrw{"wr"}
	sqrt		___614_d $tmp3748 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp3752 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp3752 6699 6699 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp3755 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp3754 $tmp3755 	%argrw{"wr"}
	pow		$tmp3753 $tmp3754 $const4 	%argrw{"wrr"}
	compref		$tmp3758 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3757 $tmp3758 	%argrw{"wr"}
	pow		$tmp3756 $tmp3757 $const4 	%argrw{"wrr"}
	add		$tmp3759 $tmp3753 $tmp3756 	%argrw{"wrr"}
	compref		$tmp3762 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3761 $tmp3762 	%argrw{"wr"}
	pow		$tmp3760 $tmp3761 $const4 	%argrw{"wrr"}
	add		$tmp3763 $tmp3759 $tmp3760 	%argrw{"wrr"}
	div		$tmp3764 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp3763 $tmp3764 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp3766 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp3767 ___608_yy 	%argrw{"wr"}
	assign		$tmp3768 ___608_zz 	%argrw{"wr"}
	point		$tmp3765 $tmp3766 $tmp3767 $tmp3768 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp3765 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp3769 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp3770 ___614_d $tmp3769 	%argrw{"wrr"}
	if		$tmp3770 6722 6749 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp3771 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp3771 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp3772 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp3772 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp3773 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp3773 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp3774 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp3774 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp3775 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp3775 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp3776 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp3776 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp3777 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp3778 ___614_d $tmp3777 	%argrw{"wrr"}
	if		$tmp3778 6735 6749 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp3779 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp3779 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp3780 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp3780 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp3781 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp3781 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp3782 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp3782 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp3783 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp3784 ___614_d $tmp3783 	%argrw{"wrr"}
	if		$tmp3784 6744 6749 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp3785 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp3785 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp3786 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp3786 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp3787 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp3788 ___614_d $tmp3787 	%argrw{"wrr"}
	if		$tmp3788 6749 6749 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp3789 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp3790 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp3791 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp3792 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp3793 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp3692 $tmp3792 $tmp3793 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___626_t $const46 $tmp3692 	%line{139} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:140
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp3794 ___626_t $const29 	%line{140} %argrw{"wrr"}
	if		$tmp3794 6762 6763 	%argrw{"r"}
	assign		$tmp3691 $const29 	%argrw{"wr"}
	assign		$tmp3691 ___626_t 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp3795 $const13 $tmp3691 	%line{148} %argrw{"wrr"}
	sub		___642_t $tmp3795 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	return	%line{186}
# intern/cycles/kernel/shaders/node_texture.h:187
# 	if (basis == "Cell Noise")
	eq		$tmp3796 Basis $const47 	%line{187} %argrw{"wrr"}
	if		$tmp3796 6771 6771 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:188
# 		return cellnoise(p);
	cellnoise	___642_t $tmp3173 	%line{188} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:190
# 	return 0.0;
	assign		___642_t $const4 	%line{190} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:241
# 		if (hard)
	if		___646_hard 6776 6776 	%line{241} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:242
# 			t = fabs(2.0 * t - 1.0);
	mul		$tmp3797 $const13 ___642_t 	%line{242} %argrw{"wrr"}
	sub		$tmp3798 $tmp3797 $const29 	%argrw{"wrr"}
	fabs		___642_t $tmp3798 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:244
# 		sum += t * amp;
	mul		$tmp3799 ___642_t ___640_amp 	%line{244} %argrw{"wrr"}
	add		___640_sum ___640_sum $tmp3799 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:245
# 		amp *= 0.5;
	mul		___640_amp ___640_amp $const10 	%line{245} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:246
# 		fscale *= 2.0;
	mul		___640_fscale ___640_fscale $const13 	%line{246} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:238
# 	for (i = 0; i <= n; i++) {
	assign		$tmp3800 ___640_i 	%line{238} %argrw{"wr"}
	add		___640_i ___640_i $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:249
# 	float rmd = octaves - floor(octaves);
	floor		$tmp3801 ___640_octaves 	%line{249} %argrw{"wr"}
	sub		___640_rmd ___640_octaves $tmp3801 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:251
# 	if (rmd != 0.0) {
	neq		$tmp3802 ___640_rmd $const4 	%line{251} %argrw{"wrr"}
	if		$tmp3802 7927 7937 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:252
# 		float t = noise_basis(fscale * p, basis);
	mul		$tmp3803 ___640_fscale $tmp3167 	%line{252} %argrw{"wrr"}
	functioncall	$const6 7899 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:173
# 	if (basis == "Perlin")
	eq		$tmp3804 Basis $const1 	%line{173} %argrw{"wrr"}
	if		$tmp3804 6803 6803 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 		return safe_noise(p, 1);
	functioncall	$const8 6802 	%line{174} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:154
# 	float f = 0.0;
	assign		___633_f $const4 	%line{154} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:157
# 	if (type == 0)
	eq		$tmp3805 $const7 $const3 	%line{157} %argrw{"wrr"}
	if		$tmp3805 6795 6796 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:158
# 		f = noise("perlin", p);
	noise		___633_f $const9 $tmp3803 	%line{158} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:162
# 		f = noise(p);
	noise		___633_f $tmp3803 	%line{162} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:165
# 	if (!isfinite(f))
	isfinite	$tmp3806 ___633_f 	%line{165} %argrw{"wr"}
	eq		$tmp3807 $tmp3806 $const3 	%argrw{"wrr"}
	if		$tmp3807 6801 6801 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:166
# 		return 0.5;
	assign		___643_t $const10 	%line{166} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:168
# 	return f;
	assign		___643_t ___633_f 	%line{168} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 		return safe_noise(p, 1);
	return	%line{174}
# intern/cycles/kernel/shaders/node_texture.h:175
# 	if (basis == "Voronoi F1")
	eq		$tmp3808 Basis $const11 	%line{175} %argrw{"wrr"}
	if		$tmp3808 6983 6983 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	functioncall	$const12 6982 	%line{176} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 6980 	%line{143} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:130
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 6980 	%line{130} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 6979 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp3811 $tmp3803 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp3810 $tmp3811 	%argrw{"wr"}
	assign		___608_xi $tmp3810 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp3813 $tmp3803 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp3812 $tmp3813 	%argrw{"wr"}
	assign		___608_yi $tmp3812 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp3815 $tmp3803 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp3814 $tmp3815 	%argrw{"wr"}
	assign		___608_zi $tmp3814 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp3817 6824 6826 6977 6979 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp3816 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp3817 ___608_xx $tmp3816 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp3819 6828 6830 6975 6977 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp3818 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp3819 ___608_yy $tmp3818 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp3821 6832 6834 6973 6975 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp3820 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp3821 ___608_zz $tmp3820 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp3822 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp3823 ___608_yy 	%argrw{"wr"}
	assign		$tmp3824 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp3822 $tmp3823 $tmp3824 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 6851 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp3827 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp3828 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp3829 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp3826 $tmp3827 $tmp3828 $tmp3829 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp3826 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp3831 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp3832 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp3833 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp3830 $tmp3831 $tmp3832 $tmp3833 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp3830 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp3825 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp3825 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp3834 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp3803 $tmp3834 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 6924 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp3835 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp3835 6859 6859 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp3836 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp3836 6863 6863 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp3837 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp3837 6874 6874 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp3839 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp3838 $tmp3839 	%argrw{"wr"}
	compref		$tmp3841 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3840 $tmp3841 	%argrw{"wr"}
	add		$tmp3842 $tmp3838 $tmp3840 	%argrw{"wrr"}
	compref		$tmp3844 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3843 $tmp3844 	%argrw{"wr"}
	add		___614_d $tmp3842 $tmp3843 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp3845 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp3845 6885 6885 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp3847 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp3846 $tmp3847 	%argrw{"wr"}
	compref		$tmp3850 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3849 $tmp3850 	%argrw{"wr"}
	compref		$tmp3852 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3851 $tmp3852 	%argrw{"wr"}
	max		$tmp3848 $tmp3849 $tmp3851 	%argrw{"wrr"}
	max		___614_d $tmp3846 $tmp3848 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp3853 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp3853 6899 6899 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp3856 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp3855 $tmp3856 	%argrw{"wr"}
	sqrt		$tmp3854 $tmp3855 	%argrw{"wr"}
	compref		$tmp3859 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3858 $tmp3859 	%argrw{"wr"}
	sqrt		$tmp3857 $tmp3858 	%argrw{"wr"}
	add		$tmp3860 $tmp3854 $tmp3857 	%argrw{"wrr"}
	compref		$tmp3863 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3862 $tmp3863 	%argrw{"wr"}
	sqrt		$tmp3861 $tmp3862 	%argrw{"wr"}
	add		___614_d $tmp3860 $tmp3861 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp3864 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp3864 6907 6907 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp3867 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp3868 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp3866 $tmp3867 $tmp3868 	%argrw{"wrr"}
	sqrt		$tmp3865 $tmp3866 	%argrw{"wr"}
	sqrt		___614_d $tmp3865 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp3869 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp3869 6923 6923 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp3872 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp3871 $tmp3872 	%argrw{"wr"}
	pow		$tmp3870 $tmp3871 $const4 	%argrw{"wrr"}
	compref		$tmp3875 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3874 $tmp3875 	%argrw{"wr"}
	pow		$tmp3873 $tmp3874 $const4 	%argrw{"wrr"}
	add		$tmp3876 $tmp3870 $tmp3873 	%argrw{"wrr"}
	compref		$tmp3879 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3878 $tmp3879 	%argrw{"wr"}
	pow		$tmp3877 $tmp3878 $const4 	%argrw{"wrr"}
	add		$tmp3880 $tmp3876 $tmp3877 	%argrw{"wrr"}
	div		$tmp3881 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp3880 $tmp3881 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp3883 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp3884 ___608_yy 	%argrw{"wr"}
	assign		$tmp3885 ___608_zz 	%argrw{"wr"}
	point		$tmp3882 $tmp3883 $tmp3884 $tmp3885 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp3882 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp3886 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp3887 ___614_d $tmp3886 	%argrw{"wrr"}
	if		$tmp3887 6946 6973 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp3888 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3888 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp3889 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp3889 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp3890 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp3890 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp3891 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3891 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp3892 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp3892 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp3893 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp3893 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp3894 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp3895 ___614_d $tmp3894 	%argrw{"wrr"}
	if		$tmp3895 6959 6973 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp3896 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3896 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp3897 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp3897 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp3898 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3898 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp3899 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp3899 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp3900 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp3901 ___614_d $tmp3900 	%argrw{"wrr"}
	if		$tmp3901 6968 6973 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp3902 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3902 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp3903 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3903 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp3904 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp3905 ___614_d $tmp3904 	%argrw{"wrr"}
	if		$tmp3905 6973 6973 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp3906 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp3907 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp3908 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp3809 ___619_da $const3 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp3909 $const13 $tmp3809 	%line{143} %argrw{"wrr"}
	sub		___643_t $tmp3909 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	return	%line{176}
# intern/cycles/kernel/shaders/node_texture.h:177
# 	if (basis == "Voronoi F2")
	eq		$tmp3910 Basis $const30 	%line{177} %argrw{"wrr"}
	if		$tmp3910 7163 7163 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	functioncall	$const31 7162 	%line{178} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const32 7160 	%line{144} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:131
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 7160 	%line{131} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 7159 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp3913 $tmp3803 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp3912 $tmp3913 	%argrw{"wr"}
	assign		___608_xi $tmp3912 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp3915 $tmp3803 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp3914 $tmp3915 	%argrw{"wr"}
	assign		___608_yi $tmp3914 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp3917 $tmp3803 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp3916 $tmp3917 	%argrw{"wr"}
	assign		___608_zi $tmp3916 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp3919 7004 7006 7157 7159 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp3918 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp3919 ___608_xx $tmp3918 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp3921 7008 7010 7155 7157 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp3920 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp3921 ___608_yy $tmp3920 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp3923 7012 7014 7153 7155 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp3922 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp3923 ___608_zz $tmp3922 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp3924 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp3925 ___608_yy 	%argrw{"wr"}
	assign		$tmp3926 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp3924 $tmp3925 $tmp3926 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 7031 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp3929 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp3930 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp3931 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp3928 $tmp3929 $tmp3930 $tmp3931 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp3928 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp3933 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp3934 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp3935 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp3932 $tmp3933 $tmp3934 $tmp3935 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp3932 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp3927 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp3927 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp3936 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp3803 $tmp3936 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 7104 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp3937 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp3937 7039 7039 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp3938 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp3938 7043 7043 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp3939 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp3939 7054 7054 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp3941 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp3940 $tmp3941 	%argrw{"wr"}
	compref		$tmp3943 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3942 $tmp3943 	%argrw{"wr"}
	add		$tmp3944 $tmp3940 $tmp3942 	%argrw{"wrr"}
	compref		$tmp3946 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3945 $tmp3946 	%argrw{"wr"}
	add		___614_d $tmp3944 $tmp3945 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp3947 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp3947 7065 7065 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp3949 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp3948 $tmp3949 	%argrw{"wr"}
	compref		$tmp3952 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3951 $tmp3952 	%argrw{"wr"}
	compref		$tmp3954 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3953 $tmp3954 	%argrw{"wr"}
	max		$tmp3950 $tmp3951 $tmp3953 	%argrw{"wrr"}
	max		___614_d $tmp3948 $tmp3950 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp3955 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp3955 7079 7079 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp3958 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp3957 $tmp3958 	%argrw{"wr"}
	sqrt		$tmp3956 $tmp3957 	%argrw{"wr"}
	compref		$tmp3961 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3960 $tmp3961 	%argrw{"wr"}
	sqrt		$tmp3959 $tmp3960 	%argrw{"wr"}
	add		$tmp3962 $tmp3956 $tmp3959 	%argrw{"wrr"}
	compref		$tmp3965 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3964 $tmp3965 	%argrw{"wr"}
	sqrt		$tmp3963 $tmp3964 	%argrw{"wr"}
	add		___614_d $tmp3962 $tmp3963 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp3966 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp3966 7087 7087 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp3969 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp3970 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp3968 $tmp3969 $tmp3970 	%argrw{"wrr"}
	sqrt		$tmp3967 $tmp3968 	%argrw{"wr"}
	sqrt		___614_d $tmp3967 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp3971 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp3971 7103 7103 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp3974 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp3973 $tmp3974 	%argrw{"wr"}
	pow		$tmp3972 $tmp3973 $const4 	%argrw{"wrr"}
	compref		$tmp3977 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp3976 $tmp3977 	%argrw{"wr"}
	pow		$tmp3975 $tmp3976 $const4 	%argrw{"wrr"}
	add		$tmp3978 $tmp3972 $tmp3975 	%argrw{"wrr"}
	compref		$tmp3981 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp3980 $tmp3981 	%argrw{"wr"}
	pow		$tmp3979 $tmp3980 $const4 	%argrw{"wrr"}
	add		$tmp3982 $tmp3978 $tmp3979 	%argrw{"wrr"}
	div		$tmp3983 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp3982 $tmp3983 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp3985 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp3986 ___608_yy 	%argrw{"wr"}
	assign		$tmp3987 ___608_zz 	%argrw{"wr"}
	point		$tmp3984 $tmp3985 $tmp3986 $tmp3987 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp3984 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp3988 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp3989 ___614_d $tmp3988 	%argrw{"wrr"}
	if		$tmp3989 7126 7153 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp3990 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3990 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp3991 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp3991 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp3992 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp3992 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp3993 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp3993 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp3994 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp3994 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp3995 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp3995 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp3996 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp3997 ___614_d $tmp3996 	%argrw{"wrr"}
	if		$tmp3997 7139 7153 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp3998 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp3998 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp3999 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp3999 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp4000 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4000 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp4001 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp4001 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp4002 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp4003 ___614_d $tmp4002 	%argrw{"wrr"}
	if		$tmp4003 7148 7153 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp4004 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4004 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp4005 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4005 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp4006 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp4007 ___614_d $tmp4006 	%argrw{"wrr"}
	if		$tmp4007 7153 7153 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp4008 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp4009 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp4010 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp3911 ___619_da $const7 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp4011 $const13 $tmp3911 	%line{144} %argrw{"wrr"}
	sub		___643_t $tmp4011 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	return	%line{178}
# intern/cycles/kernel/shaders/node_texture.h:179
# 	if (basis == "Voronoi F3")
	eq		$tmp4012 Basis $const33 	%line{179} %argrw{"wrr"}
	if		$tmp4012 7343 7343 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	functioncall	$const34 7342 	%line{180} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const35 7340 	%line{145} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:132
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 7340 	%line{132} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 7339 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp4015 $tmp3803 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp4014 $tmp4015 	%argrw{"wr"}
	assign		___608_xi $tmp4014 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp4017 $tmp3803 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp4016 $tmp4017 	%argrw{"wr"}
	assign		___608_yi $tmp4016 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp4019 $tmp3803 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp4018 $tmp4019 	%argrw{"wr"}
	assign		___608_zi $tmp4018 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp4021 7184 7186 7337 7339 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp4020 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp4021 ___608_xx $tmp4020 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp4023 7188 7190 7335 7337 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp4022 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp4023 ___608_yy $tmp4022 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp4025 7192 7194 7333 7335 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp4024 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp4025 ___608_zz $tmp4024 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp4026 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp4027 ___608_yy 	%argrw{"wr"}
	assign		$tmp4028 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp4026 $tmp4027 $tmp4028 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 7211 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp4031 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp4032 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp4033 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp4030 $tmp4031 $tmp4032 $tmp4033 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp4030 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp4035 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp4036 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp4037 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp4034 $tmp4035 $tmp4036 $tmp4037 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp4034 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp4029 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp4029 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp4038 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp3803 $tmp4038 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 7284 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp4039 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp4039 7219 7219 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp4040 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp4040 7223 7223 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp4041 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp4041 7234 7234 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp4043 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp4042 $tmp4043 	%argrw{"wr"}
	compref		$tmp4045 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4044 $tmp4045 	%argrw{"wr"}
	add		$tmp4046 $tmp4042 $tmp4044 	%argrw{"wrr"}
	compref		$tmp4048 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4047 $tmp4048 	%argrw{"wr"}
	add		___614_d $tmp4046 $tmp4047 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp4049 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp4049 7245 7245 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp4051 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp4050 $tmp4051 	%argrw{"wr"}
	compref		$tmp4054 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4053 $tmp4054 	%argrw{"wr"}
	compref		$tmp4056 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4055 $tmp4056 	%argrw{"wr"}
	max		$tmp4052 $tmp4053 $tmp4055 	%argrw{"wrr"}
	max		___614_d $tmp4050 $tmp4052 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp4057 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp4057 7259 7259 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp4060 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp4059 $tmp4060 	%argrw{"wr"}
	sqrt		$tmp4058 $tmp4059 	%argrw{"wr"}
	compref		$tmp4063 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4062 $tmp4063 	%argrw{"wr"}
	sqrt		$tmp4061 $tmp4062 	%argrw{"wr"}
	add		$tmp4064 $tmp4058 $tmp4061 	%argrw{"wrr"}
	compref		$tmp4067 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4066 $tmp4067 	%argrw{"wr"}
	sqrt		$tmp4065 $tmp4066 	%argrw{"wr"}
	add		___614_d $tmp4064 $tmp4065 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp4068 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp4068 7267 7267 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp4071 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp4072 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp4070 $tmp4071 $tmp4072 	%argrw{"wrr"}
	sqrt		$tmp4069 $tmp4070 	%argrw{"wr"}
	sqrt		___614_d $tmp4069 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp4073 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp4073 7283 7283 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp4076 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp4075 $tmp4076 	%argrw{"wr"}
	pow		$tmp4074 $tmp4075 $const4 	%argrw{"wrr"}
	compref		$tmp4079 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4078 $tmp4079 	%argrw{"wr"}
	pow		$tmp4077 $tmp4078 $const4 	%argrw{"wrr"}
	add		$tmp4080 $tmp4074 $tmp4077 	%argrw{"wrr"}
	compref		$tmp4083 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4082 $tmp4083 	%argrw{"wr"}
	pow		$tmp4081 $tmp4082 $const4 	%argrw{"wrr"}
	add		$tmp4084 $tmp4080 $tmp4081 	%argrw{"wrr"}
	div		$tmp4085 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp4084 $tmp4085 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp4087 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp4088 ___608_yy 	%argrw{"wr"}
	assign		$tmp4089 ___608_zz 	%argrw{"wr"}
	point		$tmp4086 $tmp4087 $tmp4088 $tmp4089 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp4086 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp4090 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp4091 ___614_d $tmp4090 	%argrw{"wrr"}
	if		$tmp4091 7306 7333 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp4092 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4092 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp4093 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp4093 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp4094 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp4094 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp4095 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4095 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp4096 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp4096 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp4097 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp4097 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp4098 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp4099 ___614_d $tmp4098 	%argrw{"wrr"}
	if		$tmp4099 7319 7333 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp4100 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4100 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp4101 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp4101 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp4102 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4102 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp4103 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp4103 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp4104 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp4105 ___614_d $tmp4104 	%argrw{"wrr"}
	if		$tmp4105 7328 7333 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp4106 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4106 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp4107 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4107 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp4108 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp4109 ___614_d $tmp4108 	%argrw{"wrr"}
	if		$tmp4109 7333 7333 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp4110 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp4111 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp4112 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp4013 ___619_da $const18 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp4113 $const13 $tmp4013 	%line{145} %argrw{"wrr"}
	sub		___643_t $tmp4113 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	return	%line{180}
# intern/cycles/kernel/shaders/node_texture.h:181
# 	if (basis == "Voronoi F4")
	eq		$tmp4114 Basis $const36 	%line{181} %argrw{"wrr"}
	if		$tmp4114 7523 7523 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	functioncall	$const37 7522 	%line{182} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const38 7520 	%line{146} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:133
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 7520 	%line{133} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 7519 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp4117 $tmp3803 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp4116 $tmp4117 	%argrw{"wr"}
	assign		___608_xi $tmp4116 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp4119 $tmp3803 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp4118 $tmp4119 	%argrw{"wr"}
	assign		___608_yi $tmp4118 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp4121 $tmp3803 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp4120 $tmp4121 	%argrw{"wr"}
	assign		___608_zi $tmp4120 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp4123 7364 7366 7517 7519 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp4122 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp4123 ___608_xx $tmp4122 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp4125 7368 7370 7515 7517 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp4124 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp4125 ___608_yy $tmp4124 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp4127 7372 7374 7513 7515 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp4126 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp4127 ___608_zz $tmp4126 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp4128 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp4129 ___608_yy 	%argrw{"wr"}
	assign		$tmp4130 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp4128 $tmp4129 $tmp4130 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 7391 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp4133 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp4134 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp4135 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp4132 $tmp4133 $tmp4134 $tmp4135 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp4132 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp4137 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp4138 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp4139 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp4136 $tmp4137 $tmp4138 $tmp4139 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp4136 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp4131 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp4131 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp4140 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp3803 $tmp4140 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 7464 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp4141 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp4141 7399 7399 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp4142 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp4142 7403 7403 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp4143 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp4143 7414 7414 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp4145 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp4144 $tmp4145 	%argrw{"wr"}
	compref		$tmp4147 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4146 $tmp4147 	%argrw{"wr"}
	add		$tmp4148 $tmp4144 $tmp4146 	%argrw{"wrr"}
	compref		$tmp4150 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4149 $tmp4150 	%argrw{"wr"}
	add		___614_d $tmp4148 $tmp4149 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp4151 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp4151 7425 7425 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp4153 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp4152 $tmp4153 	%argrw{"wr"}
	compref		$tmp4156 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4155 $tmp4156 	%argrw{"wr"}
	compref		$tmp4158 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4157 $tmp4158 	%argrw{"wr"}
	max		$tmp4154 $tmp4155 $tmp4157 	%argrw{"wrr"}
	max		___614_d $tmp4152 $tmp4154 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp4159 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp4159 7439 7439 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp4162 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp4161 $tmp4162 	%argrw{"wr"}
	sqrt		$tmp4160 $tmp4161 	%argrw{"wr"}
	compref		$tmp4165 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4164 $tmp4165 	%argrw{"wr"}
	sqrt		$tmp4163 $tmp4164 	%argrw{"wr"}
	add		$tmp4166 $tmp4160 $tmp4163 	%argrw{"wrr"}
	compref		$tmp4169 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4168 $tmp4169 	%argrw{"wr"}
	sqrt		$tmp4167 $tmp4168 	%argrw{"wr"}
	add		___614_d $tmp4166 $tmp4167 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp4170 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp4170 7447 7447 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp4173 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp4174 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp4172 $tmp4173 $tmp4174 	%argrw{"wrr"}
	sqrt		$tmp4171 $tmp4172 	%argrw{"wr"}
	sqrt		___614_d $tmp4171 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp4175 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp4175 7463 7463 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp4178 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp4177 $tmp4178 	%argrw{"wr"}
	pow		$tmp4176 $tmp4177 $const4 	%argrw{"wrr"}
	compref		$tmp4181 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4180 $tmp4181 	%argrw{"wr"}
	pow		$tmp4179 $tmp4180 $const4 	%argrw{"wrr"}
	add		$tmp4182 $tmp4176 $tmp4179 	%argrw{"wrr"}
	compref		$tmp4185 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4184 $tmp4185 	%argrw{"wr"}
	pow		$tmp4183 $tmp4184 $const4 	%argrw{"wrr"}
	add		$tmp4186 $tmp4182 $tmp4183 	%argrw{"wrr"}
	div		$tmp4187 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp4186 $tmp4187 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp4189 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp4190 ___608_yy 	%argrw{"wr"}
	assign		$tmp4191 ___608_zz 	%argrw{"wr"}
	point		$tmp4188 $tmp4189 $tmp4190 $tmp4191 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp4188 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp4192 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp4193 ___614_d $tmp4192 	%argrw{"wrr"}
	if		$tmp4193 7486 7513 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp4194 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4194 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp4195 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp4195 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp4196 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp4196 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp4197 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4197 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp4198 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp4198 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp4199 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp4199 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp4200 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp4201 ___614_d $tmp4200 	%argrw{"wrr"}
	if		$tmp4201 7499 7513 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp4202 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4202 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp4203 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp4203 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp4204 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4204 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp4205 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp4205 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp4206 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp4207 ___614_d $tmp4206 	%argrw{"wrr"}
	if		$tmp4207 7508 7513 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp4208 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4208 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp4209 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4209 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp4210 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp4211 ___614_d $tmp4210 	%argrw{"wrr"}
	if		$tmp4211 7513 7513 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp4212 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp4213 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp4214 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp4115 ___619_da $const20 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp4215 $const13 $tmp4115 	%line{146} %argrw{"wrr"}
	sub		___643_t $tmp4215 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	return	%line{182}
# intern/cycles/kernel/shaders/node_texture.h:183
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp4216 Basis $const39 	%line{183} %argrw{"wrr"}
	if		$tmp4216 7705 7705 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	functioncall	$const40 7704 	%line{184} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const41 7702 	%line{147} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 7702 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 7699 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp4219 $tmp3803 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp4218 $tmp4219 	%argrw{"wr"}
	assign		___608_xi $tmp4218 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp4221 $tmp3803 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp4220 $tmp4221 	%argrw{"wr"}
	assign		___608_yi $tmp4220 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp4223 $tmp3803 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp4222 $tmp4223 	%argrw{"wr"}
	assign		___608_zi $tmp4222 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp4225 7544 7546 7697 7699 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp4224 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp4225 ___608_xx $tmp4224 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp4227 7548 7550 7695 7697 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp4226 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp4227 ___608_yy $tmp4226 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp4229 7552 7554 7693 7695 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp4228 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp4229 ___608_zz $tmp4228 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp4230 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp4231 ___608_yy 	%argrw{"wr"}
	assign		$tmp4232 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp4230 $tmp4231 $tmp4232 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 7571 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp4235 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp4236 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp4237 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp4234 $tmp4235 $tmp4236 $tmp4237 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp4234 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp4239 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp4240 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp4241 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp4238 $tmp4239 $tmp4240 $tmp4241 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp4238 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp4233 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp4233 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp4242 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp3803 $tmp4242 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 7644 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp4243 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp4243 7579 7579 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp4244 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp4244 7583 7583 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp4245 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp4245 7594 7594 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp4247 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp4246 $tmp4247 	%argrw{"wr"}
	compref		$tmp4249 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4248 $tmp4249 	%argrw{"wr"}
	add		$tmp4250 $tmp4246 $tmp4248 	%argrw{"wrr"}
	compref		$tmp4252 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4251 $tmp4252 	%argrw{"wr"}
	add		___614_d $tmp4250 $tmp4251 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp4253 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp4253 7605 7605 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp4255 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp4254 $tmp4255 	%argrw{"wr"}
	compref		$tmp4258 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4257 $tmp4258 	%argrw{"wr"}
	compref		$tmp4260 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4259 $tmp4260 	%argrw{"wr"}
	max		$tmp4256 $tmp4257 $tmp4259 	%argrw{"wrr"}
	max		___614_d $tmp4254 $tmp4256 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp4261 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp4261 7619 7619 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp4264 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp4263 $tmp4264 	%argrw{"wr"}
	sqrt		$tmp4262 $tmp4263 	%argrw{"wr"}
	compref		$tmp4267 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4266 $tmp4267 	%argrw{"wr"}
	sqrt		$tmp4265 $tmp4266 	%argrw{"wr"}
	add		$tmp4268 $tmp4262 $tmp4265 	%argrw{"wrr"}
	compref		$tmp4271 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4270 $tmp4271 	%argrw{"wr"}
	sqrt		$tmp4269 $tmp4270 	%argrw{"wr"}
	add		___614_d $tmp4268 $tmp4269 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp4272 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp4272 7627 7627 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp4275 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp4276 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp4274 $tmp4275 $tmp4276 	%argrw{"wrr"}
	sqrt		$tmp4273 $tmp4274 	%argrw{"wr"}
	sqrt		___614_d $tmp4273 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp4277 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp4277 7643 7643 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp4280 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp4279 $tmp4280 	%argrw{"wr"}
	pow		$tmp4278 $tmp4279 $const4 	%argrw{"wrr"}
	compref		$tmp4283 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4282 $tmp4283 	%argrw{"wr"}
	pow		$tmp4281 $tmp4282 $const4 	%argrw{"wrr"}
	add		$tmp4284 $tmp4278 $tmp4281 	%argrw{"wrr"}
	compref		$tmp4287 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4286 $tmp4287 	%argrw{"wr"}
	pow		$tmp4285 $tmp4286 $const4 	%argrw{"wrr"}
	add		$tmp4288 $tmp4284 $tmp4285 	%argrw{"wrr"}
	div		$tmp4289 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp4288 $tmp4289 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp4291 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp4292 ___608_yy 	%argrw{"wr"}
	assign		$tmp4293 ___608_zz 	%argrw{"wr"}
	point		$tmp4290 $tmp4291 $tmp4292 $tmp4293 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp4290 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp4294 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp4295 ___614_d $tmp4294 	%argrw{"wrr"}
	if		$tmp4295 7666 7693 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp4296 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp4296 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp4297 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp4297 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp4298 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp4298 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp4299 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp4299 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp4300 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp4300 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp4301 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp4301 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp4302 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp4303 ___614_d $tmp4302 	%argrw{"wrr"}
	if		$tmp4303 7679 7693 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp4304 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp4304 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp4305 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp4305 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp4306 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp4306 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp4307 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp4307 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp4308 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp4309 ___614_d $tmp4308 	%argrw{"wrr"}
	if		$tmp4309 7688 7693 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp4310 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp4310 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp4311 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp4311 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp4312 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp4313 ___614_d $tmp4312 	%argrw{"wrr"}
	if		$tmp4313 7693 7693 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp4314 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp4315 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp4316 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp4317 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp4318 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp4217 $tmp4317 $tmp4318 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp4319 $const13 $tmp4217 	%line{147} %argrw{"wrr"}
	sub		___643_t $tmp4319 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	return	%line{184}
# intern/cycles/kernel/shaders/node_texture.h:185
# 	if (basis == "Voronoi Crackle")
	eq		$tmp4320 Basis $const43 	%line{185} %argrw{"wrr"}
	if		$tmp4320 7894 7894 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	functioncall	$const44 7893 	%line{186} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const45 7891 	%line{148} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const41 7885 	%line{139} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 7885 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 7882 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp4324 $tmp3803 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp4323 $tmp4324 	%argrw{"wr"}
	assign		___608_xi $tmp4323 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp4326 $tmp3803 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp4325 $tmp4326 	%argrw{"wr"}
	assign		___608_yi $tmp4325 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp4328 $tmp3803 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp4327 $tmp4328 	%argrw{"wr"}
	assign		___608_zi $tmp4327 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp4330 7727 7729 7880 7882 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp4329 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp4330 ___608_xx $tmp4329 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp4332 7731 7733 7878 7880 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp4331 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp4332 ___608_yy $tmp4331 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp4334 7735 7737 7876 7878 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp4333 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp4334 ___608_zz $tmp4333 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp4335 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp4336 ___608_yy 	%argrw{"wr"}
	assign		$tmp4337 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp4335 $tmp4336 $tmp4337 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 7754 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp4340 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp4341 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp4342 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp4339 $tmp4340 $tmp4341 $tmp4342 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp4339 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp4344 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp4345 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp4346 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp4343 $tmp4344 $tmp4345 $tmp4346 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp4343 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp4338 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp4338 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp4347 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp3803 $tmp4347 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 7827 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp4348 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp4348 7762 7762 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp4349 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp4349 7766 7766 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp4350 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp4350 7777 7777 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp4352 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp4351 $tmp4352 	%argrw{"wr"}
	compref		$tmp4354 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4353 $tmp4354 	%argrw{"wr"}
	add		$tmp4355 $tmp4351 $tmp4353 	%argrw{"wrr"}
	compref		$tmp4357 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4356 $tmp4357 	%argrw{"wr"}
	add		___614_d $tmp4355 $tmp4356 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp4358 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp4358 7788 7788 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp4360 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp4359 $tmp4360 	%argrw{"wr"}
	compref		$tmp4363 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4362 $tmp4363 	%argrw{"wr"}
	compref		$tmp4365 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4364 $tmp4365 	%argrw{"wr"}
	max		$tmp4361 $tmp4362 $tmp4364 	%argrw{"wrr"}
	max		___614_d $tmp4359 $tmp4361 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp4366 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp4366 7802 7802 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp4369 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp4368 $tmp4369 	%argrw{"wr"}
	sqrt		$tmp4367 $tmp4368 	%argrw{"wr"}
	compref		$tmp4372 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4371 $tmp4372 	%argrw{"wr"}
	sqrt		$tmp4370 $tmp4371 	%argrw{"wr"}
	add		$tmp4373 $tmp4367 $tmp4370 	%argrw{"wrr"}
	compref		$tmp4376 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4375 $tmp4376 	%argrw{"wr"}
	sqrt		$tmp4374 $tmp4375 	%argrw{"wr"}
	add		___614_d $tmp4373 $tmp4374 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp4377 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp4377 7810 7810 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp4380 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp4381 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp4379 $tmp4380 $tmp4381 	%argrw{"wrr"}
	sqrt		$tmp4378 $tmp4379 	%argrw{"wr"}
	sqrt		___614_d $tmp4378 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp4382 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp4382 7826 7826 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp4385 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp4384 $tmp4385 	%argrw{"wr"}
	pow		$tmp4383 $tmp4384 $const4 	%argrw{"wrr"}
	compref		$tmp4388 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4387 $tmp4388 	%argrw{"wr"}
	pow		$tmp4386 $tmp4387 $const4 	%argrw{"wrr"}
	add		$tmp4389 $tmp4383 $tmp4386 	%argrw{"wrr"}
	compref		$tmp4392 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4391 $tmp4392 	%argrw{"wr"}
	pow		$tmp4390 $tmp4391 $const4 	%argrw{"wrr"}
	add		$tmp4393 $tmp4389 $tmp4390 	%argrw{"wrr"}
	div		$tmp4394 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp4393 $tmp4394 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp4396 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp4397 ___608_yy 	%argrw{"wr"}
	assign		$tmp4398 ___608_zz 	%argrw{"wr"}
	point		$tmp4395 $tmp4396 $tmp4397 $tmp4398 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp4395 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp4399 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp4400 ___614_d $tmp4399 	%argrw{"wrr"}
	if		$tmp4400 7849 7876 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp4401 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp4401 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp4402 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp4402 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp4403 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp4403 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp4404 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp4404 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp4405 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp4405 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp4406 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp4406 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp4407 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp4408 ___614_d $tmp4407 	%argrw{"wrr"}
	if		$tmp4408 7862 7876 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp4409 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp4409 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp4410 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp4410 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp4411 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp4411 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp4412 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp4412 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp4413 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp4414 ___614_d $tmp4413 	%argrw{"wrr"}
	if		$tmp4414 7871 7876 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp4415 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp4415 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp4416 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp4416 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp4417 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp4418 ___614_d $tmp4417 	%argrw{"wrr"}
	if		$tmp4418 7876 7876 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp4419 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp4420 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp4421 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp4422 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp4423 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp4322 $tmp4422 $tmp4423 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___626_t $const46 $tmp4322 	%line{139} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:140
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp4424 ___626_t $const29 	%line{140} %argrw{"wrr"}
	if		$tmp4424 7889 7890 	%argrw{"r"}
	assign		$tmp4321 $const29 	%argrw{"wr"}
	assign		$tmp4321 ___626_t 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp4425 $const13 $tmp4321 	%line{148} %argrw{"wrr"}
	sub		___643_t $tmp4425 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	return	%line{186}
# intern/cycles/kernel/shaders/node_texture.h:187
# 	if (basis == "Cell Noise")
	eq		$tmp4426 Basis $const47 	%line{187} %argrw{"wrr"}
	if		$tmp4426 7898 7898 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:188
# 		return cellnoise(p);
	cellnoise	___643_t $tmp3803 	%line{188} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:190
# 	return 0.0;
	assign		___643_t $const4 	%line{190} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:254
# 		if (hard)
	if		___646_hard 7903 7903 	%line{254} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:255
# 			t = fabs(2.0 * t - 1.0);
	mul		$tmp4427 $const13 ___643_t 	%line{255} %argrw{"wrr"}
	sub		$tmp4428 $tmp4427 $const29 	%argrw{"wrr"}
	fabs		___643_t $tmp4428 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:257
# 		float sum2 = sum + t * amp;
	mul		$tmp4429 ___643_t ___640_amp 	%line{257} %argrw{"wrr"}
	add		___643_sum2 ___640_sum $tmp4429 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:259
# 		sum *= ((float)(1 << n) / (float)((1 << (n + 1)) - 1));
	shl		$tmp4430 $const7 ___640_n 	%line{259} %argrw{"wrr"}
	assign		$tmp4431 $tmp4430 	%argrw{"wr"}
	add		$tmp4432 ___640_n $const7 	%argrw{"wrr"}
	shl		$tmp4433 $const7 $tmp4432 	%argrw{"wrr"}
	sub		$tmp4434 $tmp4433 $const7 	%argrw{"wrr"}
	assign		$tmp4435 $tmp4434 	%argrw{"wr"}
	div		$tmp4436 $tmp4431 $tmp4435 	%argrw{"wrr"}
	mul		___640_sum ___640_sum $tmp4436 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:260
# 		sum2 *= ((float)(1 << (n + 1)) / (float)((1 << (n + 2)) - 1));
	add		$tmp4437 ___640_n $const7 	%line{260} %argrw{"wrr"}
	shl		$tmp4438 $const7 $tmp4437 	%argrw{"wrr"}
	assign		$tmp4439 $tmp4438 	%argrw{"wr"}
	add		$tmp4440 ___640_n $const18 	%argrw{"wrr"}
	shl		$tmp4441 $const7 $tmp4440 	%argrw{"wrr"}
	sub		$tmp4442 $tmp4441 $const7 	%argrw{"wrr"}
	assign		$tmp4443 $tmp4442 	%argrw{"wr"}
	div		$tmp4444 $tmp4439 $tmp4443 	%argrw{"wrr"}
	mul		___643_sum2 ___643_sum2 $tmp4444 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:262
# 		return (1.0 - rmd) * sum + rmd * sum2;
	sub		$tmp4445 $const29 ___640_rmd 	%line{262} %argrw{"wrr"}
	mul		$tmp4446 $tmp4445 ___640_sum 	%argrw{"wrr"}
	mul		$tmp4447 ___640_rmd ___643_sum2 	%argrw{"wrr"}
	add		$tmp3166 $tmp4446 $tmp4447 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:265
# 		sum *= ((float)(1 << n) / (float)((1 << (n + 1)) - 1));
	shl		$tmp4448 $const7 ___640_n 	%line{265} %argrw{"wrr"}
	assign		$tmp4449 $tmp4448 	%argrw{"wr"}
	add		$tmp4450 ___640_n $const7 	%argrw{"wrr"}
	shl		$tmp4451 $const7 $tmp4450 	%argrw{"wrr"}
	sub		$tmp4452 $tmp4451 $const7 	%argrw{"wrr"}
	assign		$tmp4453 $tmp4452 	%argrw{"wr"}
	div		$tmp4454 $tmp4449 $tmp4453 	%argrw{"wrr"}
	mul		___640_sum ___640_sum $tmp4454 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:266
# 		return sum;
	assign		$tmp3166 ___640_sum 	%line{266} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_noise_texture.osl:40
# 		noise_turbulence(point(p[1], p[2], p[0]), basis, detail, hard));
	compref		$tmp4457 $tmp1 $const7 	%filename{"intern/cycles/kernel/shaders/node_noise_texture.osl"} %line{40} %argrw{"wrr"}
	compref		$tmp4458 $tmp1 $const18 	%argrw{"wrr"}
	compref		$tmp4459 $tmp1 $const3 	%argrw{"wrr"}
	point		$tmp4456 $tmp4457 $tmp4458 $tmp4459 	%argrw{"wrrr"}
	functioncall	$const48 10230 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:230
# 	return 0.0;
	assign		___640_fscale $const29 	%filename{"intern/cycles/kernel/shaders/node_texture.h"} %line{230} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:231
# }
	assign		___640_amp $const29 	%line{231} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:232
# 
	assign		___640_sum $const4 	%line{232} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:235
# float noise_basis_hard(point p, string basis, int hard)
	functioncall	$const50 7948 	%line{235} %argrw{"r"}
# intern/cycles/kernel/shaders/stdosl.h:142
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp4460 Detail $const49 	%filename{"intern/cycles/kernel/shaders/stdosl.h"} %line{142} %argrw{"wrr"}
	max		___640_octaves $tmp4460 $const4 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:236
# 				else if (d < da[2]) {
	assign		___640_n ___640_octaves 	%filename{"intern/cycles/kernel/shaders/node_texture.h"} %line{236} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:238
# 					da[2] = d;
	for		$tmp4461 7951 7952 9073 9075 	%line{238} %argrw{"r"}
	assign		___640_i $const3 	%argrw{"wr"}
	le		$tmp4461 ___640_i ___640_n 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:239
# 
	mul		$tmp4462 ___640_fscale $tmp4456 	%line{239} %argrw{"wrr"}
	functioncall	$const6 9065 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:173
# 	if (basis == "Perlin")
	eq		$tmp4463 Basis $const1 	%line{173} %argrw{"wrr"}
	if		$tmp4463 7969 7969 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 		return safe_noise(p, 1);
	functioncall	$const8 7968 	%line{174} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:154
# 	float f = 0.0;
	assign		___633_f $const4 	%line{154} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:157
# 	if (type == 0)
	eq		$tmp4464 $const7 $const3 	%line{157} %argrw{"wrr"}
	if		$tmp4464 7961 7962 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:158
# 		f = noise("perlin", p);
	noise		___633_f $const9 $tmp4462 	%line{158} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:162
# 		f = noise(p);
	noise		___633_f $tmp4462 	%line{162} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:165
# 	if (!isfinite(f))
	isfinite	$tmp4465 ___633_f 	%line{165} %argrw{"wr"}
	eq		$tmp4466 $tmp4465 $const3 	%argrw{"wrr"}
	if		$tmp4466 7967 7967 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:166
# 		return 0.5;
	assign		___642_t $const10 	%line{166} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:168
# 	return f;
	assign		___642_t ___633_f 	%line{168} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 		return safe_noise(p, 1);
	return	%line{174}
# intern/cycles/kernel/shaders/node_texture.h:175
# 	if (basis == "Voronoi F1")
	eq		$tmp4467 Basis $const11 	%line{175} %argrw{"wrr"}
	if		$tmp4467 8149 8149 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	functioncall	$const12 8148 	%line{176} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 8146 	%line{143} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:130
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 8146 	%line{130} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 8145 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp4470 $tmp4462 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp4469 $tmp4470 	%argrw{"wr"}
	assign		___608_xi $tmp4469 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp4472 $tmp4462 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp4471 $tmp4472 	%argrw{"wr"}
	assign		___608_yi $tmp4471 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp4474 $tmp4462 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp4473 $tmp4474 	%argrw{"wr"}
	assign		___608_zi $tmp4473 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp4476 7990 7992 8143 8145 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp4475 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp4476 ___608_xx $tmp4475 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp4478 7994 7996 8141 8143 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp4477 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp4478 ___608_yy $tmp4477 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp4480 7998 8000 8139 8141 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp4479 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp4480 ___608_zz $tmp4479 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp4481 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp4482 ___608_yy 	%argrw{"wr"}
	assign		$tmp4483 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp4481 $tmp4482 $tmp4483 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 8017 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp4486 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp4487 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp4488 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp4485 $tmp4486 $tmp4487 $tmp4488 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp4485 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp4490 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp4491 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp4492 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp4489 $tmp4490 $tmp4491 $tmp4492 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp4489 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp4484 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp4484 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp4493 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp4462 $tmp4493 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 8090 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp4494 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp4494 8025 8025 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp4495 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp4495 8029 8029 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp4496 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp4496 8040 8040 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp4498 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp4497 $tmp4498 	%argrw{"wr"}
	compref		$tmp4500 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4499 $tmp4500 	%argrw{"wr"}
	add		$tmp4501 $tmp4497 $tmp4499 	%argrw{"wrr"}
	compref		$tmp4503 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4502 $tmp4503 	%argrw{"wr"}
	add		___614_d $tmp4501 $tmp4502 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp4504 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp4504 8051 8051 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp4506 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp4505 $tmp4506 	%argrw{"wr"}
	compref		$tmp4509 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4508 $tmp4509 	%argrw{"wr"}
	compref		$tmp4511 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4510 $tmp4511 	%argrw{"wr"}
	max		$tmp4507 $tmp4508 $tmp4510 	%argrw{"wrr"}
	max		___614_d $tmp4505 $tmp4507 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp4512 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp4512 8065 8065 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp4515 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp4514 $tmp4515 	%argrw{"wr"}
	sqrt		$tmp4513 $tmp4514 	%argrw{"wr"}
	compref		$tmp4518 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4517 $tmp4518 	%argrw{"wr"}
	sqrt		$tmp4516 $tmp4517 	%argrw{"wr"}
	add		$tmp4519 $tmp4513 $tmp4516 	%argrw{"wrr"}
	compref		$tmp4522 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4521 $tmp4522 	%argrw{"wr"}
	sqrt		$tmp4520 $tmp4521 	%argrw{"wr"}
	add		___614_d $tmp4519 $tmp4520 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp4523 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp4523 8073 8073 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp4526 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp4527 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp4525 $tmp4526 $tmp4527 	%argrw{"wrr"}
	sqrt		$tmp4524 $tmp4525 	%argrw{"wr"}
	sqrt		___614_d $tmp4524 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp4528 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp4528 8089 8089 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp4531 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp4530 $tmp4531 	%argrw{"wr"}
	pow		$tmp4529 $tmp4530 $const4 	%argrw{"wrr"}
	compref		$tmp4534 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4533 $tmp4534 	%argrw{"wr"}
	pow		$tmp4532 $tmp4533 $const4 	%argrw{"wrr"}
	add		$tmp4535 $tmp4529 $tmp4532 	%argrw{"wrr"}
	compref		$tmp4538 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4537 $tmp4538 	%argrw{"wr"}
	pow		$tmp4536 $tmp4537 $const4 	%argrw{"wrr"}
	add		$tmp4539 $tmp4535 $tmp4536 	%argrw{"wrr"}
	div		$tmp4540 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp4539 $tmp4540 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp4542 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp4543 ___608_yy 	%argrw{"wr"}
	assign		$tmp4544 ___608_zz 	%argrw{"wr"}
	point		$tmp4541 $tmp4542 $tmp4543 $tmp4544 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp4541 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp4545 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp4546 ___614_d $tmp4545 	%argrw{"wrr"}
	if		$tmp4546 8112 8139 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp4547 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4547 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp4548 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp4548 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp4549 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp4549 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp4550 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4550 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp4551 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp4551 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp4552 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp4552 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp4553 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp4554 ___614_d $tmp4553 	%argrw{"wrr"}
	if		$tmp4554 8125 8139 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp4555 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4555 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp4556 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp4556 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp4557 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4557 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp4558 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp4558 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp4559 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp4560 ___614_d $tmp4559 	%argrw{"wrr"}
	if		$tmp4560 8134 8139 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp4561 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4561 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp4562 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4562 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp4563 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp4564 ___614_d $tmp4563 	%argrw{"wrr"}
	if		$tmp4564 8139 8139 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp4565 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp4566 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp4567 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp4468 ___619_da $const3 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp4568 $const13 $tmp4468 	%line{143} %argrw{"wrr"}
	sub		___642_t $tmp4568 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	return	%line{176}
# intern/cycles/kernel/shaders/node_texture.h:177
# 	if (basis == "Voronoi F2")
	eq		$tmp4569 Basis $const30 	%line{177} %argrw{"wrr"}
	if		$tmp4569 8329 8329 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	functioncall	$const31 8328 	%line{178} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const32 8326 	%line{144} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:131
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 8326 	%line{131} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 8325 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp4572 $tmp4462 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp4571 $tmp4572 	%argrw{"wr"}
	assign		___608_xi $tmp4571 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp4574 $tmp4462 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp4573 $tmp4574 	%argrw{"wr"}
	assign		___608_yi $tmp4573 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp4576 $tmp4462 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp4575 $tmp4576 	%argrw{"wr"}
	assign		___608_zi $tmp4575 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp4578 8170 8172 8323 8325 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp4577 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp4578 ___608_xx $tmp4577 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp4580 8174 8176 8321 8323 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp4579 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp4580 ___608_yy $tmp4579 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp4582 8178 8180 8319 8321 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp4581 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp4582 ___608_zz $tmp4581 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp4583 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp4584 ___608_yy 	%argrw{"wr"}
	assign		$tmp4585 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp4583 $tmp4584 $tmp4585 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 8197 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp4588 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp4589 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp4590 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp4587 $tmp4588 $tmp4589 $tmp4590 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp4587 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp4592 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp4593 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp4594 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp4591 $tmp4592 $tmp4593 $tmp4594 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp4591 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp4586 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp4586 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp4595 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp4462 $tmp4595 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 8270 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp4596 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp4596 8205 8205 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp4597 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp4597 8209 8209 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp4598 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp4598 8220 8220 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp4600 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp4599 $tmp4600 	%argrw{"wr"}
	compref		$tmp4602 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4601 $tmp4602 	%argrw{"wr"}
	add		$tmp4603 $tmp4599 $tmp4601 	%argrw{"wrr"}
	compref		$tmp4605 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4604 $tmp4605 	%argrw{"wr"}
	add		___614_d $tmp4603 $tmp4604 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp4606 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp4606 8231 8231 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp4608 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp4607 $tmp4608 	%argrw{"wr"}
	compref		$tmp4611 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4610 $tmp4611 	%argrw{"wr"}
	compref		$tmp4613 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4612 $tmp4613 	%argrw{"wr"}
	max		$tmp4609 $tmp4610 $tmp4612 	%argrw{"wrr"}
	max		___614_d $tmp4607 $tmp4609 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp4614 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp4614 8245 8245 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp4617 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp4616 $tmp4617 	%argrw{"wr"}
	sqrt		$tmp4615 $tmp4616 	%argrw{"wr"}
	compref		$tmp4620 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4619 $tmp4620 	%argrw{"wr"}
	sqrt		$tmp4618 $tmp4619 	%argrw{"wr"}
	add		$tmp4621 $tmp4615 $tmp4618 	%argrw{"wrr"}
	compref		$tmp4624 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4623 $tmp4624 	%argrw{"wr"}
	sqrt		$tmp4622 $tmp4623 	%argrw{"wr"}
	add		___614_d $tmp4621 $tmp4622 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp4625 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp4625 8253 8253 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp4628 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp4629 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp4627 $tmp4628 $tmp4629 	%argrw{"wrr"}
	sqrt		$tmp4626 $tmp4627 	%argrw{"wr"}
	sqrt		___614_d $tmp4626 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp4630 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp4630 8269 8269 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp4633 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp4632 $tmp4633 	%argrw{"wr"}
	pow		$tmp4631 $tmp4632 $const4 	%argrw{"wrr"}
	compref		$tmp4636 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4635 $tmp4636 	%argrw{"wr"}
	pow		$tmp4634 $tmp4635 $const4 	%argrw{"wrr"}
	add		$tmp4637 $tmp4631 $tmp4634 	%argrw{"wrr"}
	compref		$tmp4640 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4639 $tmp4640 	%argrw{"wr"}
	pow		$tmp4638 $tmp4639 $const4 	%argrw{"wrr"}
	add		$tmp4641 $tmp4637 $tmp4638 	%argrw{"wrr"}
	div		$tmp4642 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp4641 $tmp4642 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp4644 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp4645 ___608_yy 	%argrw{"wr"}
	assign		$tmp4646 ___608_zz 	%argrw{"wr"}
	point		$tmp4643 $tmp4644 $tmp4645 $tmp4646 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp4643 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp4647 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp4648 ___614_d $tmp4647 	%argrw{"wrr"}
	if		$tmp4648 8292 8319 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp4649 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4649 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp4650 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp4650 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp4651 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp4651 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp4652 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4652 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp4653 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp4653 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp4654 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp4654 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp4655 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp4656 ___614_d $tmp4655 	%argrw{"wrr"}
	if		$tmp4656 8305 8319 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp4657 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4657 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp4658 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp4658 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp4659 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4659 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp4660 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp4660 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp4661 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp4662 ___614_d $tmp4661 	%argrw{"wrr"}
	if		$tmp4662 8314 8319 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp4663 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4663 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp4664 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4664 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp4665 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp4666 ___614_d $tmp4665 	%argrw{"wrr"}
	if		$tmp4666 8319 8319 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp4667 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp4668 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp4669 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp4570 ___619_da $const7 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp4670 $const13 $tmp4570 	%line{144} %argrw{"wrr"}
	sub		___642_t $tmp4670 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	return	%line{178}
# intern/cycles/kernel/shaders/node_texture.h:179
# 	if (basis == "Voronoi F3")
	eq		$tmp4671 Basis $const33 	%line{179} %argrw{"wrr"}
	if		$tmp4671 8509 8509 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	functioncall	$const34 8508 	%line{180} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const35 8506 	%line{145} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:132
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 8506 	%line{132} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 8505 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp4674 $tmp4462 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp4673 $tmp4674 	%argrw{"wr"}
	assign		___608_xi $tmp4673 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp4676 $tmp4462 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp4675 $tmp4676 	%argrw{"wr"}
	assign		___608_yi $tmp4675 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp4678 $tmp4462 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp4677 $tmp4678 	%argrw{"wr"}
	assign		___608_zi $tmp4677 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp4680 8350 8352 8503 8505 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp4679 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp4680 ___608_xx $tmp4679 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp4682 8354 8356 8501 8503 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp4681 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp4682 ___608_yy $tmp4681 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp4684 8358 8360 8499 8501 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp4683 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp4684 ___608_zz $tmp4683 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp4685 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp4686 ___608_yy 	%argrw{"wr"}
	assign		$tmp4687 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp4685 $tmp4686 $tmp4687 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 8377 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp4690 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp4691 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp4692 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp4689 $tmp4690 $tmp4691 $tmp4692 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp4689 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp4694 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp4695 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp4696 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp4693 $tmp4694 $tmp4695 $tmp4696 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp4693 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp4688 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp4688 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp4697 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp4462 $tmp4697 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 8450 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp4698 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp4698 8385 8385 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp4699 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp4699 8389 8389 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp4700 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp4700 8400 8400 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp4702 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp4701 $tmp4702 	%argrw{"wr"}
	compref		$tmp4704 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4703 $tmp4704 	%argrw{"wr"}
	add		$tmp4705 $tmp4701 $tmp4703 	%argrw{"wrr"}
	compref		$tmp4707 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4706 $tmp4707 	%argrw{"wr"}
	add		___614_d $tmp4705 $tmp4706 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp4708 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp4708 8411 8411 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp4710 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp4709 $tmp4710 	%argrw{"wr"}
	compref		$tmp4713 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4712 $tmp4713 	%argrw{"wr"}
	compref		$tmp4715 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4714 $tmp4715 	%argrw{"wr"}
	max		$tmp4711 $tmp4712 $tmp4714 	%argrw{"wrr"}
	max		___614_d $tmp4709 $tmp4711 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp4716 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp4716 8425 8425 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp4719 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp4718 $tmp4719 	%argrw{"wr"}
	sqrt		$tmp4717 $tmp4718 	%argrw{"wr"}
	compref		$tmp4722 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4721 $tmp4722 	%argrw{"wr"}
	sqrt		$tmp4720 $tmp4721 	%argrw{"wr"}
	add		$tmp4723 $tmp4717 $tmp4720 	%argrw{"wrr"}
	compref		$tmp4726 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4725 $tmp4726 	%argrw{"wr"}
	sqrt		$tmp4724 $tmp4725 	%argrw{"wr"}
	add		___614_d $tmp4723 $tmp4724 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp4727 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp4727 8433 8433 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp4730 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp4731 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp4729 $tmp4730 $tmp4731 	%argrw{"wrr"}
	sqrt		$tmp4728 $tmp4729 	%argrw{"wr"}
	sqrt		___614_d $tmp4728 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp4732 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp4732 8449 8449 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp4735 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp4734 $tmp4735 	%argrw{"wr"}
	pow		$tmp4733 $tmp4734 $const4 	%argrw{"wrr"}
	compref		$tmp4738 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4737 $tmp4738 	%argrw{"wr"}
	pow		$tmp4736 $tmp4737 $const4 	%argrw{"wrr"}
	add		$tmp4739 $tmp4733 $tmp4736 	%argrw{"wrr"}
	compref		$tmp4742 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4741 $tmp4742 	%argrw{"wr"}
	pow		$tmp4740 $tmp4741 $const4 	%argrw{"wrr"}
	add		$tmp4743 $tmp4739 $tmp4740 	%argrw{"wrr"}
	div		$tmp4744 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp4743 $tmp4744 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp4746 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp4747 ___608_yy 	%argrw{"wr"}
	assign		$tmp4748 ___608_zz 	%argrw{"wr"}
	point		$tmp4745 $tmp4746 $tmp4747 $tmp4748 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp4745 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp4749 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp4750 ___614_d $tmp4749 	%argrw{"wrr"}
	if		$tmp4750 8472 8499 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp4751 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4751 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp4752 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp4752 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp4753 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp4753 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp4754 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4754 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp4755 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp4755 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp4756 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp4756 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp4757 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp4758 ___614_d $tmp4757 	%argrw{"wrr"}
	if		$tmp4758 8485 8499 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp4759 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4759 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp4760 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp4760 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp4761 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4761 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp4762 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp4762 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp4763 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp4764 ___614_d $tmp4763 	%argrw{"wrr"}
	if		$tmp4764 8494 8499 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp4765 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4765 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp4766 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4766 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp4767 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp4768 ___614_d $tmp4767 	%argrw{"wrr"}
	if		$tmp4768 8499 8499 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp4769 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp4770 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp4771 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp4672 ___619_da $const18 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp4772 $const13 $tmp4672 	%line{145} %argrw{"wrr"}
	sub		___642_t $tmp4772 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	return	%line{180}
# intern/cycles/kernel/shaders/node_texture.h:181
# 	if (basis == "Voronoi F4")
	eq		$tmp4773 Basis $const36 	%line{181} %argrw{"wrr"}
	if		$tmp4773 8689 8689 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	functioncall	$const37 8688 	%line{182} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const38 8686 	%line{146} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:133
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 8686 	%line{133} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 8685 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp4776 $tmp4462 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp4775 $tmp4776 	%argrw{"wr"}
	assign		___608_xi $tmp4775 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp4778 $tmp4462 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp4777 $tmp4778 	%argrw{"wr"}
	assign		___608_yi $tmp4777 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp4780 $tmp4462 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp4779 $tmp4780 	%argrw{"wr"}
	assign		___608_zi $tmp4779 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp4782 8530 8532 8683 8685 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp4781 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp4782 ___608_xx $tmp4781 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp4784 8534 8536 8681 8683 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp4783 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp4784 ___608_yy $tmp4783 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp4786 8538 8540 8679 8681 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp4785 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp4786 ___608_zz $tmp4785 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp4787 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp4788 ___608_yy 	%argrw{"wr"}
	assign		$tmp4789 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp4787 $tmp4788 $tmp4789 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 8557 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp4792 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp4793 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp4794 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp4791 $tmp4792 $tmp4793 $tmp4794 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp4791 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp4796 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp4797 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp4798 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp4795 $tmp4796 $tmp4797 $tmp4798 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp4795 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp4790 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp4790 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp4799 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp4462 $tmp4799 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 8630 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp4800 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp4800 8565 8565 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp4801 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp4801 8569 8569 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp4802 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp4802 8580 8580 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp4804 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp4803 $tmp4804 	%argrw{"wr"}
	compref		$tmp4806 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4805 $tmp4806 	%argrw{"wr"}
	add		$tmp4807 $tmp4803 $tmp4805 	%argrw{"wrr"}
	compref		$tmp4809 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4808 $tmp4809 	%argrw{"wr"}
	add		___614_d $tmp4807 $tmp4808 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp4810 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp4810 8591 8591 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp4812 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp4811 $tmp4812 	%argrw{"wr"}
	compref		$tmp4815 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4814 $tmp4815 	%argrw{"wr"}
	compref		$tmp4817 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4816 $tmp4817 	%argrw{"wr"}
	max		$tmp4813 $tmp4814 $tmp4816 	%argrw{"wrr"}
	max		___614_d $tmp4811 $tmp4813 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp4818 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp4818 8605 8605 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp4821 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp4820 $tmp4821 	%argrw{"wr"}
	sqrt		$tmp4819 $tmp4820 	%argrw{"wr"}
	compref		$tmp4824 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4823 $tmp4824 	%argrw{"wr"}
	sqrt		$tmp4822 $tmp4823 	%argrw{"wr"}
	add		$tmp4825 $tmp4819 $tmp4822 	%argrw{"wrr"}
	compref		$tmp4828 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4827 $tmp4828 	%argrw{"wr"}
	sqrt		$tmp4826 $tmp4827 	%argrw{"wr"}
	add		___614_d $tmp4825 $tmp4826 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp4829 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp4829 8613 8613 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp4832 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp4833 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp4831 $tmp4832 $tmp4833 	%argrw{"wrr"}
	sqrt		$tmp4830 $tmp4831 	%argrw{"wr"}
	sqrt		___614_d $tmp4830 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp4834 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp4834 8629 8629 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp4837 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp4836 $tmp4837 	%argrw{"wr"}
	pow		$tmp4835 $tmp4836 $const4 	%argrw{"wrr"}
	compref		$tmp4840 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4839 $tmp4840 	%argrw{"wr"}
	pow		$tmp4838 $tmp4839 $const4 	%argrw{"wrr"}
	add		$tmp4841 $tmp4835 $tmp4838 	%argrw{"wrr"}
	compref		$tmp4844 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4843 $tmp4844 	%argrw{"wr"}
	pow		$tmp4842 $tmp4843 $const4 	%argrw{"wrr"}
	add		$tmp4845 $tmp4841 $tmp4842 	%argrw{"wrr"}
	div		$tmp4846 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp4845 $tmp4846 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp4848 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp4849 ___608_yy 	%argrw{"wr"}
	assign		$tmp4850 ___608_zz 	%argrw{"wr"}
	point		$tmp4847 $tmp4848 $tmp4849 $tmp4850 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp4847 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp4851 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp4852 ___614_d $tmp4851 	%argrw{"wrr"}
	if		$tmp4852 8652 8679 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp4853 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4853 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp4854 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp4854 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp4855 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp4855 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp4856 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4856 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp4857 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp4857 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp4858 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp4858 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp4859 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp4860 ___614_d $tmp4859 	%argrw{"wrr"}
	if		$tmp4860 8665 8679 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp4861 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4861 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp4862 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp4862 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp4863 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4863 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp4864 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp4864 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp4865 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp4866 ___614_d $tmp4865 	%argrw{"wrr"}
	if		$tmp4866 8674 8679 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp4867 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp4867 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp4868 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp4868 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp4869 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp4870 ___614_d $tmp4869 	%argrw{"wrr"}
	if		$tmp4870 8679 8679 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp4871 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp4872 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp4873 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp4774 ___619_da $const20 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp4874 $const13 $tmp4774 	%line{146} %argrw{"wrr"}
	sub		___642_t $tmp4874 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	return	%line{182}
# intern/cycles/kernel/shaders/node_texture.h:183
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp4875 Basis $const39 	%line{183} %argrw{"wrr"}
	if		$tmp4875 8871 8871 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	functioncall	$const40 8870 	%line{184} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const41 8868 	%line{147} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 8868 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 8865 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp4878 $tmp4462 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp4877 $tmp4878 	%argrw{"wr"}
	assign		___608_xi $tmp4877 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp4880 $tmp4462 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp4879 $tmp4880 	%argrw{"wr"}
	assign		___608_yi $tmp4879 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp4882 $tmp4462 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp4881 $tmp4882 	%argrw{"wr"}
	assign		___608_zi $tmp4881 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp4884 8710 8712 8863 8865 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp4883 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp4884 ___608_xx $tmp4883 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp4886 8714 8716 8861 8863 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp4885 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp4886 ___608_yy $tmp4885 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp4888 8718 8720 8859 8861 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp4887 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp4888 ___608_zz $tmp4887 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp4889 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp4890 ___608_yy 	%argrw{"wr"}
	assign		$tmp4891 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp4889 $tmp4890 $tmp4891 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 8737 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp4894 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp4895 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp4896 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp4893 $tmp4894 $tmp4895 $tmp4896 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp4893 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp4898 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp4899 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp4900 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp4897 $tmp4898 $tmp4899 $tmp4900 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp4897 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp4892 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp4892 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp4901 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp4462 $tmp4901 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 8810 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp4902 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp4902 8745 8745 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp4903 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp4903 8749 8749 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp4904 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp4904 8760 8760 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp4906 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp4905 $tmp4906 	%argrw{"wr"}
	compref		$tmp4908 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4907 $tmp4908 	%argrw{"wr"}
	add		$tmp4909 $tmp4905 $tmp4907 	%argrw{"wrr"}
	compref		$tmp4911 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4910 $tmp4911 	%argrw{"wr"}
	add		___614_d $tmp4909 $tmp4910 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp4912 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp4912 8771 8771 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp4914 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp4913 $tmp4914 	%argrw{"wr"}
	compref		$tmp4917 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4916 $tmp4917 	%argrw{"wr"}
	compref		$tmp4919 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4918 $tmp4919 	%argrw{"wr"}
	max		$tmp4915 $tmp4916 $tmp4918 	%argrw{"wrr"}
	max		___614_d $tmp4913 $tmp4915 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp4920 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp4920 8785 8785 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp4923 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp4922 $tmp4923 	%argrw{"wr"}
	sqrt		$tmp4921 $tmp4922 	%argrw{"wr"}
	compref		$tmp4926 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4925 $tmp4926 	%argrw{"wr"}
	sqrt		$tmp4924 $tmp4925 	%argrw{"wr"}
	add		$tmp4927 $tmp4921 $tmp4924 	%argrw{"wrr"}
	compref		$tmp4930 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4929 $tmp4930 	%argrw{"wr"}
	sqrt		$tmp4928 $tmp4929 	%argrw{"wr"}
	add		___614_d $tmp4927 $tmp4928 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp4931 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp4931 8793 8793 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp4934 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp4935 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp4933 $tmp4934 $tmp4935 	%argrw{"wrr"}
	sqrt		$tmp4932 $tmp4933 	%argrw{"wr"}
	sqrt		___614_d $tmp4932 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp4936 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp4936 8809 8809 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp4939 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp4938 $tmp4939 	%argrw{"wr"}
	pow		$tmp4937 $tmp4938 $const4 	%argrw{"wrr"}
	compref		$tmp4942 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp4941 $tmp4942 	%argrw{"wr"}
	pow		$tmp4940 $tmp4941 $const4 	%argrw{"wrr"}
	add		$tmp4943 $tmp4937 $tmp4940 	%argrw{"wrr"}
	compref		$tmp4946 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp4945 $tmp4946 	%argrw{"wr"}
	pow		$tmp4944 $tmp4945 $const4 	%argrw{"wrr"}
	add		$tmp4947 $tmp4943 $tmp4944 	%argrw{"wrr"}
	div		$tmp4948 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp4947 $tmp4948 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp4950 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp4951 ___608_yy 	%argrw{"wr"}
	assign		$tmp4952 ___608_zz 	%argrw{"wr"}
	point		$tmp4949 $tmp4950 $tmp4951 $tmp4952 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp4949 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp4953 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp4954 ___614_d $tmp4953 	%argrw{"wrr"}
	if		$tmp4954 8832 8859 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp4955 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp4955 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp4956 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp4956 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp4957 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp4957 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp4958 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp4958 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp4959 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp4959 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp4960 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp4960 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp4961 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp4962 ___614_d $tmp4961 	%argrw{"wrr"}
	if		$tmp4962 8845 8859 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp4963 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp4963 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp4964 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp4964 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp4965 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp4965 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp4966 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp4966 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp4967 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp4968 ___614_d $tmp4967 	%argrw{"wrr"}
	if		$tmp4968 8854 8859 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp4969 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp4969 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp4970 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp4970 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp4971 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp4972 ___614_d $tmp4971 	%argrw{"wrr"}
	if		$tmp4972 8859 8859 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp4973 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp4974 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp4975 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp4976 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp4977 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp4876 $tmp4976 $tmp4977 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp4978 $const13 $tmp4876 	%line{147} %argrw{"wrr"}
	sub		___642_t $tmp4978 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	return	%line{184}
# intern/cycles/kernel/shaders/node_texture.h:185
# 	if (basis == "Voronoi Crackle")
	eq		$tmp4979 Basis $const43 	%line{185} %argrw{"wrr"}
	if		$tmp4979 9060 9060 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	functioncall	$const44 9059 	%line{186} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const45 9057 	%line{148} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const41 9051 	%line{139} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 9051 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 9048 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp4983 $tmp4462 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp4982 $tmp4983 	%argrw{"wr"}
	assign		___608_xi $tmp4982 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp4985 $tmp4462 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp4984 $tmp4985 	%argrw{"wr"}
	assign		___608_yi $tmp4984 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp4987 $tmp4462 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp4986 $tmp4987 	%argrw{"wr"}
	assign		___608_zi $tmp4986 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp4989 8893 8895 9046 9048 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp4988 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp4989 ___608_xx $tmp4988 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp4991 8897 8899 9044 9046 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp4990 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp4991 ___608_yy $tmp4990 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp4993 8901 8903 9042 9044 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp4992 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp4993 ___608_zz $tmp4992 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp4994 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp4995 ___608_yy 	%argrw{"wr"}
	assign		$tmp4996 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp4994 $tmp4995 $tmp4996 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 8920 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp4999 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp5000 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp5001 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp4998 $tmp4999 $tmp5000 $tmp5001 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp4998 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp5003 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp5004 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp5005 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp5002 $tmp5003 $tmp5004 $tmp5005 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp5002 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp4997 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp4997 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp5006 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp4462 $tmp5006 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 8993 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp5007 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp5007 8928 8928 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp5008 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp5008 8932 8932 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp5009 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp5009 8943 8943 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp5011 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp5010 $tmp5011 	%argrw{"wr"}
	compref		$tmp5013 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5012 $tmp5013 	%argrw{"wr"}
	add		$tmp5014 $tmp5010 $tmp5012 	%argrw{"wrr"}
	compref		$tmp5016 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5015 $tmp5016 	%argrw{"wr"}
	add		___614_d $tmp5014 $tmp5015 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp5017 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp5017 8954 8954 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp5019 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp5018 $tmp5019 	%argrw{"wr"}
	compref		$tmp5022 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5021 $tmp5022 	%argrw{"wr"}
	compref		$tmp5024 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5023 $tmp5024 	%argrw{"wr"}
	max		$tmp5020 $tmp5021 $tmp5023 	%argrw{"wrr"}
	max		___614_d $tmp5018 $tmp5020 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp5025 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp5025 8968 8968 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp5028 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp5027 $tmp5028 	%argrw{"wr"}
	sqrt		$tmp5026 $tmp5027 	%argrw{"wr"}
	compref		$tmp5031 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5030 $tmp5031 	%argrw{"wr"}
	sqrt		$tmp5029 $tmp5030 	%argrw{"wr"}
	add		$tmp5032 $tmp5026 $tmp5029 	%argrw{"wrr"}
	compref		$tmp5035 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5034 $tmp5035 	%argrw{"wr"}
	sqrt		$tmp5033 $tmp5034 	%argrw{"wr"}
	add		___614_d $tmp5032 $tmp5033 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp5036 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp5036 8976 8976 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp5039 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp5040 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp5038 $tmp5039 $tmp5040 	%argrw{"wrr"}
	sqrt		$tmp5037 $tmp5038 	%argrw{"wr"}
	sqrt		___614_d $tmp5037 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp5041 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp5041 8992 8992 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp5044 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp5043 $tmp5044 	%argrw{"wr"}
	pow		$tmp5042 $tmp5043 $const4 	%argrw{"wrr"}
	compref		$tmp5047 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5046 $tmp5047 	%argrw{"wr"}
	pow		$tmp5045 $tmp5046 $const4 	%argrw{"wrr"}
	add		$tmp5048 $tmp5042 $tmp5045 	%argrw{"wrr"}
	compref		$tmp5051 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5050 $tmp5051 	%argrw{"wr"}
	pow		$tmp5049 $tmp5050 $const4 	%argrw{"wrr"}
	add		$tmp5052 $tmp5048 $tmp5049 	%argrw{"wrr"}
	div		$tmp5053 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp5052 $tmp5053 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp5055 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp5056 ___608_yy 	%argrw{"wr"}
	assign		$tmp5057 ___608_zz 	%argrw{"wr"}
	point		$tmp5054 $tmp5055 $tmp5056 $tmp5057 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp5054 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp5058 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp5059 ___614_d $tmp5058 	%argrw{"wrr"}
	if		$tmp5059 9015 9042 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp5060 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp5060 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp5061 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp5061 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp5062 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp5062 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp5063 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp5063 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp5064 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp5064 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp5065 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp5065 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp5066 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp5067 ___614_d $tmp5066 	%argrw{"wrr"}
	if		$tmp5067 9028 9042 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp5068 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp5068 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp5069 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp5069 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp5070 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp5070 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp5071 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp5071 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp5072 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp5073 ___614_d $tmp5072 	%argrw{"wrr"}
	if		$tmp5073 9037 9042 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp5074 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp5074 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp5075 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp5075 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp5076 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp5077 ___614_d $tmp5076 	%argrw{"wrr"}
	if		$tmp5077 9042 9042 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp5078 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp5079 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp5080 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp5081 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp5082 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp4981 $tmp5081 $tmp5082 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___626_t $const46 $tmp4981 	%line{139} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:140
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp5083 ___626_t $const29 	%line{140} %argrw{"wrr"}
	if		$tmp5083 9055 9056 	%argrw{"r"}
	assign		$tmp4980 $const29 	%argrw{"wr"}
	assign		$tmp4980 ___626_t 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp5084 $const13 $tmp4980 	%line{148} %argrw{"wrr"}
	sub		___642_t $tmp5084 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	return	%line{186}
# intern/cycles/kernel/shaders/node_texture.h:187
# 	if (basis == "Cell Noise")
	eq		$tmp5085 Basis $const47 	%line{187} %argrw{"wrr"}
	if		$tmp5085 9064 9064 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:188
# 		return cellnoise(p);
	cellnoise	___642_t $tmp4462 	%line{188} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:190
# 	return 0.0;
	assign		___642_t $const4 	%line{190} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:241
# 		if (hard)
	if		___646_hard 9069 9069 	%line{241} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:242
# 			t = fabs(2.0 * t - 1.0);
	mul		$tmp5086 $const13 ___642_t 	%line{242} %argrw{"wrr"}
	sub		$tmp5087 $tmp5086 $const29 	%argrw{"wrr"}
	fabs		___642_t $tmp5087 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:244
# 		sum += t * amp;
	mul		$tmp5088 ___642_t ___640_amp 	%line{244} %argrw{"wrr"}
	add		___640_sum ___640_sum $tmp5088 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:245
# 		amp *= 0.5;
	mul		___640_amp ___640_amp $const10 	%line{245} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:246
# 		fscale *= 2.0;
	mul		___640_fscale ___640_fscale $const13 	%line{246} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:238
# 	for (i = 0; i <= n; i++) {
	assign		$tmp5089 ___640_i 	%line{238} %argrw{"wr"}
	add		___640_i ___640_i $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:249
# 	float rmd = octaves - floor(octaves);
	floor		$tmp5090 ___640_octaves 	%line{249} %argrw{"wr"}
	sub		___640_rmd ___640_octaves $tmp5090 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:251
# 	if (rmd != 0.0) {
	neq		$tmp5091 ___640_rmd $const4 	%line{251} %argrw{"wrr"}
	if		$tmp5091 10220 10230 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:252
# 		float t = noise_basis(fscale * p, basis);
	mul		$tmp5092 ___640_fscale $tmp4456 	%line{252} %argrw{"wrr"}
	functioncall	$const6 10192 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:173
# 	if (basis == "Perlin")
	eq		$tmp5093 Basis $const1 	%line{173} %argrw{"wrr"}
	if		$tmp5093 9096 9096 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 		return safe_noise(p, 1);
	functioncall	$const8 9095 	%line{174} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:154
# 	float f = 0.0;
	assign		___633_f $const4 	%line{154} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:157
# 	if (type == 0)
	eq		$tmp5094 $const7 $const3 	%line{157} %argrw{"wrr"}
	if		$tmp5094 9088 9089 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:158
# 		f = noise("perlin", p);
	noise		___633_f $const9 $tmp5092 	%line{158} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:162
# 		f = noise(p);
	noise		___633_f $tmp5092 	%line{162} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:165
# 	if (!isfinite(f))
	isfinite	$tmp5095 ___633_f 	%line{165} %argrw{"wr"}
	eq		$tmp5096 $tmp5095 $const3 	%argrw{"wrr"}
	if		$tmp5096 9094 9094 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:166
# 		return 0.5;
	assign		___643_t $const10 	%line{166} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:168
# 	return f;
	assign		___643_t ___633_f 	%line{168} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:174
# 		return safe_noise(p, 1);
	return	%line{174}
# intern/cycles/kernel/shaders/node_texture.h:175
# 	if (basis == "Voronoi F1")
	eq		$tmp5097 Basis $const11 	%line{175} %argrw{"wrr"}
	if		$tmp5097 9276 9276 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	functioncall	$const12 9275 	%line{176} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 9273 	%line{143} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:130
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 9273 	%line{130} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 9272 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp5100 $tmp5092 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp5099 $tmp5100 	%argrw{"wr"}
	assign		___608_xi $tmp5099 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp5102 $tmp5092 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp5101 $tmp5102 	%argrw{"wr"}
	assign		___608_yi $tmp5101 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp5104 $tmp5092 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp5103 $tmp5104 	%argrw{"wr"}
	assign		___608_zi $tmp5103 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp5106 9117 9119 9270 9272 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp5105 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp5106 ___608_xx $tmp5105 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp5108 9121 9123 9268 9270 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp5107 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp5108 ___608_yy $tmp5107 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp5110 9125 9127 9266 9268 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp5109 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp5110 ___608_zz $tmp5109 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp5111 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp5112 ___608_yy 	%argrw{"wr"}
	assign		$tmp5113 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp5111 $tmp5112 $tmp5113 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 9144 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp5116 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp5117 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp5118 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp5115 $tmp5116 $tmp5117 $tmp5118 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp5115 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp5120 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp5121 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp5122 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp5119 $tmp5120 $tmp5121 $tmp5122 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp5119 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp5114 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp5114 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp5123 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp5092 $tmp5123 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 9217 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp5124 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp5124 9152 9152 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp5125 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp5125 9156 9156 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp5126 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp5126 9167 9167 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp5128 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp5127 $tmp5128 	%argrw{"wr"}
	compref		$tmp5130 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5129 $tmp5130 	%argrw{"wr"}
	add		$tmp5131 $tmp5127 $tmp5129 	%argrw{"wrr"}
	compref		$tmp5133 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5132 $tmp5133 	%argrw{"wr"}
	add		___614_d $tmp5131 $tmp5132 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp5134 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp5134 9178 9178 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp5136 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp5135 $tmp5136 	%argrw{"wr"}
	compref		$tmp5139 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5138 $tmp5139 	%argrw{"wr"}
	compref		$tmp5141 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5140 $tmp5141 	%argrw{"wr"}
	max		$tmp5137 $tmp5138 $tmp5140 	%argrw{"wrr"}
	max		___614_d $tmp5135 $tmp5137 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp5142 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp5142 9192 9192 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp5145 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp5144 $tmp5145 	%argrw{"wr"}
	sqrt		$tmp5143 $tmp5144 	%argrw{"wr"}
	compref		$tmp5148 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5147 $tmp5148 	%argrw{"wr"}
	sqrt		$tmp5146 $tmp5147 	%argrw{"wr"}
	add		$tmp5149 $tmp5143 $tmp5146 	%argrw{"wrr"}
	compref		$tmp5152 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5151 $tmp5152 	%argrw{"wr"}
	sqrt		$tmp5150 $tmp5151 	%argrw{"wr"}
	add		___614_d $tmp5149 $tmp5150 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp5153 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp5153 9200 9200 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp5156 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp5157 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp5155 $tmp5156 $tmp5157 	%argrw{"wrr"}
	sqrt		$tmp5154 $tmp5155 	%argrw{"wr"}
	sqrt		___614_d $tmp5154 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp5158 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp5158 9216 9216 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp5161 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp5160 $tmp5161 	%argrw{"wr"}
	pow		$tmp5159 $tmp5160 $const4 	%argrw{"wrr"}
	compref		$tmp5164 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5163 $tmp5164 	%argrw{"wr"}
	pow		$tmp5162 $tmp5163 $const4 	%argrw{"wrr"}
	add		$tmp5165 $tmp5159 $tmp5162 	%argrw{"wrr"}
	compref		$tmp5168 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5167 $tmp5168 	%argrw{"wr"}
	pow		$tmp5166 $tmp5167 $const4 	%argrw{"wrr"}
	add		$tmp5169 $tmp5165 $tmp5166 	%argrw{"wrr"}
	div		$tmp5170 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp5169 $tmp5170 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp5172 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp5173 ___608_yy 	%argrw{"wr"}
	assign		$tmp5174 ___608_zz 	%argrw{"wr"}
	point		$tmp5171 $tmp5172 $tmp5173 $tmp5174 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp5171 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp5175 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp5176 ___614_d $tmp5175 	%argrw{"wrr"}
	if		$tmp5176 9239 9266 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp5177 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp5177 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp5178 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp5178 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp5179 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp5179 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp5180 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp5180 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp5181 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp5181 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp5182 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp5182 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp5183 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp5184 ___614_d $tmp5183 	%argrw{"wrr"}
	if		$tmp5184 9252 9266 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp5185 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp5185 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp5186 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp5186 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp5187 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp5187 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp5188 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp5188 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp5189 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp5190 ___614_d $tmp5189 	%argrw{"wrr"}
	if		$tmp5190 9261 9266 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp5191 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp5191 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp5192 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp5192 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp5193 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp5194 ___614_d $tmp5193 	%argrw{"wrr"}
	if		$tmp5194 9266 9266 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp5195 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp5196 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp5197 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp5098 ___619_da $const3 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:143
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp5198 $const13 $tmp5098 	%line{143} %argrw{"wrr"}
	sub		___643_t $tmp5198 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:176
# 		return voronoi_F1S(p);
	return	%line{176}
# intern/cycles/kernel/shaders/node_texture.h:177
# 	if (basis == "Voronoi F2")
	eq		$tmp5199 Basis $const30 	%line{177} %argrw{"wrr"}
	if		$tmp5199 9456 9456 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	functioncall	$const31 9455 	%line{178} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const32 9453 	%line{144} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:131
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 9453 	%line{131} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 9452 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp5202 $tmp5092 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp5201 $tmp5202 	%argrw{"wr"}
	assign		___608_xi $tmp5201 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp5204 $tmp5092 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp5203 $tmp5204 	%argrw{"wr"}
	assign		___608_yi $tmp5203 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp5206 $tmp5092 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp5205 $tmp5206 	%argrw{"wr"}
	assign		___608_zi $tmp5205 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp5208 9297 9299 9450 9452 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp5207 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp5208 ___608_xx $tmp5207 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp5210 9301 9303 9448 9450 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp5209 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp5210 ___608_yy $tmp5209 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp5212 9305 9307 9446 9448 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp5211 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp5212 ___608_zz $tmp5211 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp5213 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp5214 ___608_yy 	%argrw{"wr"}
	assign		$tmp5215 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp5213 $tmp5214 $tmp5215 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 9324 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp5218 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp5219 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp5220 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp5217 $tmp5218 $tmp5219 $tmp5220 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp5217 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp5222 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp5223 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp5224 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp5221 $tmp5222 $tmp5223 $tmp5224 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp5221 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp5216 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp5216 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp5225 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp5092 $tmp5225 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 9397 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp5226 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp5226 9332 9332 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp5227 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp5227 9336 9336 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp5228 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp5228 9347 9347 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp5230 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp5229 $tmp5230 	%argrw{"wr"}
	compref		$tmp5232 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5231 $tmp5232 	%argrw{"wr"}
	add		$tmp5233 $tmp5229 $tmp5231 	%argrw{"wrr"}
	compref		$tmp5235 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5234 $tmp5235 	%argrw{"wr"}
	add		___614_d $tmp5233 $tmp5234 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp5236 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp5236 9358 9358 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp5238 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp5237 $tmp5238 	%argrw{"wr"}
	compref		$tmp5241 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5240 $tmp5241 	%argrw{"wr"}
	compref		$tmp5243 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5242 $tmp5243 	%argrw{"wr"}
	max		$tmp5239 $tmp5240 $tmp5242 	%argrw{"wrr"}
	max		___614_d $tmp5237 $tmp5239 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp5244 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp5244 9372 9372 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp5247 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp5246 $tmp5247 	%argrw{"wr"}
	sqrt		$tmp5245 $tmp5246 	%argrw{"wr"}
	compref		$tmp5250 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5249 $tmp5250 	%argrw{"wr"}
	sqrt		$tmp5248 $tmp5249 	%argrw{"wr"}
	add		$tmp5251 $tmp5245 $tmp5248 	%argrw{"wrr"}
	compref		$tmp5254 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5253 $tmp5254 	%argrw{"wr"}
	sqrt		$tmp5252 $tmp5253 	%argrw{"wr"}
	add		___614_d $tmp5251 $tmp5252 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp5255 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp5255 9380 9380 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp5258 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp5259 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp5257 $tmp5258 $tmp5259 	%argrw{"wrr"}
	sqrt		$tmp5256 $tmp5257 	%argrw{"wr"}
	sqrt		___614_d $tmp5256 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp5260 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp5260 9396 9396 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp5263 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp5262 $tmp5263 	%argrw{"wr"}
	pow		$tmp5261 $tmp5262 $const4 	%argrw{"wrr"}
	compref		$tmp5266 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5265 $tmp5266 	%argrw{"wr"}
	pow		$tmp5264 $tmp5265 $const4 	%argrw{"wrr"}
	add		$tmp5267 $tmp5261 $tmp5264 	%argrw{"wrr"}
	compref		$tmp5270 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5269 $tmp5270 	%argrw{"wr"}
	pow		$tmp5268 $tmp5269 $const4 	%argrw{"wrr"}
	add		$tmp5271 $tmp5267 $tmp5268 	%argrw{"wrr"}
	div		$tmp5272 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp5271 $tmp5272 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp5274 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp5275 ___608_yy 	%argrw{"wr"}
	assign		$tmp5276 ___608_zz 	%argrw{"wr"}
	point		$tmp5273 $tmp5274 $tmp5275 $tmp5276 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp5273 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp5277 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp5278 ___614_d $tmp5277 	%argrw{"wrr"}
	if		$tmp5278 9419 9446 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp5279 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp5279 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp5280 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp5280 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp5281 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp5281 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp5282 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp5282 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp5283 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp5283 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp5284 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp5284 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp5285 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp5286 ___614_d $tmp5285 	%argrw{"wrr"}
	if		$tmp5286 9432 9446 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp5287 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp5287 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp5288 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp5288 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp5289 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp5289 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp5290 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp5290 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp5291 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp5292 ___614_d $tmp5291 	%argrw{"wrr"}
	if		$tmp5292 9441 9446 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp5293 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp5293 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp5294 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp5294 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp5295 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp5296 ___614_d $tmp5295 	%argrw{"wrr"}
	if		$tmp5296 9446 9446 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp5297 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp5298 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp5299 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp5200 ___619_da $const7 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:144
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp5300 $const13 $tmp5200 	%line{144} %argrw{"wrr"}
	sub		___643_t $tmp5300 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:178
# 		return voronoi_F2S(p);
	return	%line{178}
# intern/cycles/kernel/shaders/node_texture.h:179
# 	if (basis == "Voronoi F3")
	eq		$tmp5301 Basis $const33 	%line{179} %argrw{"wrr"}
	if		$tmp5301 9636 9636 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	functioncall	$const34 9635 	%line{180} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const35 9633 	%line{145} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:132
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 9633 	%line{132} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 9632 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp5304 $tmp5092 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp5303 $tmp5304 	%argrw{"wr"}
	assign		___608_xi $tmp5303 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp5306 $tmp5092 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp5305 $tmp5306 	%argrw{"wr"}
	assign		___608_yi $tmp5305 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp5308 $tmp5092 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp5307 $tmp5308 	%argrw{"wr"}
	assign		___608_zi $tmp5307 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp5310 9477 9479 9630 9632 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp5309 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp5310 ___608_xx $tmp5309 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp5312 9481 9483 9628 9630 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp5311 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp5312 ___608_yy $tmp5311 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp5314 9485 9487 9626 9628 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp5313 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp5314 ___608_zz $tmp5313 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp5315 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp5316 ___608_yy 	%argrw{"wr"}
	assign		$tmp5317 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp5315 $tmp5316 $tmp5317 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 9504 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp5320 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp5321 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp5322 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp5319 $tmp5320 $tmp5321 $tmp5322 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp5319 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp5324 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp5325 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp5326 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp5323 $tmp5324 $tmp5325 $tmp5326 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp5323 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp5318 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp5318 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp5327 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp5092 $tmp5327 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 9577 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp5328 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp5328 9512 9512 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp5329 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp5329 9516 9516 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp5330 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp5330 9527 9527 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp5332 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp5331 $tmp5332 	%argrw{"wr"}
	compref		$tmp5334 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5333 $tmp5334 	%argrw{"wr"}
	add		$tmp5335 $tmp5331 $tmp5333 	%argrw{"wrr"}
	compref		$tmp5337 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5336 $tmp5337 	%argrw{"wr"}
	add		___614_d $tmp5335 $tmp5336 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp5338 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp5338 9538 9538 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp5340 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp5339 $tmp5340 	%argrw{"wr"}
	compref		$tmp5343 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5342 $tmp5343 	%argrw{"wr"}
	compref		$tmp5345 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5344 $tmp5345 	%argrw{"wr"}
	max		$tmp5341 $tmp5342 $tmp5344 	%argrw{"wrr"}
	max		___614_d $tmp5339 $tmp5341 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp5346 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp5346 9552 9552 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp5349 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp5348 $tmp5349 	%argrw{"wr"}
	sqrt		$tmp5347 $tmp5348 	%argrw{"wr"}
	compref		$tmp5352 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5351 $tmp5352 	%argrw{"wr"}
	sqrt		$tmp5350 $tmp5351 	%argrw{"wr"}
	add		$tmp5353 $tmp5347 $tmp5350 	%argrw{"wrr"}
	compref		$tmp5356 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5355 $tmp5356 	%argrw{"wr"}
	sqrt		$tmp5354 $tmp5355 	%argrw{"wr"}
	add		___614_d $tmp5353 $tmp5354 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp5357 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp5357 9560 9560 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp5360 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp5361 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp5359 $tmp5360 $tmp5361 	%argrw{"wrr"}
	sqrt		$tmp5358 $tmp5359 	%argrw{"wr"}
	sqrt		___614_d $tmp5358 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp5362 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp5362 9576 9576 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp5365 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp5364 $tmp5365 	%argrw{"wr"}
	pow		$tmp5363 $tmp5364 $const4 	%argrw{"wrr"}
	compref		$tmp5368 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5367 $tmp5368 	%argrw{"wr"}
	pow		$tmp5366 $tmp5367 $const4 	%argrw{"wrr"}
	add		$tmp5369 $tmp5363 $tmp5366 	%argrw{"wrr"}
	compref		$tmp5372 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5371 $tmp5372 	%argrw{"wr"}
	pow		$tmp5370 $tmp5371 $const4 	%argrw{"wrr"}
	add		$tmp5373 $tmp5369 $tmp5370 	%argrw{"wrr"}
	div		$tmp5374 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp5373 $tmp5374 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp5376 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp5377 ___608_yy 	%argrw{"wr"}
	assign		$tmp5378 ___608_zz 	%argrw{"wr"}
	point		$tmp5375 $tmp5376 $tmp5377 $tmp5378 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp5375 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp5379 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp5380 ___614_d $tmp5379 	%argrw{"wrr"}
	if		$tmp5380 9599 9626 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp5381 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp5381 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp5382 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp5382 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp5383 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp5383 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp5384 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp5384 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp5385 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp5385 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp5386 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp5386 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp5387 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp5388 ___614_d $tmp5387 	%argrw{"wrr"}
	if		$tmp5388 9612 9626 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp5389 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp5389 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp5390 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp5390 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp5391 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp5391 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp5392 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp5392 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp5393 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp5394 ___614_d $tmp5393 	%argrw{"wrr"}
	if		$tmp5394 9621 9626 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp5395 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp5395 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp5396 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp5396 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp5397 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp5398 ___614_d $tmp5397 	%argrw{"wrr"}
	if		$tmp5398 9626 9626 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp5399 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp5400 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp5401 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp5302 ___619_da $const18 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:145
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp5402 $const13 $tmp5302 	%line{145} %argrw{"wrr"}
	sub		___643_t $tmp5402 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:180
# 		return voronoi_F3S(p);
	return	%line{180}
# intern/cycles/kernel/shaders/node_texture.h:181
# 	if (basis == "Voronoi F4")
	eq		$tmp5403 Basis $const36 	%line{181} %argrw{"wrr"}
	if		$tmp5403 9816 9816 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	functioncall	$const37 9815 	%line{182} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const38 9813 	%line{146} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:133
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 9813 	%line{133} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:115
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 9812 	%line{115} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp5406 $tmp5092 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp5405 $tmp5406 	%argrw{"wr"}
	assign		___608_xi $tmp5405 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp5408 $tmp5092 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp5407 $tmp5408 	%argrw{"wr"}
	assign		___608_yi $tmp5407 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp5410 $tmp5092 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp5409 $tmp5410 	%argrw{"wr"}
	assign		___608_zi $tmp5409 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___619_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___619_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___619_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___619_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp5412 9657 9659 9810 9812 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp5411 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp5412 ___608_xx $tmp5411 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp5414 9661 9663 9808 9810 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp5413 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp5414 ___608_yy $tmp5413 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp5416 9665 9667 9806 9808 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp5415 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp5416 ___608_zz $tmp5415 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp5417 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp5418 ___608_yy 	%argrw{"wr"}
	assign		$tmp5419 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp5417 $tmp5418 $tmp5419 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 9684 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp5422 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp5423 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp5424 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp5421 $tmp5422 $tmp5423 $tmp5424 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp5421 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp5426 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp5427 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp5428 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp5425 $tmp5426 $tmp5427 $tmp5428 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp5425 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp5420 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp5420 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp5429 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp5092 $tmp5429 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 9757 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp5430 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp5430 9692 9692 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp5431 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp5431 9696 9696 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp5432 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp5432 9707 9707 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp5434 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp5433 $tmp5434 	%argrw{"wr"}
	compref		$tmp5436 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5435 $tmp5436 	%argrw{"wr"}
	add		$tmp5437 $tmp5433 $tmp5435 	%argrw{"wrr"}
	compref		$tmp5439 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5438 $tmp5439 	%argrw{"wr"}
	add		___614_d $tmp5437 $tmp5438 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp5440 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp5440 9718 9718 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp5442 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp5441 $tmp5442 	%argrw{"wr"}
	compref		$tmp5445 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5444 $tmp5445 	%argrw{"wr"}
	compref		$tmp5447 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5446 $tmp5447 	%argrw{"wr"}
	max		$tmp5443 $tmp5444 $tmp5446 	%argrw{"wrr"}
	max		___614_d $tmp5441 $tmp5443 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp5448 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp5448 9732 9732 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp5451 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp5450 $tmp5451 	%argrw{"wr"}
	sqrt		$tmp5449 $tmp5450 	%argrw{"wr"}
	compref		$tmp5454 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5453 $tmp5454 	%argrw{"wr"}
	sqrt		$tmp5452 $tmp5453 	%argrw{"wr"}
	add		$tmp5455 $tmp5449 $tmp5452 	%argrw{"wrr"}
	compref		$tmp5458 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5457 $tmp5458 	%argrw{"wr"}
	sqrt		$tmp5456 $tmp5457 	%argrw{"wr"}
	add		___614_d $tmp5455 $tmp5456 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp5459 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp5459 9740 9740 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp5462 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp5463 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp5461 $tmp5462 $tmp5463 	%argrw{"wrr"}
	sqrt		$tmp5460 $tmp5461 	%argrw{"wr"}
	sqrt		___614_d $tmp5460 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp5464 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp5464 9756 9756 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp5467 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp5466 $tmp5467 	%argrw{"wr"}
	pow		$tmp5465 $tmp5466 $const4 	%argrw{"wrr"}
	compref		$tmp5470 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5469 $tmp5470 	%argrw{"wr"}
	pow		$tmp5468 $tmp5469 $const4 	%argrw{"wrr"}
	add		$tmp5471 $tmp5465 $tmp5468 	%argrw{"wrr"}
	compref		$tmp5474 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5473 $tmp5474 	%argrw{"wr"}
	pow		$tmp5472 $tmp5473 $const4 	%argrw{"wrr"}
	add		$tmp5475 $tmp5471 $tmp5472 	%argrw{"wrr"}
	div		$tmp5476 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp5475 $tmp5476 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp5478 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp5479 ___608_yy 	%argrw{"wr"}
	assign		$tmp5480 ___608_zz 	%argrw{"wr"}
	point		$tmp5477 $tmp5478 $tmp5479 $tmp5480 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp5477 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp5481 ___619_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp5482 ___614_d $tmp5481 	%argrw{"wrr"}
	if		$tmp5482 9779 9806 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp5483 ___619_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp5483 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp5484 ___619_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp5484 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp5485 ___619_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___619_da $const7 $tmp5485 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___619_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp5486 ___619_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp5486 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp5487 ___619_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp5487 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp5488 ___619_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___619_pa $const7 $tmp5488 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___619_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp5489 ___619_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp5490 ___614_d $tmp5489 	%argrw{"wrr"}
	if		$tmp5490 9792 9806 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp5491 ___619_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp5491 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp5492 ___619_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___619_da $const18 $tmp5492 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___619_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp5493 ___619_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp5493 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp5494 ___619_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___619_pa $const18 $tmp5494 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___619_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp5495 ___619_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp5496 ___614_d $tmp5495 	%argrw{"wrr"}
	if		$tmp5496 9801 9806 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp5497 ___619_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___619_da $const20 $tmp5497 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___619_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp5498 ___619_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___619_pa $const20 $tmp5498 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___619_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp5499 ___619_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp5500 ___614_d $tmp5499 	%argrw{"wrr"}
	if		$tmp5500 9806 9806 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___619_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___619_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp5501 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp5502 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp5503 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:117
# 	return da[n];
	aref		$tmp5404 ___619_da $const20 	%line{117} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:146
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp5504 $const13 $tmp5404 	%line{146} %argrw{"wrr"}
	sub		___643_t $tmp5504 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:182
# 		return voronoi_F4S(p);
	return	%line{182}
# intern/cycles/kernel/shaders/node_texture.h:183
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp5505 Basis $const39 	%line{183} %argrw{"wrr"}
	if		$tmp5505 9998 9998 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	functioncall	$const40 9997 	%line{184} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const41 9995 	%line{147} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 9995 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 9992 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp5508 $tmp5092 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp5507 $tmp5508 	%argrw{"wr"}
	assign		___608_xi $tmp5507 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp5510 $tmp5092 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp5509 $tmp5510 	%argrw{"wr"}
	assign		___608_yi $tmp5509 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp5512 $tmp5092 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp5511 $tmp5512 	%argrw{"wr"}
	assign		___608_zi $tmp5511 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp5514 9837 9839 9990 9992 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp5513 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp5514 ___608_xx $tmp5513 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp5516 9841 9843 9988 9990 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp5515 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp5516 ___608_yy $tmp5515 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp5518 9845 9847 9986 9988 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp5517 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp5518 ___608_zz $tmp5517 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp5519 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp5520 ___608_yy 	%argrw{"wr"}
	assign		$tmp5521 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp5519 $tmp5520 $tmp5521 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 9864 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp5524 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp5525 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp5526 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp5523 $tmp5524 $tmp5525 $tmp5526 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp5523 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp5528 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp5529 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp5530 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp5527 $tmp5528 $tmp5529 $tmp5530 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp5527 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp5522 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp5522 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp5531 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp5092 $tmp5531 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 9937 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp5532 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp5532 9872 9872 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp5533 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp5533 9876 9876 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp5534 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp5534 9887 9887 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp5536 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp5535 $tmp5536 	%argrw{"wr"}
	compref		$tmp5538 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5537 $tmp5538 	%argrw{"wr"}
	add		$tmp5539 $tmp5535 $tmp5537 	%argrw{"wrr"}
	compref		$tmp5541 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5540 $tmp5541 	%argrw{"wr"}
	add		___614_d $tmp5539 $tmp5540 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp5542 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp5542 9898 9898 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp5544 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp5543 $tmp5544 	%argrw{"wr"}
	compref		$tmp5547 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5546 $tmp5547 	%argrw{"wr"}
	compref		$tmp5549 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5548 $tmp5549 	%argrw{"wr"}
	max		$tmp5545 $tmp5546 $tmp5548 	%argrw{"wrr"}
	max		___614_d $tmp5543 $tmp5545 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp5550 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp5550 9912 9912 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp5553 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp5552 $tmp5553 	%argrw{"wr"}
	sqrt		$tmp5551 $tmp5552 	%argrw{"wr"}
	compref		$tmp5556 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5555 $tmp5556 	%argrw{"wr"}
	sqrt		$tmp5554 $tmp5555 	%argrw{"wr"}
	add		$tmp5557 $tmp5551 $tmp5554 	%argrw{"wrr"}
	compref		$tmp5560 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5559 $tmp5560 	%argrw{"wr"}
	sqrt		$tmp5558 $tmp5559 	%argrw{"wr"}
	add		___614_d $tmp5557 $tmp5558 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp5561 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp5561 9920 9920 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp5564 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp5565 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp5563 $tmp5564 $tmp5565 	%argrw{"wrr"}
	sqrt		$tmp5562 $tmp5563 	%argrw{"wr"}
	sqrt		___614_d $tmp5562 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp5566 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp5566 9936 9936 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp5569 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp5568 $tmp5569 	%argrw{"wr"}
	pow		$tmp5567 $tmp5568 $const4 	%argrw{"wrr"}
	compref		$tmp5572 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5571 $tmp5572 	%argrw{"wr"}
	pow		$tmp5570 $tmp5571 $const4 	%argrw{"wrr"}
	add		$tmp5573 $tmp5567 $tmp5570 	%argrw{"wrr"}
	compref		$tmp5576 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5575 $tmp5576 	%argrw{"wr"}
	pow		$tmp5574 $tmp5575 $const4 	%argrw{"wrr"}
	add		$tmp5577 $tmp5573 $tmp5574 	%argrw{"wrr"}
	div		$tmp5578 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp5577 $tmp5578 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp5580 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp5581 ___608_yy 	%argrw{"wr"}
	assign		$tmp5582 ___608_zz 	%argrw{"wr"}
	point		$tmp5579 $tmp5580 $tmp5581 $tmp5582 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp5579 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp5583 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp5584 ___614_d $tmp5583 	%argrw{"wrr"}
	if		$tmp5584 9959 9986 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp5585 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp5585 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp5586 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp5586 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp5587 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp5587 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp5588 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp5588 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp5589 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp5589 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp5590 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp5590 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp5591 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp5592 ___614_d $tmp5591 	%argrw{"wrr"}
	if		$tmp5592 9972 9986 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp5593 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp5593 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp5594 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp5594 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp5595 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp5595 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp5596 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp5596 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp5597 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp5598 ___614_d $tmp5597 	%argrw{"wrr"}
	if		$tmp5598 9981 9986 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp5599 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp5599 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp5600 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp5600 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp5601 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp5602 ___614_d $tmp5601 	%argrw{"wrr"}
	if		$tmp5602 9986 9986 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp5603 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp5604 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp5605 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp5606 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp5607 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp5506 $tmp5606 $tmp5607 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:147
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp5608 $const13 $tmp5506 	%line{147} %argrw{"wrr"}
	sub		___643_t $tmp5608 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:184
# 		return voronoi_F1F2S(p);
	return	%line{184}
# intern/cycles/kernel/shaders/node_texture.h:185
# 	if (basis == "Voronoi Crackle")
	eq		$tmp5609 Basis $const43 	%line{185} %argrw{"wrr"}
	if		$tmp5609 10187 10187 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	functioncall	$const44 10186 	%line{186} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const45 10184 	%line{148} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const41 10178 	%line{139} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:134
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 10178 	%line{134} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:125
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 10175 	%line{125} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:55
# 	xi = (int)floor(p[0]);
	compref		$tmp5613 $tmp5092 $const3 	%line{55} %argrw{"wrr"}
	floor		$tmp5612 $tmp5613 	%argrw{"wr"}
	assign		___608_xi $tmp5612 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:56
# 	yi = (int)floor(p[1]);
	compref		$tmp5615 $tmp5092 $const7 	%line{56} %argrw{"wrr"}
	floor		$tmp5614 $tmp5615 	%argrw{"wr"}
	assign		___608_yi $tmp5614 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:57
# 	zi = (int)floor(p[2]);
	compref		$tmp5617 $tmp5092 $const18 	%line{57} %argrw{"wrr"}
	floor		$tmp5616 $tmp5617 	%argrw{"wr"}
	assign		___608_zi $tmp5616 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:59
# 	da[0] = 1e10;
	aassign		___620_da $const3 $const19 	%line{59} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:60
# 	da[1] = 1e10;
	aassign		___620_da $const7 $const19 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:61
# 	da[2] = 1e10;
	aassign		___620_da $const18 $const19 	%line{61} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:62
# 	da[3] = 1e10;
	aassign		___620_da $const20 $const19 	%line{62} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp5619 10020 10022 10173 10175 	%line{64} %argrw{"r"}
	sub		___608_xx ___608_xi $const7 	%argrw{"wrr"}
	add		$tmp5618 ___608_xi $const7 	%argrw{"wrr"}
	le		$tmp5619 ___608_xx $tmp5618 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp5621 10024 10026 10171 10173 	%line{65} %argrw{"r"}
	sub		___608_yy ___608_yi $const7 	%argrw{"wrr"}
	add		$tmp5620 ___608_yi $const7 	%argrw{"wrr"}
	le		$tmp5621 ___608_yy $tmp5620 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp5623 10028 10030 10169 10171 	%line{66} %argrw{"r"}
	sub		___608_zz ___608_zi $const7 	%argrw{"wrr"}
	add		$tmp5622 ___608_zi $const7 	%argrw{"wrr"}
	le		$tmp5623 ___608_zz $tmp5622 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:67
# 				point ip = point(xx, yy, zz);
	assign		$tmp5624 ___608_xx 	%line{67} %argrw{"wr"}
	assign		$tmp5625 ___608_yy 	%argrw{"wr"}
	assign		$tmp5626 ___608_zz 	%argrw{"wr"}
	point		___614_ip $tmp5624 $tmp5625 $tmp5626 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 10047 	%line{68} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:43
# 	float r = cellnoise(p);
	cellnoise	___607_r ___614_ip 	%line{43} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:44
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp5629 ___614_ip $const7 	%line{44} %argrw{"wrr"}
	compref		$tmp5630 ___614_ip $const3 	%argrw{"wrr"}
	compref		$tmp5631 ___614_ip $const18 	%argrw{"wrr"}
	point		$tmp5628 $tmp5629 $tmp5630 $tmp5631 	%argrw{"wrrr"}
	cellnoise	___607_g $tmp5628 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:45
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp5633 ___614_ip $const7 	%line{45} %argrw{"wrr"}
	compref		$tmp5634 ___614_ip $const18 	%argrw{"wrr"}
	compref		$tmp5635 ___614_ip $const3 	%argrw{"wrr"}
	point		$tmp5632 $tmp5633 $tmp5634 $tmp5635 	%argrw{"wrrr"}
	cellnoise	___607_b $tmp5632 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:47
# 	return color(r, g, b);
	color		$tmp5627 ___607_r ___607_g ___607_b 	%line{47} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_texture.h:68
# 				point vp = (point)cellnoise_color(ip);
	assign		___614_vp $tmp5627 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:69
# 				point pd = p - (vp + ip);
	add		$tmp5636 ___614_vp ___614_ip 	%line{69} %argrw{"wrr"}
	sub		___614_pd $tmp5092 $tmp5636 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:70
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 10120 	%line{70} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:21
# 	if (distance_metric == "Distance Squared")
	eq		$tmp5637 $const16 $const16 	%line{21} %argrw{"wrr"}
	if		$tmp5637 10055 10055 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:22
# 		return dot(d, d);
	dot		___614_d ___614_pd ___614_pd 	%line{22} %argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:23
# 	if (distance_metric == "Actual Distance")
	eq		$tmp5638 $const16 $const23 	%line{23} %argrw{"wrr"}
	if		$tmp5638 10059 10059 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:24
# 		return length(d);
	length		___614_d ___614_pd 	%line{24} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:25
# 	if (distance_metric == "Manhattan")
	eq		$tmp5639 $const16 $const24 	%line{25} %argrw{"wrr"}
	if		$tmp5639 10070 10070 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:26
# 		return fabs(d[0]) + fabs(d[1]) + fabs(d[2]);
	compref		$tmp5641 ___614_pd $const3 	%line{26} %argrw{"wrr"}
	fabs		$tmp5640 $tmp5641 	%argrw{"wr"}
	compref		$tmp5643 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5642 $tmp5643 	%argrw{"wr"}
	add		$tmp5644 $tmp5640 $tmp5642 	%argrw{"wrr"}
	compref		$tmp5646 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5645 $tmp5646 	%argrw{"wr"}
	add		___614_d $tmp5644 $tmp5645 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:27
# 	if (distance_metric == "Chebychev")
	eq		$tmp5647 $const16 $const25 	%line{27} %argrw{"wrr"}
	if		$tmp5647 10081 10081 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:28
# 		return max(fabs(d[0]), max(fabs(d[1]), fabs(d[2])));
	compref		$tmp5649 ___614_pd $const3 	%line{28} %argrw{"wrr"}
	fabs		$tmp5648 $tmp5649 	%argrw{"wr"}
	compref		$tmp5652 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5651 $tmp5652 	%argrw{"wr"}
	compref		$tmp5654 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5653 $tmp5654 	%argrw{"wr"}
	max		$tmp5650 $tmp5651 $tmp5653 	%argrw{"wrr"}
	max		___614_d $tmp5648 $tmp5650 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:29
# 	if (distance_metric == "Minkovsky 1/2")
	eq		$tmp5655 $const16 $const26 	%line{29} %argrw{"wrr"}
	if		$tmp5655 10095 10095 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:30
# 		return sqrt(fabs(d[0])) + sqrt(fabs(d[1])) + sqrt(fabs(d[1]));
	compref		$tmp5658 ___614_pd $const3 	%line{30} %argrw{"wrr"}
	fabs		$tmp5657 $tmp5658 	%argrw{"wr"}
	sqrt		$tmp5656 $tmp5657 	%argrw{"wr"}
	compref		$tmp5661 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5660 $tmp5661 	%argrw{"wr"}
	sqrt		$tmp5659 $tmp5660 	%argrw{"wr"}
	add		$tmp5662 $tmp5656 $tmp5659 	%argrw{"wrr"}
	compref		$tmp5665 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5664 $tmp5665 	%argrw{"wr"}
	sqrt		$tmp5663 $tmp5664 	%argrw{"wr"}
	add		___614_d $tmp5662 $tmp5663 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:31
# 	if (distance_metric == "Minkovsky 4")
	eq		$tmp5666 $const16 $const27 	%line{31} %argrw{"wrr"}
	if		$tmp5666 10103 10103 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:32
# 		return sqrt(sqrt(dot(d * d, d * d)));
	mul		$tmp5669 ___614_pd ___614_pd 	%line{32} %argrw{"wrr"}
	mul		$tmp5670 ___614_pd ___614_pd 	%argrw{"wrr"}
	dot		$tmp5668 $tmp5669 $tmp5670 	%argrw{"wrr"}
	sqrt		$tmp5667 $tmp5668 	%argrw{"wr"}
	sqrt		___614_d $tmp5667 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:33
# 	if (distance_metric == "Minkovsky")
	eq		$tmp5671 $const16 $const28 	%line{33} %argrw{"wrr"}
	if		$tmp5671 10119 10119 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:34
# 		return pow(pow(fabs(d[0]), e) + pow(fabs(d[1]), e) + pow(fabs(d[2]), e), 1.0 / e);
	compref		$tmp5674 ___614_pd $const3 	%line{34} %argrw{"wrr"}
	fabs		$tmp5673 $tmp5674 	%argrw{"wr"}
	pow		$tmp5672 $tmp5673 $const4 	%argrw{"wrr"}
	compref		$tmp5677 ___614_pd $const7 	%argrw{"wrr"}
	fabs		$tmp5676 $tmp5677 	%argrw{"wr"}
	pow		$tmp5675 $tmp5676 $const4 	%argrw{"wrr"}
	add		$tmp5678 $tmp5672 $tmp5675 	%argrw{"wrr"}
	compref		$tmp5681 ___614_pd $const18 	%argrw{"wrr"}
	fabs		$tmp5680 $tmp5681 	%argrw{"wr"}
	pow		$tmp5679 $tmp5680 $const4 	%argrw{"wrr"}
	add		$tmp5682 $tmp5678 $tmp5679 	%argrw{"wrr"}
	div		$tmp5683 $const29 $const4 	%argrw{"wrr"}
	pow		___614_d $tmp5682 $tmp5683 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:36
# 	return 0.0;
	assign		___614_d $const4 	%line{36} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:72
# 				vp += point(xx, yy, zz);
	assign		$tmp5685 ___608_xx 	%line{72} %argrw{"wr"}
	assign		$tmp5686 ___608_yy 	%argrw{"wr"}
	assign		$tmp5687 ___608_zz 	%argrw{"wr"}
	point		$tmp5684 $tmp5685 $tmp5686 $tmp5687 	%argrw{"wrrr"}
	add		___614_vp ___614_vp $tmp5684 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:74
# 				if (d < da[0]) {
	aref		$tmp5688 ___620_da $const3 	%line{74} %argrw{"wrr"}
	lt		$tmp5689 ___614_d $tmp5688 	%argrw{"wrr"}
	if		$tmp5689 10142 10169 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:75
# 					da[3] = da[2];
	aref		$tmp5690 ___620_da $const18 	%line{75} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp5690 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:76
# 					da[2] = da[1];
	aref		$tmp5691 ___620_da $const7 	%line{76} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp5691 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:77
# 					da[1] = da[0];
	aref		$tmp5692 ___620_da $const3 	%line{77} %argrw{"wrr"}
	aassign		___620_da $const7 $tmp5692 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:78
# 					da[0] = d;
	aassign		___620_da $const3 ___614_d 	%line{78} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:80
# 					pa[3] = pa[2];
	aref		$tmp5693 ___620_pa $const18 	%line{80} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp5693 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[2] = pa[1];
	aref		$tmp5694 ___620_pa $const7 	%line{81} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp5694 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:82
# 					pa[1] = pa[0];
	aref		$tmp5695 ___620_pa $const3 	%line{82} %argrw{"wrr"}
	aassign		___620_pa $const7 $tmp5695 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:83
# 					pa[0] = vp;
	aassign		___620_pa $const3 ___614_vp 	%line{83} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:85
# 				else if (d < da[1]) {
	aref		$tmp5696 ___620_da $const7 	%line{85} %argrw{"wrr"}
	lt		$tmp5697 ___614_d $tmp5696 	%argrw{"wrr"}
	if		$tmp5697 10155 10169 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:86
# 					da[3] = da[2];
	aref		$tmp5698 ___620_da $const18 	%line{86} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp5698 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:87
# 					da[2] = da[1];
	aref		$tmp5699 ___620_da $const7 	%line{87} %argrw{"wrr"}
	aassign		___620_da $const18 $tmp5699 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:88
# 					da[1] = d;
	aassign		___620_da $const7 ___614_d 	%line{88} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:90
# 					pa[3] = pa[2];
	aref		$tmp5700 ___620_pa $const18 	%line{90} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp5700 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:91
# 					pa[2] = pa[1];
	aref		$tmp5701 ___620_pa $const7 	%line{91} %argrw{"wrr"}
	aassign		___620_pa $const18 $tmp5701 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:92
# 					pa[1] = vp;
	aassign		___620_pa $const7 ___614_vp 	%line{92} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:94
# 				else if (d < da[2]) {
	aref		$tmp5702 ___620_da $const18 	%line{94} %argrw{"wrr"}
	lt		$tmp5703 ___614_d $tmp5702 	%argrw{"wrr"}
	if		$tmp5703 10164 10169 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:95
# 					da[3] = da[2];
	aref		$tmp5704 ___620_da $const18 	%line{95} %argrw{"wrr"}
	aassign		___620_da $const20 $tmp5704 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:96
# 					da[2] = d;
	aassign		___620_da $const18 ___614_d 	%line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:98
# 					pa[3] = pa[2];
	aref		$tmp5705 ___620_pa $const18 	%line{98} %argrw{"wrr"}
	aassign		___620_pa $const20 $tmp5705 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:99
# 					pa[2] = vp;
	aassign		___620_pa $const18 ___614_vp 	%line{99} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:101
# 				else if (d < da[3]) {
	aref		$tmp5706 ___620_da $const20 	%line{101} %argrw{"wrr"}
	lt		$tmp5707 ___614_d $tmp5706 	%argrw{"wrr"}
	if		$tmp5707 10169 10169 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:102
# 					da[3] = d;
	aassign		___620_da $const20 ___614_d 	%line{102} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:103
# 					pa[3] = vp;
	aassign		___620_pa $const20 ___614_vp 	%line{103} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:66
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp5708 ___608_zz 	%line{66} %argrw{"wr"}
	add		___608_zz ___608_zz $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:65
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp5709 ___608_yy 	%line{65} %argrw{"wr"}
	add		___608_yy ___608_yy $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:64
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp5710 ___608_xx 	%line{64} %argrw{"wr"}
	add		___608_xx ___608_xx $const7 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:127
# 	return da[n2] - da[n1];
	aref		$tmp5711 ___620_da $const7 	%line{127} %argrw{"wrr"}
	aref		$tmp5712 ___620_da $const3 	%argrw{"wrr"}
	sub		$tmp5611 $tmp5711 $tmp5712 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:139
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___626_t $const46 $tmp5611 	%line{139} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:140
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp5713 ___626_t $const29 	%line{140} %argrw{"wrr"}
	if		$tmp5713 10182 10183 	%argrw{"r"}
	assign		$tmp5610 $const29 	%argrw{"wr"}
	assign		$tmp5610 ___626_t 	%argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:148
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp5714 $const13 $tmp5610 	%line{148} %argrw{"wrr"}
	sub		___643_t $tmp5714 $const29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:186
# 		return voronoi_CrS(p);
	return	%line{186}
# intern/cycles/kernel/shaders/node_texture.h:187
# 	if (basis == "Cell Noise")
	eq		$tmp5715 Basis $const47 	%line{187} %argrw{"wrr"}
	if		$tmp5715 10191 10191 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:188
# 		return cellnoise(p);
	cellnoise	___643_t $tmp5092 	%line{188} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:190
# 	return 0.0;
	assign		___643_t $const4 	%line{190} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:254
# 		if (hard)
	if		___646_hard 10196 10196 	%line{254} %argrw{"r"}
# intern/cycles/kernel/shaders/node_texture.h:255
# 			t = fabs(2.0 * t - 1.0);
	mul		$tmp5716 $const13 ___643_t 	%line{255} %argrw{"wrr"}
	sub		$tmp5717 $tmp5716 $const29 	%argrw{"wrr"}
	fabs		___643_t $tmp5717 	%argrw{"wr"}
# intern/cycles/kernel/shaders/node_texture.h:257
# 		float sum2 = sum + t * amp;
	mul		$tmp5718 ___643_t ___640_amp 	%line{257} %argrw{"wrr"}
	add		___643_sum2 ___640_sum $tmp5718 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:259
# 		sum *= ((float)(1 << n) / (float)((1 << (n + 1)) - 1));
	shl		$tmp5719 $const7 ___640_n 	%line{259} %argrw{"wrr"}
	assign		$tmp5720 $tmp5719 	%argrw{"wr"}
	add		$tmp5721 ___640_n $const7 	%argrw{"wrr"}
	shl		$tmp5722 $const7 $tmp5721 	%argrw{"wrr"}
	sub		$tmp5723 $tmp5722 $const7 	%argrw{"wrr"}
	assign		$tmp5724 $tmp5723 	%argrw{"wr"}
	div		$tmp5725 $tmp5720 $tmp5724 	%argrw{"wrr"}
	mul		___640_sum ___640_sum $tmp5725 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:260
# 		sum2 *= ((float)(1 << (n + 1)) / (float)((1 << (n + 2)) - 1));
	add		$tmp5726 ___640_n $const7 	%line{260} %argrw{"wrr"}
	shl		$tmp5727 $const7 $tmp5726 	%argrw{"wrr"}
	assign		$tmp5728 $tmp5727 	%argrw{"wr"}
	add		$tmp5729 ___640_n $const18 	%argrw{"wrr"}
	shl		$tmp5730 $const7 $tmp5729 	%argrw{"wrr"}
	sub		$tmp5731 $tmp5730 $const7 	%argrw{"wrr"}
	assign		$tmp5732 $tmp5731 	%argrw{"wr"}
	div		$tmp5733 $tmp5728 $tmp5732 	%argrw{"wrr"}
	mul		___643_sum2 ___643_sum2 $tmp5733 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:262
# 		return (1.0 - rmd) * sum + rmd * sum2;
	sub		$tmp5734 $const29 ___640_rmd 	%line{262} %argrw{"wrr"}
	mul		$tmp5735 $tmp5734 ___640_sum 	%argrw{"wrr"}
	mul		$tmp5736 ___640_rmd ___643_sum2 	%argrw{"wrr"}
	add		$tmp4455 $tmp5735 $tmp5736 	%argrw{"wrr"}
	return
# intern/cycles/kernel/shaders/node_texture.h:265
# 		sum *= ((float)(1 << n) / (float)((1 << (n + 1)) - 1));
	shl		$tmp5737 $const7 ___640_n 	%line{265} %argrw{"wrr"}
	assign		$tmp5738 $tmp5737 	%argrw{"wr"}
	add		$tmp5739 ___640_n $const7 	%argrw{"wrr"}
	shl		$tmp5740 $const7 $tmp5739 	%argrw{"wrr"}
	sub		$tmp5741 $tmp5740 $const7 	%argrw{"wrr"}
	assign		$tmp5742 $tmp5741 	%argrw{"wr"}
	div		$tmp5743 $tmp5738 $tmp5742 	%argrw{"wrr"}
	mul		___640_sum ___640_sum $tmp5743 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_texture.h:266
# 		return sum;
	assign		$tmp4455 ___640_sum 	%line{266} %argrw{"wr"}
	return
# intern/cycles/kernel/shaders/node_noise_texture.osl:40
# 		noise_turbulence(point(p[1], p[2], p[0]), basis, detail, hard));
	color		Color Fac $tmp3166 $tmp4455 	%filename{"intern/cycles/kernel/shaders/node_noise_texture.osl"} %line{40} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_noise_texture.osl:42
# 	return fac;
	assign		Fac Fac 	%line{42} %argrw{"wr"}
	end
