OpenShadingLanguage 1.00
# Compiled by oslc 1.3.2
shader node_subsurface_scattering
param	color	Color	0.80000001 0.80000001 0.80000001 		 %read{5,5} %write{2147483647,-1}
param	float	Scale	1 		 %read{3,3} %write{2147483647,-1}
param	vector	Radius	0.1 0.1 0.1 		 %read{3,3} %write{2147483647,-1}
param	float	IOR	1.3 		 %read{2,2} %write{2147483647,-1}
param	normal	Normal	0 0 0 		 %read{2147483647,-1} %write{0,0}
oparam	closure color	BSSRDF			 %read{2147483647,-1} %write{5,5}
global	normal	N	 %read{0,4} %write{2147483647,-1}
local	float	eta	 %read{2147483647,-1} %write{2,2}
const	float	$const1	1		 %read{1,1} %write{2147483647,-1}
const	float	$const2	9.9999997e-06		 %read{1,1} %write{2147483647,-1}
temp	float	$tmp1	 %read{2,2} %write{1,1}
temp	closure color	$tmp2	 %read{5,5} %write{4,4}
temp	vector	$tmp3	 %read{4,4} %write{3,3}
const	string	$const3	"bssrdf_cubic"		 %read{4,4} %write{2147483647,-1}
code Normal
# intern/cycles/kernel/shaders/node_subsurface_scattering.osl:26
# 	normal Normal = N,
	assign		Normal N 	%filename{"intern/cycles/kernel/shaders/node_subsurface_scattering.osl"} %line{26} %argrw{"wr"}
code ___main___
# intern/cycles/kernel/shaders/node_subsurface_scattering.osl:29
# 	float eta = max(IOR, 1.0 + 1e-5);
	add		$tmp1 $const1 $const2 	%filename{"intern/cycles/kernel/shaders/node_subsurface_scattering.osl"} %line{29} %argrw{"wrr"}
	max		eta IOR $tmp1 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_subsurface_scattering.osl:31
# 	BSSRDF = Color * bssrdf_cubic(N, Scale * Radius);
	mul		$tmp3 Scale Radius 	%line{31} %argrw{"wrr"}
	closure		$tmp2 $const3 N $tmp3 	%argrw{"wrrr"}
	mul		BSSRDF $tmp2 Color 	%argrw{"wrr"}
	end
