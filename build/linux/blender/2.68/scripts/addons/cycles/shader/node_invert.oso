OpenShadingLanguage 1.00
# Compiled by oslc 1.3.2
shader node_invert
param	float	Fac	1 		 %read{2,4} %write{2147483647,-1}
param	color	ColorIn	0.80000001 0.80000001 0.80000001 		 %read{0,3} %write{2147483647,-1}
oparam	color	ColorOut	0.80000001 0.80000001 0.80000001 		 %read{2147483647,-1} %write{5,5}
local	color	ColorInv	 %read{4,4} %write{0,0}
const	color	$const1	1 1 1		 %read{0,0} %write{2147483647,-1}
const	string	$const2	"mix"		 %read{1,1} %write{2147483647,-1}
temp	float	$tmp2	 %read{3,3} %write{2,2}
const	float	$const4	1		 %read{2,2} %write{2147483647,-1}
temp	color	$tmp3	 %read{5,5} %write{3,3}
temp	color	$tmp4	 %read{5,5} %write{4,4}
code ___main___
# intern/cycles/kernel/shaders/node_invert.osl:26
# 	color ColorInv = color(1.0) - ColorIn;
	sub		ColorInv $const1 ColorIn 	%filename{"intern/cycles/kernel/shaders/node_invert.osl"} %line{26} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_invert.osl:27
# 	ColorOut = mix(ColorIn, ColorInv, Fac);
	functioncall	$const2 6 	%line{27} %argrw{"r"}
# intern/cycles/kernel/shaders/stdosl.h:150
# PERCOMP1 (trunc)
	sub		$tmp2 $const4 Fac 	%filename{"intern/cycles/kernel/shaders/stdosl.h"} %line{150} %argrw{"wrr"}
	mul		$tmp3 ColorIn $tmp2 	%argrw{"wrr"}
	mul		$tmp4 ColorInv Fac 	%argrw{"wrr"}
	add		ColorOut $tmp3 $tmp4 	%argrw{"wrr"}
	end
